19 006 21:06:45 INFO   [wfs.json] - about to encode JSON
19 006 21:06:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[44224.751312214765 : 260103.30063204787, 5966171.627228128 : 6123445.110244878] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 006 21:06:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:45 INFO   [wfs.json] - about to encode JSON
19 006 21:06:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[44224.751312214765 : 260103.30063204787, 5966171.627228128 : 6123445.110244878] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 006 21:06:45 INFO   [wfs.json] - about to encode JSON
19 006 21:06:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[44224.751312214765 : 260103.30063204787, 5966171.627228128 : 6123445.110244878] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 006 21:06:45 INFO   [wfs.json] - about to encode JSON
19 006 21:06:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[44224.751312214765 : 260103.30063204787, 5966171.627228128 : 6123445.110244878] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 006 21:06:45 INFO   [wfs.json] - about to encode JSON
19 006 21:06:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[13743.515706451963 : 294675.3076284367, 5951055.728065207 : 6155722.294266039] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 006 21:06:46 INFO   [wfs.json] - about to encode JSON
19 006 21:06:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[13743.515706451963 : 294675.3076284367, 5951055.728065207 : 6155722.294266039] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 006 21:06:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[13743.515706451963 : 294675.3076284367, 5951055.728065207 : 6155722.294266039] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 006 21:06:46 INFO   [wfs.json] - about to encode JSON
19 006 21:06:46 INFO   [wfs.json] - about to encode JSON
19 006 21:06:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[13743.515706451963 : 294675.3076284367, 5951055.728065207 : 6155722.294266039] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 006 21:06:46 INFO   [wfs.json] - about to encode JSON
19 006 21:06:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[13743.515706451963 : 294675.3076284367, 5951055.728065207 : 6155722.294266039] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 006 21:06:46 INFO   [wfs.json] - about to encode JSON
19 006 21:06:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-593604.2966528 : 645854.6946600542, 5827536.041975446 : 6730516.135339873] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 006 21:06:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:55 INFO   [wfs.json] - about to encode JSON
19 006 21:06:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-593604.2966528 : 645854.6946600542, 5827536.041975446 : 6730516.135339873] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 006 21:06:55 INFO   [wfs.json] - about to encode JSON
19 006 21:06:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-593604.2966528 : 645854.6946600542, 5827536.041975446 : 6730516.135339873] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 006 21:06:55 INFO   [wfs.json] - about to encode JSON
19 006 21:06:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-593604.2966528 : 645854.6946600542, 5827536.041975446 : 6730516.135339873] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 006 21:06:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-593604.2966528 : 645854.6946600542, 5827536.041975446 : 6730516.135339873] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 006 21:06:55 INFO   [wfs.json] - about to encode JSON
19 006 21:06:55 INFO   [wfs.json] - about to encode JSON
19 006 21:06:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-628305.5123329384 : 611153.478979916, 5775372.033041411 : 6678352.126405838] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 006 21:06:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-628305.5123329384 : 611153.478979916, 5775372.033041411 : 6678352.126405838] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 006 21:06:57 INFO   [wfs.json] - about to encode JSON
19 006 21:06:57 INFO   [wfs.json] - about to encode JSON
19 006 21:06:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-628305.5123329384 : 611153.478979916, 5775372.033041411 : 6678352.126405838] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 006 21:06:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-628305.5123329384 : 611153.478979916, 5775372.033041411 : 6678352.126405838] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 006 21:06:57 INFO   [wfs.json] - about to encode JSON
19 006 21:06:57 INFO   [wfs.json] - about to encode JSON
19 006 21:06:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 006 21:06:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-628305.5123329384 : 611153.478979916, 5775372.033041411 : 6678352.126405838] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 006 21:06:57 INFO   [wfs.json] - about to encode JSON
19 009 21:09:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 009 21:09:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 009 21:09:14 INFO   [wfs.json] - about to encode JSON
19 009 21:09:14 INFO   [wfs.json] - about to encode JSON
19 009 21:09:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 009 21:09:14 INFO   [wfs.json] - about to encode JSON
19 009 21:09:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 009 21:09:14 INFO   [wfs.json] - about to encode JSON
19 009 21:09:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 009 21:09:14 INFO   [wfs.json] - about to encode JSON
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[209648.89263121178 : 219912.2996586117, 6077921.508691441 : 6085398.684056496] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 009 21:09:16 INFO   [wfs.json] - about to encode JSON
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[209648.89263121178 : 219912.2996586117, 6077921.508691441 : 6085398.684056496] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 009 21:09:16 INFO   [wfs.json] - about to encode JSON
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[209648.89263121178 : 219912.2996586117, 6077921.508691441 : 6085398.684056496] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:16 INFO   [wfs.json] - about to encode JSON
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[209648.89263121178 : 219912.2996586117, 6077921.508691441 : 6085398.684056496] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 009 21:09:16 INFO   [wfs.json] - about to encode JSON
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[209648.89263121178 : 219912.2996586117, 6077921.508691441 : 6085398.684056496] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 009 21:09:16 INFO   [wfs.json] - about to encode JSON
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[203726.32373845592 : 224218.90935678783, 6075277.924960503 : 6090207.339329688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 009 21:09:16 INFO   [wfs.json] - about to encode JSON
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[203726.32373845592 : 224218.90935678783, 6075277.924960503 : 6090207.339329688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 009 21:09:16 INFO   [wfs.json] - about to encode JSON
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[203726.32373845592 : 224218.90935678783, 6075277.924960503 : 6090207.339329688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 009 21:09:16 INFO   [wfs.json] - about to encode JSON
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[203726.32373845592 : 224218.90935678783, 6075277.924960503 : 6090207.339329688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 009 21:09:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[203726.32373845592 : 224218.90935678783, 6075277.924960503 : 6090207.339329688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 009 21:09:16 INFO   [wfs.json] - about to encode JSON
19 009 21:09:16 INFO   [wfs.json] - about to encode JSON
19 009 21:09:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205083.19326474066 : 225749.37166480403, 6076279.522874573 : 6091335.404377688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 009 21:09:54 INFO   [wfs.json] - about to encode JSON
19 009 21:09:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205083.19326474066 : 225749.37166480403, 6076279.522874573 : 6091335.404377688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 009 21:09:54 INFO   [wfs.json] - about to encode JSON
19 009 21:09:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205083.19326474066 : 225749.37166480403, 6076279.522874573 : 6091335.404377688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 009 21:09:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205083.19326474066 : 225749.37166480403, 6076279.522874573 : 6091335.404377688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 009 21:09:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:54 INFO   [wfs.json] - about to encode JSON
19 009 21:09:54 INFO   [wfs.json] - about to encode JSON
19 009 21:09:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205083.19326474066 : 225749.37166480403, 6076279.522874573 : 6091335.404377688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 009 21:09:54 INFO   [wfs.json] - about to encode JSON
19 009 21:09:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[194891.65699489848 : 215557.83539496185, 6071937.556989138 : 6086993.4384922525] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 009 21:09:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[194891.65699489848 : 215557.83539496185, 6071937.556989138 : 6086993.4384922525] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 009 21:09:58 INFO   [wfs.json] - about to encode JSON
19 009 21:09:58 INFO   [wfs.json] - about to encode JSON
19 009 21:09:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[194891.65699489848 : 215557.83539496185, 6071937.556989138 : 6086993.4384922525] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 009 21:09:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:58 INFO   [wfs.json] - about to encode JSON
19 009 21:09:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[194891.65699489848 : 215557.83539496185, 6071937.556989138 : 6086993.4384922525] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 009 21:09:58 INFO   [wfs.json] - about to encode JSON
19 009 21:09:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 009 21:09:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[194891.65699489848 : 215557.83539496185, 6071937.556989138 : 6086993.4384922525] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 009 21:09:58 INFO   [wfs.json] - about to encode JSON
19 014 21:14:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[175729.2278695604 : 196395.40626962375, 6062849.997436617 : 6077905.878939731] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 014 21:14:43 INFO   [wfs.json] - about to encode JSON
19 014 21:14:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[175729.2278695604 : 196395.40626962375, 6062849.997436617 : 6077905.878939731] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 014 21:14:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[175729.2278695604 : 196395.40626962375, 6062849.997436617 : 6077905.878939731] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 014 21:14:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:43 INFO   [wfs.json] - about to encode JSON
19 014 21:14:43 INFO   [wfs.json] - about to encode JSON
19 014 21:14:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[175729.2278695604 : 196395.40626962375, 6062849.997436617 : 6077905.878939731] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 014 21:14:43 INFO   [wfs.json] - about to encode JSON
19 014 21:14:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[175729.2278695604 : 196395.40626962375, 6062849.997436617 : 6077905.878939731] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 014 21:14:43 INFO   [wfs.json] - about to encode JSON
19 014 21:14:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[168713.51202583153 : 189379.6904258949, 6058706.412850207 : 6073762.294353321] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 014 21:14:44 INFO   [wfs.json] - about to encode JSON
19 014 21:14:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[168713.51202583153 : 189379.6904258949, 6058706.412850207 : 6073762.294353321] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 014 21:14:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:44 INFO   [wfs.json] - about to encode JSON
19 014 21:14:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[168713.51202583153 : 189379.6904258949, 6058706.412850207 : 6073762.294353321] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 014 21:14:44 INFO   [wfs.json] - about to encode JSON
19 014 21:14:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[168713.51202583153 : 189379.6904258949, 6058706.412850207 : 6073762.294353321] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 014 21:14:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[168713.51202583153 : 189379.6904258949, 6058706.412850207 : 6073762.294353321] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 014 21:14:44 INFO   [wfs.json] - about to encode JSON
19 014 21:14:44 INFO   [wfs.json] - about to encode JSON
19 014 21:14:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[172534.26123904114 : 193200.4396391045, 6050989.264402621 : 6066045.145905736] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 014 21:14:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[172534.26123904114 : 193200.4396391045, 6050989.264402621 : 6066045.145905736] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 014 21:14:46 INFO   [wfs.json] - about to encode JSON
19 014 21:14:46 INFO   [wfs.json] - about to encode JSON
19 014 21:14:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[172534.26123904114 : 193200.4396391045, 6050989.264402621 : 6066045.145905736] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 014 21:14:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[172534.26123904114 : 193200.4396391045, 6050989.264402621 : 6066045.145905736] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 014 21:14:46 INFO   [wfs.json] - about to encode JSON
19 014 21:14:46 INFO   [wfs.json] - about to encode JSON
19 014 21:14:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[172534.26123904114 : 193200.4396391045, 6050989.264402621 : 6066045.145905736] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 014 21:14:46 INFO   [wfs.json] - about to encode JSON
19 014 21:14:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[166679.78851300373 : 187345.9669130671, 6047504.459208551 : 6062560.340711665] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 014 21:14:50 INFO   [wfs.json] - about to encode JSON
19 014 21:14:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[166679.78851300373 : 187345.9669130671, 6047504.459208551 : 6062560.340711665] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 014 21:14:50 INFO   [wfs.json] - about to encode JSON
19 014 21:14:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[166679.78851300373 : 187345.9669130671, 6047504.459208551 : 6062560.340711665] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 014 21:14:50 INFO   [wfs.json] - about to encode JSON
19 014 21:14:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[166679.78851300373 : 187345.9669130671, 6047504.459208551 : 6062560.340711665] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 014 21:14:50 INFO   [wfs.json] - about to encode JSON
19 014 21:14:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[166679.78851300373 : 187345.9669130671, 6047504.459208551 : 6062560.340711665] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 014 21:14:50 INFO   [wfs.json] - about to encode JSON
19 014 21:14:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[154534.78402491967 : 175200.96242498304, 6039300.852403392 : 6054356.733906507] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 014 21:14:51 INFO   [wfs.json] - about to encode JSON
19 014 21:14:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[154534.78402491967 : 175200.96242498304, 6039300.852403392 : 6054356.733906507] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 014 21:14:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[154534.78402491967 : 175200.96242498304, 6039300.852403392 : 6054356.733906507] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 014 21:14:51 INFO   [wfs.json] - about to encode JSON
19 014 21:14:51 INFO   [wfs.json] - about to encode JSON
19 014 21:14:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[154534.78402491967 : 175200.96242498304, 6039300.852403392 : 6054356.733906507] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 014 21:14:51 INFO   [wfs.json] - about to encode JSON
19 014 21:14:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 014 21:14:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[154534.78402491967 : 175200.96242498304, 6039300.852403392 : 6054356.733906507] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 014 21:14:51 INFO   [wfs.json] - about to encode JSON
19 016 21:16:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 016 21:16:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 016 21:16:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 016 21:16:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 016 21:16:47 INFO   [wfs.json] - about to encode JSON
19 016 21:16:47 INFO   [wfs.json] - about to encode JSON
19 016 21:16:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 016 21:16:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 016 21:16:47 INFO   [wfs.json] - about to encode JSON
19 016 21:16:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 016 21:16:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 016 21:16:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 016 21:16:47 INFO   [wfs.json] - about to encode JSON
19 016 21:16:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 016 21:16:47 INFO   [wfs.json] - about to encode JSON
19 020 21:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 020 21:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 020 21:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 020 21:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 020 21:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 020 21:20:36 INFO   [wfs.json] - about to encode JSON
19 020 21:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 020 21:20:36 INFO   [wfs.json] - about to encode JSON
19 020 21:20:36 INFO   [wfs.json] - about to encode JSON
19 020 21:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 020 21:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 020 21:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 020 21:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 020 21:20:36 INFO   [wfs.json] - about to encode JSON
19 020 21:20:36 INFO   [wfs.json] - about to encode JSON
19 025 21:25:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 025 21:25:14 INFO   [wfs.json] - about to encode JSON
19 025 21:25:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 025 21:25:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:14 INFO   [wfs.json] - about to encode JSON
19 025 21:25:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 025 21:25:14 INFO   [wfs.json] - about to encode JSON
19 025 21:25:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 025 21:25:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 025 21:25:14 INFO   [wfs.json] - about to encode JSON
19 025 21:25:14 INFO   [wfs.json] - about to encode JSON
19 025 21:25:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 5998772.438747424 : 6001041.663024641] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 025 21:25:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 5998772.438747424 : 6001041.663024641] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 025 21:25:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 5998772.438747424 : 6001041.663024641] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 025 21:25:18 INFO   [wfs.json] - about to encode JSON
19 025 21:25:18 INFO   [wfs.json] - about to encode JSON
19 025 21:25:18 INFO   [wfs.json] - about to encode JSON
19 025 21:25:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 5998772.438747424 : 6001041.663024641] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 025 21:25:18 INFO   [wfs.json] - about to encode JSON
19 025 21:25:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 5998772.438747424 : 6001041.663024641] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 025 21:25:18 INFO   [wfs.json] - about to encode JSON
19 025 21:25:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76562.60053474717 : 79677.40943736809, 5999347.911170616 : 6001617.135447833] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 025 21:25:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76562.60053474717 : 79677.40943736809, 5999347.911170616 : 6001617.135447833] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 025 21:25:22 INFO   [wfs.json] - about to encode JSON
19 025 21:25:22 INFO   [wfs.json] - about to encode JSON
19 025 21:25:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76562.60053474717 : 79677.40943736809, 5999347.911170616 : 6001617.135447833] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 025 21:25:22 INFO   [wfs.json] - about to encode JSON
19 025 21:25:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76562.60053474717 : 79677.40943736809, 5999347.911170616 : 6001617.135447833] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 025 21:25:22 INFO   [wfs.json] - about to encode JSON
19 025 21:25:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76562.60053474717 : 79677.40943736809, 5999347.911170616 : 6001617.135447833] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 025 21:25:22 INFO   [wfs.json] - about to encode JSON
19 025 21:25:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76587.10187060192 : 79701.91077322284, 5999306.4385135695 : 6001575.6627907865] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 025 21:25:27 INFO   [wfs.json] - about to encode JSON
19 025 21:25:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76587.10187060192 : 79701.91077322284, 5999306.4385135695 : 6001575.6627907865] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 025 21:25:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76587.10187060192 : 79701.91077322284, 5999306.4385135695 : 6001575.6627907865] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 025 21:25:27 INFO   [wfs.json] - about to encode JSON
19 025 21:25:27 INFO   [wfs.json] - about to encode JSON
19 025 21:25:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76587.10187060192 : 79701.91077322284, 5999306.4385135695 : 6001575.6627907865] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 025 21:25:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76587.10187060192 : 79701.91077322284, 5999306.4385135695 : 6001575.6627907865] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 025 21:25:27 INFO   [wfs.json] - about to encode JSON
19 025 21:25:27 INFO   [wfs.json] - about to encode JSON
19 025 21:25:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76712.46452663993 : 79827.27342926085, 5998973.085946672 : 6001242.310223889] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 025 21:25:52 INFO   [wfs.json] - about to encode JSON
19 025 21:25:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76712.46452663993 : 79827.27342926085, 5998973.085946672 : 6001242.310223889] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 025 21:25:52 INFO   [wfs.json] - about to encode JSON
19 025 21:25:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76712.46452663993 : 79827.27342926085, 5998973.085946672 : 6001242.310223889] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 025 21:25:52 INFO   [wfs.json] - about to encode JSON
19 025 21:25:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76712.46452663993 : 79827.27342926085, 5998973.085946672 : 6001242.310223889] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 025 21:25:52 INFO   [wfs.json] - about to encode JSON
19 025 21:25:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 025 21:25:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76712.46452663993 : 79827.27342926085, 5998973.085946672 : 6001242.310223889] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 025 21:25:52 INFO   [wfs.json] - about to encode JSON
19 026 21:26:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[43547.30511467799 : 97541.3703387088, 5989218.6272960985 : 6028554.794445508] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 026 21:26:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:02 INFO   [wfs.json] - about to encode JSON
19 026 21:26:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[43547.30511467799 : 97541.3703387088, 5989218.6272960985 : 6028554.794445508] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 026 21:26:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[43547.30511467799 : 97541.3703387088, 5989218.6272960985 : 6028554.794445508] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 026 21:26:02 INFO   [wfs.json] - about to encode JSON
19 026 21:26:02 INFO   [wfs.json] - about to encode JSON
19 026 21:26:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[43547.30511467799 : 97541.3703387088, 5989218.6272960985 : 6028554.794445508] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 026 21:26:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[43547.30511467799 : 97541.3703387088, 5989218.6272960985 : 6028554.794445508] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 026 21:26:02 INFO   [wfs.json] - about to encode JSON
19 026 21:26:02 INFO   [wfs.json] - about to encode JSON
19 026 21:26:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-18644.912358035985 : 133889.4342565404, 5972593.733196468 : 6083719.215776105] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 026 21:26:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:03 INFO   [wfs.json] - about to encode JSON
19 026 21:26:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-18644.912358035985 : 133889.4342565404, 5972593.733196468 : 6083719.215776105] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 026 21:26:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-18644.912358035985 : 133889.4342565404, 5972593.733196468 : 6083719.215776105] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 026 21:26:03 INFO   [wfs.json] - about to encode JSON
19 026 21:26:03 INFO   [wfs.json] - about to encode JSON
19 026 21:26:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-18644.912358035985 : 133889.4342565404, 5972593.733196468 : 6083719.215776105] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 026 21:26:03 INFO   [wfs.json] - about to encode JSON
19 026 21:26:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-18644.912358035985 : 133889.4342565404, 5972593.733196468 : 6083719.215776105] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 026 21:26:03 INFO   [wfs.json] - about to encode JSON
19 026 21:26:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[20424.467833120852 : 172958.81444769725, 5970956.094505821 : 6082081.577085459] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 026 21:26:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:05 INFO   [wfs.json] - about to encode JSON
19 026 21:26:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[20424.467833120852 : 172958.81444769725, 5970956.094505821 : 6082081.577085459] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 026 21:26:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[20424.467833120852 : 172958.81444769725, 5970956.094505821 : 6082081.577085459] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 026 21:26:05 INFO   [wfs.json] - about to encode JSON
19 026 21:26:05 INFO   [wfs.json] - about to encode JSON
19 026 21:26:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[20424.467833120852 : 172958.81444769725, 5970956.094505821 : 6082081.577085459] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 026 21:26:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[20424.467833120852 : 172958.81444769725, 5970956.094505821 : 6082081.577085459] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 026 21:26:05 INFO   [wfs.json] - about to encode JSON
19 026 21:26:05 INFO   [wfs.json] - about to encode JSON
19 026 21:26:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-144191.05517567613 : 251996.68758358964, 5904624.073316126 : 6193257.781614671] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 026 21:26:06 INFO   [wfs.json] - about to encode JSON
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-144191.05517567613 : 251996.68758358964, 5904624.073316126 : 6193257.781614671] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-144191.05517567613 : 251996.68758358964, 5904624.073316126 : 6193257.781614671] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-144191.05517567613 : 251996.68758358964, 5904624.073316126 : 6193257.781614671] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 026 21:26:07 INFO   [wfs.json] - about to encode JSON
19 026 21:26:07 INFO   [wfs.json] - about to encode JSON
19 026 21:26:07 INFO   [wfs.json] - about to encode JSON
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-144191.05517567613 : 251996.68758358964, 5904624.073316126 : 6193257.781614671] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 026 21:26:07 INFO   [wfs.json] - about to encode JSON
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-104997.63583829477 : 291190.10692097095, 5906143.198096645 : 6194776.90639519] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 026 21:26:07 INFO   [wfs.json] - about to encode JSON
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-104997.63583829477 : 291190.10692097095, 5906143.198096645 : 6194776.90639519] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:07 INFO   [wfs.json] - about to encode JSON
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-104997.63583829477 : 291190.10692097095, 5906143.198096645 : 6194776.90639519] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 026 21:26:07 INFO   [wfs.json] - about to encode JSON
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-104997.63583829477 : 291190.10692097095, 5906143.198096645 : 6194776.90639519] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 026 21:26:07 INFO   [wfs.json] - about to encode JSON
19 026 21:26:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-104997.63583829477 : 291190.10692097095, 5906143.198096645 : 6194776.90639519] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 026 21:26:07 INFO   [wfs.json] - about to encode JSON
19 026 21:26:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[17251.376304275895 : 413439.11906354164, 5936586.718803518 : 6225220.427102064] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 026 21:26:34 INFO   [wfs.json] - about to encode JSON
19 026 21:26:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[17251.376304275895 : 413439.11906354164, 5936586.718803518 : 6225220.427102064] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 026 21:26:34 INFO   [wfs.json] - about to encode JSON
19 026 21:26:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[17251.376304275895 : 413439.11906354164, 5936586.718803518 : 6225220.427102064] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 026 21:26:34 INFO   [wfs.json] - about to encode JSON
19 026 21:26:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[17251.376304275895 : 413439.11906354164, 5936586.718803518 : 6225220.427102064] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 026 21:26:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:34 INFO   [wfs.json] - about to encode JSON
19 026 21:26:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[17251.376304275895 : 413439.11906354164, 5936586.718803518 : 6225220.427102064] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 026 21:26:34 INFO   [wfs.json] - about to encode JSON
19 026 21:26:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 026 21:26:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 026 21:26:36 INFO   [wfs.json] - about to encode JSON
19 026 21:26:36 INFO   [wfs.json] - about to encode JSON
19 026 21:26:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 026 21:26:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 026 21:26:36 INFO   [wfs.json] - about to encode JSON
19 026 21:26:36 INFO   [wfs.json] - about to encode JSON
19 026 21:26:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 026 21:26:36 INFO   [wfs.json] - about to encode JSON
19 026 21:26:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 6000415.740459693 : 6002684.96473691] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 026 21:26:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 6000415.740459693 : 6002684.96473691] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 026 21:26:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 6000415.740459693 : 6002684.96473691] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 026 21:26:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:37 INFO   [wfs.json] - about to encode JSON
19 026 21:26:37 INFO   [wfs.json] - about to encode JSON
19 026 21:26:37 INFO   [wfs.json] - about to encode JSON
19 026 21:26:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 6000415.740459693 : 6002684.96473691] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 026 21:26:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 6000415.740459693 : 6002684.96473691] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 026 21:26:37 INFO   [wfs.json] - about to encode JSON
19 026 21:26:37 INFO   [wfs.json] - about to encode JSON
19 026 21:26:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 026 21:26:48 INFO   [wfs.json] - about to encode JSON
19 026 21:26:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 026 21:26:48 INFO   [wfs.json] - about to encode JSON
19 026 21:26:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 026 21:26:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 026 21:26:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 026 21:26:48 INFO   [wfs.json] - about to encode JSON
19 026 21:26:48 INFO   [wfs.json] - about to encode JSON
19 026 21:26:48 INFO   [wfs.json] - about to encode JSON
19 026 21:26:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 026 21:26:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 026 21:26:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 026 21:26:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 026 21:26:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:50 INFO   [wfs.json] - about to encode JSON
19 026 21:26:50 INFO   [wfs.json] - about to encode JSON
19 026 21:26:50 INFO   [wfs.json] - about to encode JSON
19 026 21:26:50 INFO   [wfs.json] - about to encode JSON
19 026 21:26:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76757.84901218423 : 79872.65791480515, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 026 21:26:50 INFO   [wfs.json] - about to encode JSON
19 026 21:26:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76499.87404172176 : 79614.68294434268, 5999377.663445662 : 6001646.887722879] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 026 21:26:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:57 INFO   [wfs.json] - about to encode JSON
19 026 21:26:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76499.87404172176 : 79614.68294434268, 5999377.663445662 : 6001646.887722879] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 026 21:26:57 INFO   [wfs.json] - about to encode JSON
19 026 21:26:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76499.87404172176 : 79614.68294434268, 5999377.663445662 : 6001646.887722879] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 026 21:26:57 INFO   [wfs.json] - about to encode JSON
19 026 21:26:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76499.87404172176 : 79614.68294434268, 5999377.663445662 : 6001646.887722879] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 026 21:26:57 INFO   [wfs.json] - about to encode JSON
19 026 21:26:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 026 21:26:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76499.87404172176 : 79614.68294434268, 5999377.663445662 : 6001646.887722879] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 026 21:26:57 INFO   [wfs.json] - about to encode JSON
19 027 21:27:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 027 21:27:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 027 21:27:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 027 21:27:16 INFO   [wfs.json] - about to encode JSON
19 027 21:27:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 027 21:27:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 027 21:27:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 027 21:27:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 027 21:27:16 INFO   [wfs.json] - about to encode JSON
19 027 21:27:16 INFO   [wfs.json] - about to encode JSON
19 027 21:27:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 027 21:27:16 INFO   [wfs.json] - about to encode JSON
19 027 21:27:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 027 21:27:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 027 21:27:16 INFO   [wfs.json] - about to encode JSON
19 027 21:27:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 027 21:27:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 027 21:27:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 027 21:27:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 027 21:27:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 027 21:27:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 027 21:27:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 027 21:27:18 INFO   [wfs.json] - about to encode JSON
19 027 21:27:18 INFO   [wfs.json] - about to encode JSON
19 027 21:27:18 INFO   [wfs.json] - about to encode JSON
19 027 21:27:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 027 21:27:18 INFO   [wfs.json] - about to encode JSON
19 027 21:27:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 027 21:27:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 027 21:27:18 INFO   [wfs.json] - about to encode JSON
19 030 21:30:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 030 21:30:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 030 21:30:05 INFO   [wfs.json] - about to encode JSON
19 030 21:30:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 030 21:30:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 030 21:30:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 030 21:30:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 030 21:30:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 030 21:30:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 030 21:30:05 INFO   [wfs.json] - about to encode JSON
19 030 21:30:05 INFO   [wfs.json] - about to encode JSON
19 030 21:30:05 INFO   [wfs.json] - about to encode JSON
19 030 21:30:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 030 21:30:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 030 21:30:05 INFO   [wfs.json] - about to encode JSON
19 030 21:30:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 030 21:30:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 030 21:30:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 030 21:30:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 030 21:30:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 030 21:30:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 030 21:30:20 INFO   [wfs.json] - about to encode JSON
19 030 21:30:20 INFO   [wfs.json] - about to encode JSON
19 030 21:30:20 INFO   [wfs.json] - about to encode JSON
19 030 21:30:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 030 21:30:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 030 21:30:20 INFO   [wfs.json] - about to encode JSON
19 030 21:30:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 030 21:30:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 030 21:30:20 INFO   [wfs.json] - about to encode JSON
19 035 21:35:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 035 21:35:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 035 21:35:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 035 21:35:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 035 21:35:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 035 21:35:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 035 21:35:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 035 21:35:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 035 21:35:16 INFO   [wfs.json] - about to encode JSON
19 035 21:35:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 035 21:35:16 INFO   [wfs.json] - about to encode JSON
19 035 21:35:16 INFO   [wfs.json] - about to encode JSON
19 035 21:35:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 035 21:35:16 INFO   [wfs.json] - about to encode JSON
19 035 21:35:16 INFO   [wfs.json] - about to encode JSON
19 035 21:35:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 035 21:35:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 035 21:35:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 035 21:35:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 035 21:35:20 INFO   [wfs.json] - about to encode JSON
19 035 21:35:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 035 21:35:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 035 21:35:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 035 21:35:20 INFO   [wfs.json] - about to encode JSON
19 035 21:35:20 INFO   [wfs.json] - about to encode JSON
19 035 21:35:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 035 21:35:20 INFO   [wfs.json] - about to encode JSON
19 035 21:35:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 035 21:35:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 035 21:35:20 INFO   [wfs.json] - about to encode JSON
19 036 21:36:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 21:36:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 036 21:36:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 21:36:36 INFO   [wfs.json] - about to encode JSON
19 036 21:36:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 036 21:36:36 INFO   [wfs.json] - about to encode JSON
19 036 21:36:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 21:36:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 21:36:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 21:36:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 036 21:36:36 INFO   [wfs.json] - about to encode JSON
19 036 21:36:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 036 21:36:36 INFO   [wfs.json] - about to encode JSON
19 036 21:36:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 036 21:36:36 INFO   [wfs.json] - about to encode JSON
19 036 21:36:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 21:36:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 21:36:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 036 21:36:40 INFO   [wfs.json] - about to encode JSON
19 036 21:36:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 036 21:36:40 INFO   [wfs.json] - about to encode JSON
19 036 21:36:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 21:36:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 21:36:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 21:36:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 036 21:36:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 036 21:36:40 INFO   [wfs.json] - about to encode JSON
19 036 21:36:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 036 21:36:40 INFO   [wfs.json] - about to encode JSON
19 036 21:36:40 INFO   [wfs.json] - about to encode JSON
19 037 21:37:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 21:37:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 037 21:37:56 INFO   [wfs.json] - about to encode JSON
19 037 21:37:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 21:37:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 21:37:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 21:37:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 21:37:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 037 21:37:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 037 21:37:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 037 21:37:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 037 21:37:56 INFO   [wfs.json] - about to encode JSON
19 037 21:37:56 INFO   [wfs.json] - about to encode JSON
19 037 21:37:56 INFO   [wfs.json] - about to encode JSON
19 037 21:37:56 INFO   [wfs.json] - about to encode JSON
19 038 21:38:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 038 21:38:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 038 21:38:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 038 21:38:37 INFO   [wfs.json] - about to encode JSON
19 038 21:38:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 038 21:38:37 INFO   [wfs.json] - about to encode JSON
19 038 21:38:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 038 21:38:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 038 21:38:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 038 21:38:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 038 21:38:37 INFO   [wfs.json] - about to encode JSON
19 038 21:38:37 INFO   [wfs.json] - about to encode JSON
19 038 21:38:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 038 21:38:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 038 21:38:37 INFO   [wfs.json] - about to encode JSON
19 038 21:38:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 038 21:38:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 038 21:38:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 038 21:38:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 038 21:38:44 INFO   [wfs.json] - about to encode JSON
19 038 21:38:44 INFO   [wfs.json] - about to encode JSON
19 038 21:38:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 038 21:38:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 038 21:38:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 038 21:38:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 038 21:38:44 INFO   [wfs.json] - about to encode JSON
19 038 21:38:44 INFO   [wfs.json] - about to encode JSON
19 038 21:38:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 038 21:38:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 038 21:38:44 INFO   [wfs.json] - about to encode JSON
19 038 21:38:55 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: Schema 'universit__d_orleans_test' does not exist.
19 038 21:38:55 WARN   [geoserver.catalog] - Unable to flush 'toto:universit__d_orleans_test
java.io.IOException: Schema 'universit__d_orleans_test' does not exist.
	at org.geotools.data.store.ContentDataStore.ensureEntry(ContentDataStore.java:545)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:336)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:308)
	at org.geoserver.catalog.ResourcePool.flushState(ResourcePool.java:2682)
	at org.geoserver.catalog.ResourcePool.flushDataStore(ResourcePool.java:2656)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:945)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.web.CatalogIconFactory.getSpecificLayerIcon(CatalogIconFactory.java:109)
	at org.geoserver.web.data.layer.LayerPage$1.getComponentForProperty(LayerPage.java:71)
	at org.geoserver.web.wicket.GeoServerTablePanel$5.populateItem(GeoServerTablePanel.java:292)
	at org.apache.wicket.markup.html.list.ListView.onPopulate(ListView.java:523)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:124)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:143)
	at org.apache.wicket.markup.repeater.AbstractPageableView.onBeforeRender(AbstractPageableView.java:115)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Page.onBeforeRender(Page.java:801)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.Component.internalPrepareForRender(Component.java:2236)
	at org.apache.wicket.Page.internalPrepareForRender(Page.java:242)
	at org.apache.wicket.Component.render(Component.java:2327)
	at org.apache.wicket.Page.renderPage(Page.java:1018)
	at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:124)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:236)
	at org.apache.wicket.core.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:175)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:137)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:331)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
19 039 21:39:00 INFO   [file.FileBlobStore] - /usr/local/tomcat/temp/geowebcache/toto_map_services does not exist or is not writable
19 039 21:39:00 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: Schema 'universit__d_orleans_test' does not exist.
19 039 21:39:00 WARN   [geoserver.catalog] - Unable to flush 'toto:universit__d_orleans_test
java.io.IOException: Schema 'universit__d_orleans_test' does not exist.
	at org.geotools.data.store.ContentDataStore.ensureEntry(ContentDataStore.java:545)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:336)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:308)
	at org.geoserver.catalog.ResourcePool.flushState(ResourcePool.java:2682)
	at org.geoserver.catalog.ResourcePool.flushDataStore(ResourcePool.java:2656)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:945)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.web.CatalogIconFactory.getSpecificLayerIcon(CatalogIconFactory.java:109)
	at org.geoserver.web.data.layer.LayerPage$1.getComponentForProperty(LayerPage.java:71)
	at org.geoserver.web.wicket.GeoServerTablePanel$5.populateItem(GeoServerTablePanel.java:292)
	at org.apache.wicket.markup.html.list.ListView.onPopulate(ListView.java:523)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:124)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:143)
	at org.apache.wicket.markup.repeater.AbstractPageableView.onBeforeRender(AbstractPageableView.java:115)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.Component.internalPrepareForRender(Component.java:2236)
	at org.apache.wicket.Component.prepareForRender(Component.java:2275)
	at org.apache.wicket.page.XmlPartialPageUpdate.writeComponent(XmlPartialPageUpdate.java:98)
	at org.apache.wicket.page.PartialPageUpdate.writeComponents(PartialPageUpdate.java:248)
	at org.apache.wicket.page.PartialPageUpdate.writeTo(PartialPageUpdate.java:161)
	at org.apache.wicket.ajax.AjaxRequestHandler.respond(AjaxRequestHandler.java:359)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:97)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:137)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:158)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:331)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
19 039 21:39:01 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/tomcat/webapps/geoserver/data/gwc-layers. Created: 0, removed: 1, modified: 0
19 039 21:39:13 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer toto:map_services
19 039 21:39:14 WARN   [catalog.impl] - Catalog listener threw exception handling event.
java.lang.IllegalArgumentException: A GeoServerTileLayer named 'toto:map_services' already exists
	at com.google.common.base.Preconditions.checkArgument(Preconditions.java:142)
	at org.geoserver.gwc.layer.CatalogConfiguration.addLayer(CatalogConfiguration.java:457)
	at org.geowebcache.layer.TileLayerDispatcher.addLayer(TileLayerDispatcher.java:189)
	at org.geoserver.gwc.GWC.add(GWC.java:1415)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.createTileLayer(CatalogLayerEventListener.java:171)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleAddEvent(CatalogLayerEventListener.java:152)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1911)
	at org.geoserver.catalog.impl.CatalogImpl.fireAdded(CatalogImpl.java:1864)
	at org.geoserver.catalog.impl.CatalogImpl.added(CatalogImpl.java:1842)
	at org.geoserver.catalog.impl.CatalogImpl.add(CatalogImpl.java:770)
	at org.geoserver.security.SecureCatalogImpl.add(SecureCatalogImpl.java:1271)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.add(AbstractFilteredCatalog.java:588)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.add(AbstractCatalogDecorator.java:431)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.add(LocalWorkspaceCatalog.java:308)
	at org.geoserver.web.data.resource.ResourceConfigurationPage.doSaveInternal(ResourceConfigurationPage.java:243)
	at org.geoserver.web.publish.PublishedConfigurationPage.doSave(PublishedConfigurationPage.java:333)
	at org.geoserver.web.data.resource.ResourceConfigurationPage.doSave(ResourceConfigurationPage.java:93)
	at org.geoserver.web.publish.PublishedConfigurationPage$6.onSubmit(PublishedConfigurationPage.java:296)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1312)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:976)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:797)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:687)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.wicket.RequestListenerInterface.internalInvoke(RequestListenerInterface.java:258)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:216)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.invokeListener(ListenerInterfaceRequestHandler.java:241)
	at org.apache.wicket.core.request.handler.ListenerInterfaceRequestHandler.respond(ListenerInterfaceRequestHandler.java:234)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:158)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:331)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
19 039 21:39:14 INFO   [geoserver.gwc] - Saving GeoSeverTileLayer toto:map_services
19 039 21:39:14 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: Schema 'universit__d_orleans_test' does not exist.
19 039 21:39:14 WARN   [geoserver.catalog] - Unable to flush 'toto:universit__d_orleans_test
java.io.IOException: Schema 'universit__d_orleans_test' does not exist.
	at org.geotools.data.store.ContentDataStore.ensureEntry(ContentDataStore.java:545)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:336)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:308)
	at org.geoserver.catalog.ResourcePool.flushState(ResourcePool.java:2682)
	at org.geoserver.catalog.ResourcePool.flushDataStore(ResourcePool.java:2656)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:945)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.web.CatalogIconFactory.getSpecificLayerIcon(CatalogIconFactory.java:109)
	at org.geoserver.web.data.layer.LayerPage$1.getComponentForProperty(LayerPage.java:71)
	at org.geoserver.web.wicket.GeoServerTablePanel$5.populateItem(GeoServerTablePanel.java:292)
	at org.apache.wicket.markup.html.list.ListView.onPopulate(ListView.java:523)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:124)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:143)
	at org.apache.wicket.markup.repeater.AbstractPageableView.onBeforeRender(AbstractPageableView.java:115)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Page.onBeforeRender(Page.java:801)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.Component.internalPrepareForRender(Component.java:2236)
	at org.apache.wicket.Page.internalPrepareForRender(Page.java:242)
	at org.apache.wicket.Component.render(Component.java:2327)
	at org.apache.wicket.Page.renderPage(Page.java:1018)
	at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:124)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:236)
	at org.apache.wicket.core.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:175)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:137)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:158)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:331)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
19 039 21:39:16 CONFIG [platform.resource] - Notifying ENTRY_MODIFY change on /usr/local/tomcat/webapps/geoserver/data/gwc-layers. Created: 1, removed: 0, modified: 0
19 039 21:39:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 039 21:39:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 039 21:39:21 INFO   [wfs.json] - about to encode JSON
19 039 21:39:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 039 21:39:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 039 21:39:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 039 21:39:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 039 21:39:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 039 21:39:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 039 21:39:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 039 21:39:21 INFO   [wfs.json] - about to encode JSON
19 039 21:39:21 INFO   [wfs.json] - about to encode JSON
19 039 21:39:21 INFO   [wfs.json] - about to encode JSON
19 039 21:39:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 039 21:39:21 INFO   [wfs.json] - about to encode JSON
19 039 21:39:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 039 21:39:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 039 21:39:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 039 21:39:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 039 21:39:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 039 21:39:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 039 21:39:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 039 21:39:25 INFO   [wfs.json] - about to encode JSON
19 039 21:39:25 INFO   [wfs.json] - about to encode JSON
19 039 21:39:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 039 21:39:25 INFO   [wfs.json] - about to encode JSON
19 039 21:39:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 039 21:39:25 INFO   [wfs.json] - about to encode JSON
19 039 21:39:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 039 21:39:25 INFO   [wfs.json] - about to encode JSON
19 041 21:41:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 041 21:41:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 041 21:41:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 041 21:41:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 041 21:41:17 INFO   [wfs.json] - about to encode JSON
19 041 21:41:17 INFO   [wfs.json] - about to encode JSON
19 041 21:41:17 INFO   [wfs.json] - about to encode JSON
19 041 21:41:17 INFO   [wfs.json] - about to encode JSON
19 041 21:41:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 041 21:41:17 INFO   [wfs.json] - about to encode JSON
19 041 21:41:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 041 21:41:29 INFO   [wfs.json] - about to encode JSON
19 041 21:41:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 041 21:41:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 041 21:41:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 041 21:41:29 INFO   [wfs.json] - about to encode JSON
19 041 21:41:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 041 21:41:29 INFO   [wfs.json] - about to encode JSON
19 041 21:41:29 INFO   [wfs.json] - about to encode JSON
19 041 21:41:29 INFO   [wfs.json] - about to encode JSON
19 041 21:41:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 041 21:41:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:53 INFO   [wfs.json] - about to encode JSON
19 041 21:41:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 041 21:41:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 041 21:41:53 INFO   [wfs.json] - about to encode JSON
19 041 21:41:53 INFO   [wfs.json] - about to encode JSON
19 041 21:41:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 041 21:41:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 041 21:41:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 041 21:41:53 INFO   [wfs.json] - about to encode JSON
19 041 21:41:53 INFO   [wfs.json] - about to encode JSON
19 042 21:42:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[74785.97984007395 : 81327.27646839076, 5998584.828829574 : 6003350.344011246] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 042 21:42:17 INFO   [wfs.json] - about to encode JSON
19 042 21:42:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[74785.97984007395 : 81327.27646839076, 5998584.828829574 : 6003350.344011246] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 042 21:42:17 INFO   [wfs.json] - about to encode JSON
19 042 21:42:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[74785.97984007395 : 81327.27646839076, 5998584.828829574 : 6003350.344011246] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 042 21:42:17 INFO   [wfs.json] - about to encode JSON
19 042 21:42:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[74785.97984007395 : 81327.27646839076, 5998584.828829574 : 6003350.344011246] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 042 21:42:17 INFO   [wfs.json] - about to encode JSON
19 042 21:42:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[74785.97984007395 : 81327.27646839076, 5998584.828829574 : 6003350.344011246] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 042 21:42:17 INFO   [wfs.json] - about to encode JSON
19 042 21:42:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212074.59936975033 : 218615.8959980672, 6078520.815361955 : 6083286.330543627] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 042 21:42:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:18 INFO   [wfs.json] - about to encode JSON
19 042 21:42:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212074.59936975033 : 218615.8959980672, 6078520.815361955 : 6083286.330543627] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 042 21:42:18 INFO   [wfs.json] - about to encode JSON
19 042 21:42:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212074.59936975033 : 218615.8959980672, 6078520.815361955 : 6083286.330543627] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 042 21:42:18 INFO   [wfs.json] - about to encode JSON
19 042 21:42:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212074.59936975033 : 218615.8959980672, 6078520.815361955 : 6083286.330543627] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 042 21:42:18 INFO   [wfs.json] - about to encode JSON
19 042 21:42:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212074.59936975033 : 218615.8959980672, 6078520.815361955 : 6083286.330543627] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 042 21:42:18 INFO   [wfs.json] - about to encode JSON
19 042 21:42:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75043.49195442836 : 81584.78858274517, 5998017.25110814 : 6002782.766289812] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 042 21:42:20 INFO   [wfs.json] - about to encode JSON
19 042 21:42:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75043.49195442836 : 81584.78858274517, 5998017.25110814 : 6002782.766289812] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 042 21:42:20 INFO   [wfs.json] - about to encode JSON
19 042 21:42:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75043.49195442836 : 81584.78858274517, 5998017.25110814 : 6002782.766289812] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 042 21:42:20 INFO   [wfs.json] - about to encode JSON
19 042 21:42:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75043.49195442836 : 81584.78858274517, 5998017.25110814 : 6002782.766289812] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 042 21:42:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75043.49195442836 : 81584.78858274517, 5998017.25110814 : 6002782.766289812] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 042 21:42:20 INFO   [wfs.json] - about to encode JSON
19 042 21:42:20 INFO   [wfs.json] - about to encode JSON
19 042 21:42:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 042 21:42:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 042 21:42:38 INFO   [wfs.json] - about to encode JSON
19 042 21:42:38 INFO   [wfs.json] - about to encode JSON
19 042 21:42:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 042 21:42:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 042 21:42:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:38 INFO   [wfs.json] - about to encode JSON
19 042 21:42:38 INFO   [wfs.json] - about to encode JSON
19 042 21:42:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 042 21:42:38 INFO   [wfs.json] - about to encode JSON
19 042 21:42:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 042 21:42:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 042 21:42:44 INFO   [wfs.json] - about to encode JSON
19 042 21:42:44 INFO   [wfs.json] - about to encode JSON
19 042 21:42:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 042 21:42:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 042 21:42:44 INFO   [wfs.json] - about to encode JSON
19 042 21:42:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 042 21:42:44 INFO   [wfs.json] - about to encode JSON
19 042 21:42:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 042 21:42:44 INFO   [wfs.json] - about to encode JSON
19 044 21:44:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 044 21:44:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:38 INFO   [wfs.json] - about to encode JSON
19 044 21:44:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 044 21:44:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 044 21:44:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 044 21:44:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 044 21:44:38 INFO   [wfs.json] - about to encode JSON
19 044 21:44:38 INFO   [wfs.json] - about to encode JSON
19 044 21:44:38 INFO   [wfs.json] - about to encode JSON
19 044 21:44:38 INFO   [wfs.json] - about to encode JSON
19 044 21:44:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 044 21:44:42 INFO   [wfs.json] - about to encode JSON
19 044 21:44:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 044 21:44:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 044 21:44:42 INFO   [wfs.json] - about to encode JSON
19 044 21:44:42 INFO   [wfs.json] - about to encode JSON
19 044 21:44:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 044 21:44:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 044 21:44:42 INFO   [wfs.json] - about to encode JSON
19 044 21:44:42 INFO   [wfs.json] - about to encode JSON
19 044 21:44:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 044 21:44:52 INFO   [wfs.json] - about to encode JSON
19 044 21:44:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 044 21:44:52 INFO   [wfs.json] - about to encode JSON
19 044 21:44:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 044 21:44:52 INFO   [wfs.json] - about to encode JSON
19 044 21:44:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 044 21:44:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 044 21:44:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 044 21:44:52 INFO   [wfs.json] - about to encode JSON
19 044 21:44:52 INFO   [wfs.json] - about to encode JSON
19 045 21:45:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 045 21:45:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 045 21:45:01 INFO   [wfs.json] - about to encode JSON
19 045 21:45:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 045 21:45:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 045 21:45:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 045 21:45:01 INFO   [wfs.json] - about to encode JSON
19 045 21:45:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 045 21:45:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 045 21:45:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 045 21:45:01 INFO   [wfs.json] - about to encode JSON
19 045 21:45:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 045 21:45:01 INFO   [wfs.json] - about to encode JSON
19 045 21:45:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 045 21:45:01 INFO   [wfs.json] - about to encode JSON
19 046 21:46:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 046 21:46:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 046 21:46:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 046 21:46:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 046 21:46:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 046 21:46:26 INFO   [wfs.json] - about to encode JSON
19 046 21:46:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 046 21:46:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 046 21:46:26 INFO   [wfs.json] - about to encode JSON
19 046 21:46:26 INFO   [wfs.json] - about to encode JSON
19 046 21:46:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 046 21:46:26 INFO   [wfs.json] - about to encode JSON
19 046 21:46:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 046 21:46:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 046 21:46:26 INFO   [wfs.json] - about to encode JSON
19 046 21:46:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 046 21:46:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 046 21:46:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 046 21:46:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 046 21:46:34 INFO   [wfs.json] - about to encode JSON
19 046 21:46:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 046 21:46:34 INFO   [wfs.json] - about to encode JSON
19 046 21:46:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 046 21:46:34 INFO   [wfs.json] - about to encode JSON
19 046 21:46:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 046 21:46:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 046 21:46:34 INFO   [wfs.json] - about to encode JSON
19 046 21:46:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 046 21:46:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 046 21:46:34 INFO   [wfs.json] - about to encode JSON
19 047 21:47:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 047 21:47:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 047 21:47:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 047 21:47:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 047 21:47:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 047 21:47:00 INFO   [wfs.json] - about to encode JSON
19 047 21:47:00 INFO   [wfs.json] - about to encode JSON
19 047 21:47:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 047 21:47:00 INFO   [wfs.json] - about to encode JSON
19 047 21:47:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 047 21:47:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 047 21:47:00 INFO   [wfs.json] - about to encode JSON
19 047 21:47:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 047 21:47:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 047 21:47:00 INFO   [wfs.json] - about to encode JSON
19 048 21:48:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 048 21:48:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 048 21:48:35 INFO   [wfs.json] - about to encode JSON
19 048 21:48:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 048 21:48:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 048 21:48:35 INFO   [wfs.json] - about to encode JSON
19 048 21:48:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 048 21:48:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 048 21:48:35 INFO   [wfs.json] - about to encode JSON
19 048 21:48:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 048 21:48:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 048 21:48:36 INFO   [wfs.json] - about to encode JSON
19 048 21:48:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 048 21:48:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 048 21:48:36 INFO   [wfs.json] - about to encode JSON
19 048 21:48:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 048 21:48:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 048 21:48:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 048 21:48:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 048 21:48:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 048 21:48:39 INFO   [wfs.json] - about to encode JSON
19 048 21:48:39 INFO   [wfs.json] - about to encode JSON
19 048 21:48:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 048 21:48:39 INFO   [wfs.json] - about to encode JSON
19 048 21:48:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 048 21:48:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 048 21:48:39 INFO   [wfs.json] - about to encode JSON
19 048 21:48:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 048 21:48:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 048 21:48:39 INFO   [wfs.json] - about to encode JSON
19 049 21:49:28 INFO   [geoserver.wms] - 
Request: getServiceInfo
19 049 21:49:28 ERROR  [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not determine geoserver request from http request org.geoserver.platform.AdvancedDispatchFilter$AdvancedDispatchHttpRequest@5c6fa0c2
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:619)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:258)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:331)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
19 049 21:49:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 049 21:49:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 049 21:49:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 049 21:49:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 049 21:49:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 049 21:49:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 049 21:49:49 INFO   [wfs.json] - about to encode JSON
19 049 21:49:49 INFO   [wfs.json] - about to encode JSON
19 049 21:49:49 INFO   [wfs.json] - about to encode JSON
19 049 21:49:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 049 21:49:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 049 21:49:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 049 21:49:49 INFO   [wfs.json] - about to encode JSON
19 049 21:49:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76756.7358172763 : 79871.54471989723, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 049 21:49:49 INFO   [wfs.json] - about to encode JSON
19 049 21:49:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 049 21:49:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 049 21:49:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 049 21:49:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 049 21:49:53 INFO   [wfs.json] - about to encode JSON
19 049 21:49:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 049 21:49:53 INFO   [wfs.json] - about to encode JSON
19 049 21:49:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 049 21:49:53 INFO   [wfs.json] - about to encode JSON
19 049 21:49:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 049 21:49:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 049 21:49:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 049 21:49:53 INFO   [wfs.json] - about to encode JSON
19 049 21:49:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213787.8432325983 : 216902.65213521922, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 049 21:49:53 INFO   [wfs.json] - about to encode JSON
19 002 22:02:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212279.10119558297 : 217365.906137815, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 002 22:02:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:25 INFO   [wfs.json] - about to encode JSON
19 002 22:02:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212279.10119558297 : 217365.906137815, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 002 22:02:25 INFO   [wfs.json] - about to encode JSON
19 002 22:02:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212279.10119558297 : 217365.906137815, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 002 22:02:25 INFO   [wfs.json] - about to encode JSON
19 002 22:02:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212279.10119558297 : 217365.906137815, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 002 22:02:25 INFO   [wfs.json] - about to encode JSON
19 002 22:02:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212279.10119558297 : 217365.906137815, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 002 22:02:25 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212277.15073356524 : 217367.85659983274, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212277.15073356524 : 217367.85659983274, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212277.15073356524 : 217367.85659983274, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212277.15073356524 : 217367.85659983274, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212277.15073356524 : 217367.85659983274, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212240.09195522845 : 217404.91537816953, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212240.09195522845 : 217404.91537816953, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212240.09195522845 : 217404.91537816953, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212240.09195522845 : 217404.91537816953, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212240.09195522845 : 217404.91537816953, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212187.42948074982 : 217457.57785264816, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212187.42948074982 : 217457.57785264816, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212187.42948074982 : 217457.57785264816, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212187.42948074982 : 217457.57785264816, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212187.42948074982 : 217457.57785264816, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212132.81654425347 : 217512.19078914452, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212132.81654425347 : 217512.19078914452, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212132.81654425347 : 217512.19078914452, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212132.81654425347 : 217512.19078914452, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212132.81654425347 : 217512.19078914452, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212058.69898757982 : 217586.30834581816, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212058.69898757982 : 217586.30834581816, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212058.69898757982 : 217586.30834581816, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212058.69898757982 : 217586.30834581816, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212058.69898757982 : 217586.30834581816, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:29 INFO   [wfs.json] - about to encode JSON
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211869.50417186032 : 217775.50316153766, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211869.50417186032 : 217775.50316153766, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211869.50417186032 : 217775.50316153766, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211869.50417186032 : 217775.50316153766, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211869.50417186032 : 217775.50316153766, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 002 22:02:30 INFO   [wfs.json] - about to encode JSON
19 002 22:02:30 INFO   [wfs.json] - about to encode JSON
19 002 22:02:30 INFO   [wfs.json] - about to encode JSON
19 002 22:02:30 INFO   [wfs.json] - about to encode JSON
19 002 22:02:30 INFO   [wfs.json] - about to encode JSON
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211853.9004757185 : 217791.1068576795, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211853.9004757185 : 217791.1068576795, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211853.9004757185 : 217791.1068576795, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211853.9004757185 : 217791.1068576795, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211853.9004757185 : 217791.1068576795, 6079159.570512659 : 6082865.44834634] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 002 22:02:30 INFO   [wfs.json] - about to encode JSON
19 002 22:02:30 INFO   [wfs.json] - about to encode JSON
19 002 22:02:30 INFO   [wfs.json] - about to encode JSON
19 002 22:02:30 INFO   [wfs.json] - about to encode JSON
19 002 22:02:30 INFO   [wfs.json] - about to encode JSON
19 003 22:03:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 003 22:03:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 003 22:03:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 003 22:03:02 INFO   [wfs.json] - about to encode JSON
19 003 22:03:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 003 22:03:02 INFO   [wfs.json] - about to encode JSON
19 003 22:03:02 INFO   [wfs.json] - about to encode JSON
19 003 22:03:02 INFO   [wfs.json] - about to encode JSON
19 003 22:03:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 003 22:03:02 INFO   [wfs.json] - about to encode JSON
19 003 22:03:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 003 22:03:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:07 INFO   [wfs.json] - about to encode JSON
19 003 22:03:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 003 22:03:07 INFO   [wfs.json] - about to encode JSON
19 003 22:03:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 003 22:03:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 003 22:03:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 003 22:03:07 INFO   [wfs.json] - about to encode JSON
19 003 22:03:07 INFO   [wfs.json] - about to encode JSON
19 003 22:03:07 INFO   [wfs.json] - about to encode JSON
19 003 22:03:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76496.37218967991 : 80131.90834749362, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 003 22:03:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76496.37218967991 : 80131.90834749362, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 003 22:03:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:10 INFO   [wfs.json] - about to encode JSON
19 003 22:03:10 INFO   [wfs.json] - about to encode JSON
19 003 22:03:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76496.37218967991 : 80131.90834749362, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 003 22:03:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76496.37218967991 : 80131.90834749362, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 003 22:03:10 INFO   [wfs.json] - about to encode JSON
19 003 22:03:10 INFO   [wfs.json] - about to encode JSON
19 003 22:03:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76496.37218967991 : 80131.90834749362, 5999265.396560367 : 6001534.620837584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 003 22:03:10 INFO   [wfs.json] - about to encode JSON
19 003 22:03:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76738.87177793369 : 80374.4079357474, 5999697.63783619 : 6001966.862113407] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 003 22:03:13 INFO   [wfs.json] - about to encode JSON
19 003 22:03:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76738.87177793369 : 80374.4079357474, 5999697.63783619 : 6001966.862113407] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 003 22:03:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76738.87177793369 : 80374.4079357474, 5999697.63783619 : 6001966.862113407] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 003 22:03:13 INFO   [wfs.json] - about to encode JSON
19 003 22:03:13 INFO   [wfs.json] - about to encode JSON
19 003 22:03:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76738.87177793369 : 80374.4079357474, 5999697.63783619 : 6001966.862113407] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 003 22:03:13 INFO   [wfs.json] - about to encode JSON
19 003 22:03:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76738.87177793369 : 80374.4079357474, 5999697.63783619 : 6001966.862113407] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 003 22:03:13 INFO   [wfs.json] - about to encode JSON
19 003 22:03:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212303.57142459083 : 218220.52479233232, 6079043.464145586 : 6082736.700478932] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 003 22:03:18 INFO   [wfs.json] - about to encode JSON
19 003 22:03:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212303.57142459083 : 218220.52479233232, 6079043.464145586 : 6082736.700478932] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 003 22:03:18 INFO   [wfs.json] - about to encode JSON
19 003 22:03:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212303.57142459083 : 218220.52479233232, 6079043.464145586 : 6082736.700478932] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 003 22:03:18 INFO   [wfs.json] - about to encode JSON
19 003 22:03:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212303.57142459083 : 218220.52479233232, 6079043.464145586 : 6082736.700478932] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 003 22:03:18 INFO   [wfs.json] - about to encode JSON
19 003 22:03:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212303.57142459083 : 218220.52479233232, 6079043.464145586 : 6082736.700478932] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 003 22:03:18 INFO   [wfs.json] - about to encode JSON
19 003 22:03:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212303.57142459083 : 218220.52479233232, 6079051.239379972 : 6082744.475713318] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 003 22:03:30 INFO   [wfs.json] - about to encode JSON
19 003 22:03:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212303.57142459083 : 218220.52479233232, 6079051.239379972 : 6082744.475713318] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 003 22:03:30 INFO   [wfs.json] - about to encode JSON
19 003 22:03:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212303.57142459083 : 218220.52479233232, 6079051.239379972 : 6082744.475713318] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 003 22:03:30 INFO   [wfs.json] - about to encode JSON
19 003 22:03:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212303.57142459083 : 218220.52479233232, 6079051.239379972 : 6082744.475713318] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 003 22:03:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 003 22:03:30 INFO   [wfs.json] - about to encode JSON
19 003 22:03:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212303.57142459083 : 218220.52479233232, 6079051.239379972 : 6082744.475713318] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 003 22:03:30 INFO   [wfs.json] - about to encode JSON
19 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 010 22:10:05 INFO   [wfs.json] - about to encode JSON
19 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 010 22:10:05 INFO   [wfs.json] - about to encode JSON
19 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 010 22:10:05 INFO   [wfs.json] - about to encode JSON
19 010 22:10:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 010 22:10:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 010 22:10:06 INFO   [wfs.json] - about to encode JSON
19 010 22:10:06 INFO   [wfs.json] - about to encode JSON
19 010 22:10:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213484.4837765915 : 217120.0199344052, 6079854.952471003 : 6082124.17674822] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 010 22:10:08 INFO   [wfs.json] - about to encode JSON
19 010 22:10:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213484.4837765915 : 217120.0199344052, 6079854.952471003 : 6082124.17674822] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 010 22:10:08 INFO   [wfs.json] - about to encode JSON
19 010 22:10:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213484.4837765915 : 217120.0199344052, 6079854.952471003 : 6082124.17674822] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 010 22:10:08 INFO   [wfs.json] - about to encode JSON
19 010 22:10:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213484.4837765915 : 217120.0199344052, 6079854.952471003 : 6082124.17674822] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 010 22:10:08 INFO   [wfs.json] - about to encode JSON
19 010 22:10:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213484.4837765915 : 217120.0199344052, 6079854.952471003 : 6082124.17674822] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 010 22:10:08 INFO   [wfs.json] - about to encode JSON
19 010 22:10:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212675.42590962318 : 217406.50127875872, 6079642.610771043 : 6082595.647302369] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 010 22:10:09 INFO   [wfs.json] - about to encode JSON
19 010 22:10:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212675.42590962318 : 217406.50127875872, 6079642.610771043 : 6082595.647302369] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 010 22:10:09 INFO   [wfs.json] - about to encode JSON
19 010 22:10:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212675.42590962318 : 217406.50127875872, 6079642.610771043 : 6082595.647302369] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 010 22:10:09 INFO   [wfs.json] - about to encode JSON
19 010 22:10:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 010 22:10:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212675.42590962318 : 217406.50127875872, 6079642.610771043 : 6082595.647302369] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 010 22:10:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212675.42590962318 : 217406.50127875872, 6079642.610771043 : 6082595.647302369] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 010 22:10:09 INFO   [wfs.json] - about to encode JSON
19 010 22:10:09 INFO   [wfs.json] - about to encode JSON
19 036 22:36:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 22:36:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 22:36:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 22:36:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 22:36:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211882.76873542505 : 218199.15845295685, 6079642.610771043 : 6082595.647302369] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 036 22:36:59 INFO   [wfs.json] - about to encode JSON
19 036 22:36:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 036 22:36:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211882.76873542505 : 218199.15845295685, 6079642.610771043 : 6082595.647302369] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 036 22:36:59 INFO   [wfs.json] - about to encode JSON
19 036 22:36:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211882.76873542505 : 218199.15845295685, 6079642.610771043 : 6082595.647302369] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 036 22:36:59 INFO   [wfs.json] - about to encode JSON
19 036 22:36:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211882.76873542505 : 218199.15845295685, 6079642.610771043 : 6082595.647302369] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 036 22:36:59 INFO   [wfs.json] - about to encode JSON
19 036 22:36:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211882.76873542505 : 218199.15845295685, 6079642.610771043 : 6082595.647302369] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 036 22:36:59 INFO   [wfs.json] - about to encode JSON
19 037 22:37:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212153.2047125044 : 218469.5944300362, 6079673.695366111 : 6082626.731897436] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 037 22:37:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212153.2047125044 : 218469.5944300362, 6079673.695366111 : 6082626.731897436] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 037 22:37:03 INFO   [wfs.json] - about to encode JSON
19 037 22:37:03 INFO   [wfs.json] - about to encode JSON
19 037 22:37:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212153.2047125044 : 218469.5944300362, 6079673.695366111 : 6082626.731897436] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 037 22:37:03 INFO   [wfs.json] - about to encode JSON
19 037 22:37:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212153.2047125044 : 218469.5944300362, 6079673.695366111 : 6082626.731897436] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 037 22:37:03 INFO   [wfs.json] - about to encode JSON
19 037 22:37:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212153.2047125044 : 218469.5944300362, 6079673.695366111 : 6082626.731897436] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 037 22:37:03 INFO   [wfs.json] - about to encode JSON
19 037 22:37:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212187.05282514286 : 218503.44254267466, 6079427.054687128 : 6082380.091218454] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 037 22:37:27 INFO   [wfs.json] - about to encode JSON
19 037 22:37:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212187.05282514286 : 218503.44254267466, 6079427.054687128 : 6082380.091218454] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 037 22:37:27 INFO   [wfs.json] - about to encode JSON
19 037 22:37:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212187.05282514286 : 218503.44254267466, 6079427.054687128 : 6082380.091218454] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 037 22:37:27 INFO   [wfs.json] - about to encode JSON
19 037 22:37:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212187.05282514286 : 218503.44254267466, 6079427.054687128 : 6082380.091218454] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 037 22:37:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212187.05282514286 : 218503.44254267466, 6079427.054687128 : 6082380.091218454] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 037 22:37:27 INFO   [wfs.json] - about to encode JSON
19 037 22:37:27 INFO   [wfs.json] - about to encode JSON
19 037 22:37:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 037 22:37:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75155.94540982088 : 81472.33512735265, 5998923.490433313 : 6001876.526964638] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 037 22:37:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75155.94540982088 : 81472.33512735265, 5998923.490433313 : 6001876.526964638] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 037 22:37:30 INFO   [wfs.json] - about to encode JSON
19 037 22:37:30 INFO   [wfs.json] - about to encode JSON
19 037 22:37:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75155.94540982088 : 81472.33512735265, 5998923.490433313 : 6001876.526964638] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 037 22:37:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75155.94540982088 : 81472.33512735265, 5998923.490433313 : 6001876.526964638] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 037 22:37:30 INFO   [wfs.json] - about to encode JSON
19 037 22:37:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75155.94540982088 : 81472.33512735265, 5998923.490433313 : 6001876.526964638] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 037 22:37:30 INFO   [wfs.json] - about to encode JSON
19 037 22:37:30 INFO   [wfs.json] - about to encode JSON
19 052 22:52:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[210544.77232645595 : 220095.86776265406, 6078844.514297669 : 6083309.839427781] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 052 22:52:16 INFO   [wfs.json] - about to encode JSON
19 052 22:52:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[210544.77232645595 : 220095.86776265406, 6078844.514297669 : 6083309.839427781] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 052 22:52:16 INFO   [wfs.json] - about to encode JSON
19 052 22:52:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[210544.77232645595 : 220095.86776265406, 6078844.514297669 : 6083309.839427781] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 052 22:52:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[210544.77232645595 : 220095.86776265406, 6078844.514297669 : 6083309.839427781] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 052 22:52:16 INFO   [wfs.json] - about to encode JSON
19 052 22:52:16 INFO   [wfs.json] - about to encode JSON
19 052 22:52:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[210544.77232645595 : 220095.86776265406, 6078844.514297669 : 6083309.839427781] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 052 22:52:16 INFO   [wfs.json] - about to encode JSON
19 052 22:52:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 052 22:52:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 052 22:52:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 052 22:52:18 INFO   [wfs.json] - about to encode JSON
19 052 22:52:18 INFO   [wfs.json] - about to encode JSON
19 052 22:52:18 INFO   [wfs.json] - about to encode JSON
19 052 22:52:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 052 22:52:18 INFO   [wfs.json] - about to encode JSON
19 052 22:52:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 052 22:52:18 INFO   [wfs.json] - about to encode JSON
19 052 22:52:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211435.01187435683 : 219355.07837714232, 6079108.012949751 : 6082810.799946624] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 052 22:52:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:19 INFO   [wfs.json] - about to encode JSON
19 052 22:52:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211435.01187435683 : 219355.07837714232, 6079108.012949751 : 6082810.799946624] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 052 22:52:19 INFO   [wfs.json] - about to encode JSON
19 052 22:52:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 052 22:52:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211435.01187435683 : 219355.07837714232, 6079108.012949751 : 6082810.799946624] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 052 22:52:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211435.01187435683 : 219355.07837714232, 6079108.012949751 : 6082810.799946624] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 052 22:52:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211435.01187435683 : 219355.07837714232, 6079108.012949751 : 6082810.799946624] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 052 22:52:19 INFO   [wfs.json] - about to encode JSON
19 052 22:52:19 INFO   [wfs.json] - about to encode JSON
19 052 22:52:19 INFO   [wfs.json] - about to encode JSON
19 053 22:53:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 053 22:53:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 053 22:53:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 053 22:53:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75975.75516413088 : 80652.52537304265, 5999306.7676314395 : 6001493.249766512] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
19 053 22:53:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75975.75516413088 : 80652.52537304265, 5999306.7676314395 : 6001493.249766512] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
19 053 22:53:12 INFO   [wfs.json] - about to encode JSON
19 053 22:53:12 INFO   [wfs.json] - about to encode JSON
19 053 22:53:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 053 22:53:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 053 22:53:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75975.75516413088 : 80652.52537304265, 5999306.7676314395 : 6001493.249766512] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
19 053 22:53:12 INFO   [wfs.json] - about to encode JSON
19 053 22:53:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75975.75516413088 : 80652.52537304265, 5999306.7676314395 : 6001493.249766512] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
19 053 22:53:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75975.75516413088 : 80652.52537304265, 5999306.7676314395 : 6001493.249766512] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 053 22:53:12 INFO   [wfs.json] - about to encode JSON
19 053 22:53:12 INFO   [wfs.json] - about to encode JSON
19 054 22:54:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 054 22:54:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211420.3288608946 : 219340.3953636801, 6079056.967785494 : 6082759.7547823675] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 054 22:54:25 INFO   [wfs.json] - about to encode JSON
19 054 22:54:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 054 22:54:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211638.59841018397 : 219558.66491296946, 6079341.497733676 : 6083044.284730549] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 054 22:54:26 INFO   [wfs.json] - about to encode JSON
19 054 22:54:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 054 22:54:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[74354.107017194 : 82274.17351997954, 5998548.615200539 : 6002251.402197412] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 054 22:54:28 INFO   [wfs.json] - about to encode JSON
19 058 22:58:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
19 058 22:58:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[72986.02466361244 : 80906.09116639798, 5998572.001223677 : 6002274.78822055] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
19 058 22:58:21 INFO   [wfs.json] - about to encode JSON
20 043 09:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 09:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 09:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 09:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 09:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 09:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 043 09:43:08 INFO   [wfs.json] - about to encode JSON
20 043 09:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 09:43:08 INFO   [wfs.json] - about to encode JSON
20 043 09:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 043 09:43:08 INFO   [wfs.json] - about to encode JSON
20 043 09:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 09:43:08 INFO   [wfs.json] - about to encode JSON
20 043 09:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 09:43:08 INFO   [wfs.json] - about to encode JSON
20 039 10:39:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 10:39:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 10:39:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 10:39:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 10:39:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 10:39:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 039 10:39:46 INFO   [wfs.json] - about to encode JSON
20 039 10:39:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 10:39:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 039 10:39:46 INFO   [wfs.json] - about to encode JSON
20 039 10:39:46 INFO   [wfs.json] - about to encode JSON
20 039 10:39:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 039 10:39:46 INFO   [wfs.json] - about to encode JSON
20 039 10:39:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 039 10:39:46 INFO   [wfs.json] - about to encode JSON
20 040 10:40:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 10:40:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 10:40:41 INFO   [wfs.json] - about to encode JSON
20 040 10:40:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 10:40:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 10:40:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 10:40:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 10:40:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 10:40:41 INFO   [wfs.json] - about to encode JSON
20 040 10:40:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 10:40:41 INFO   [wfs.json] - about to encode JSON
20 040 10:40:41 INFO   [wfs.json] - about to encode JSON
20 040 10:40:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 10:40:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 10:40:41 INFO   [wfs.json] - about to encode JSON
20 040 10:40:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 10:40:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 10:40:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 10:40:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 10:40:59 INFO   [wfs.json] - about to encode JSON
20 040 10:40:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 10:40:59 INFO   [wfs.json] - about to encode JSON
20 040 10:40:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 10:40:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 10:40:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 10:40:59 INFO   [wfs.json] - about to encode JSON
20 040 10:40:59 INFO   [wfs.json] - about to encode JSON
20 040 10:40:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 10:40:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 10:40:59 INFO   [wfs.json] - about to encode JSON
20 021 12:21:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 12:21:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 12:21:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 12:21:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 12:21:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 12:21:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 12:21:29 INFO   [wfs.json] - about to encode JSON
20 021 12:21:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 12:21:29 INFO   [wfs.json] - about to encode JSON
20 021 12:21:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 12:21:29 INFO   [wfs.json] - about to encode JSON
20 021 12:21:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 12:21:29 INFO   [wfs.json] - about to encode JSON
20 021 12:21:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 12:21:29 INFO   [wfs.json] - about to encode JSON
20 024 12:24:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 12:24:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 12:24:48 INFO   [wfs.json] - about to encode JSON
20 024 12:24:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 12:24:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 024 12:24:48 INFO   [wfs.json] - about to encode JSON
20 024 12:24:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 12:24:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 024 12:24:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 12:24:48 INFO   [wfs.json] - about to encode JSON
20 024 12:24:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 024 12:24:48 INFO   [wfs.json] - about to encode JSON
20 024 12:24:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 12:24:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 024 12:24:48 INFO   [wfs.json] - about to encode JSON
20 024 12:24:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 12:24:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205892.1515316648 : 231371.61499703318, 6076625.846438129 : 6092529.585132019] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 12:24:50 INFO   [wfs.json] - about to encode JSON
20 024 12:24:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 12:24:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205892.1515316648 : 231371.61499703318, 6076625.846438129 : 6092529.585132019] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 024 12:24:50 INFO   [wfs.json] - about to encode JSON
20 024 12:24:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 12:24:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205892.1515316648 : 231371.61499703318, 6076625.846438129 : 6092529.585132019] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 024 12:24:50 INFO   [wfs.json] - about to encode JSON
20 024 12:24:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 12:24:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205892.1515316648 : 231371.61499703318, 6076625.846438129 : 6092529.585132019] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 024 12:24:50 INFO   [wfs.json] - about to encode JSON
20 024 12:24:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 12:24:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205892.1515316648 : 231371.61499703318, 6076625.846438129 : 6092529.585132019] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 024 12:24:50 INFO   [wfs.json] - about to encode JSON
20 028 12:28:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 12:28:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 028 12:28:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 12:28:02 INFO   [wfs.json] - about to encode JSON
20 028 12:28:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 12:28:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 028 12:28:02 INFO   [wfs.json] - about to encode JSON
20 028 12:28:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 028 12:28:02 INFO   [wfs.json] - about to encode JSON
20 028 12:28:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 12:28:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 12:28:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 028 12:28:02 INFO   [wfs.json] - about to encode JSON
20 028 12:28:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 028 12:28:02 INFO   [wfs.json] - about to encode JSON
20 029 12:29:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 12:29:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 12:29:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 12:29:37 INFO   [wfs.json] - about to encode JSON
20 029 12:29:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 029 12:29:37 INFO   [wfs.json] - about to encode JSON
20 029 12:29:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 12:29:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 12:29:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 029 12:29:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 029 12:29:37 INFO   [wfs.json] - about to encode JSON
20 029 12:29:37 INFO   [wfs.json] - about to encode JSON
20 029 12:29:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 12:29:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 029 12:29:37 INFO   [wfs.json] - about to encode JSON
20 030 12:30:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 12:30:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 12:30:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 030 12:30:02 INFO   [wfs.json] - about to encode JSON
20 030 12:30:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 030 12:30:02 INFO   [wfs.json] - about to encode JSON
20 030 12:30:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 12:30:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 12:30:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 12:30:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 030 12:30:02 INFO   [wfs.json] - about to encode JSON
20 030 12:30:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 030 12:30:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213527.47960500192 : 217163.0157628156, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 030 12:30:02 INFO   [wfs.json] - about to encode JSON
20 030 12:30:02 INFO   [wfs.json] - about to encode JSON
20 031 12:31:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 12:31:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 12:31:18 INFO   [wfs.json] - about to encode JSON
20 031 12:31:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 12:31:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 12:31:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 12:31:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 12:31:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 12:31:18 INFO   [wfs.json] - about to encode JSON
20 031 12:31:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 12:31:18 INFO   [wfs.json] - about to encode JSON
20 031 12:31:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 12:31:18 INFO   [wfs.json] - about to encode JSON
20 031 12:31:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 12:31:18 INFO   [wfs.json] - about to encode JSON
20 031 12:31:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 12:31:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 12:31:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 12:31:27 INFO   [wfs.json] - about to encode JSON
20 031 12:31:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 12:31:27 INFO   [wfs.json] - about to encode JSON
20 031 12:31:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 12:31:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 12:31:27 INFO   [wfs.json] - about to encode JSON
20 031 12:31:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 12:31:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 12:31:27 INFO   [wfs.json] - about to encode JSON
20 031 12:31:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 12:31:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 12:31:27 INFO   [wfs.json] - about to encode JSON
20 032 12:32:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 12:32:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 12:32:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 12:32:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 12:32:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 12:32:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 12:32:13 INFO   [wfs.json] - about to encode JSON
20 032 12:32:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 12:32:13 INFO   [wfs.json] - about to encode JSON
20 032 12:32:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 12:32:13 INFO   [wfs.json] - about to encode JSON
20 032 12:32:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 12:32:13 INFO   [wfs.json] - about to encode JSON
20 032 12:32:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 12:32:13 INFO   [wfs.json] - about to encode JSON
20 039 12:39:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 12:39:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 12:39:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 12:39:06 INFO   [wfs.json] - about to encode JSON
20 039 12:39:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 039 12:39:06 INFO   [wfs.json] - about to encode JSON
20 039 12:39:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 12:39:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 039 12:39:06 INFO   [wfs.json] - about to encode JSON
20 039 12:39:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 12:39:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 12:39:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 039 12:39:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 039 12:39:06 INFO   [wfs.json] - about to encode JSON
20 039 12:39:06 INFO   [wfs.json] - about to encode JSON
20 039 12:39:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 12:39:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 12:39:41 INFO   [wfs.json] - about to encode JSON
20 039 12:39:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 12:39:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 039 12:39:41 INFO   [wfs.json] - about to encode JSON
20 039 12:39:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 12:39:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 039 12:39:41 INFO   [wfs.json] - about to encode JSON
20 039 12:39:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 12:39:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 12:39:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 039 12:39:41 INFO   [wfs.json] - about to encode JSON
20 039 12:39:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 039 12:39:41 INFO   [wfs.json] - about to encode JSON
20 042 12:42:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 042 12:42:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 042 12:42:36 INFO   [wfs.json] - about to encode JSON
20 042 12:42:36 INFO   [wfs.json] - about to encode JSON
20 042 12:42:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 042 12:42:36 INFO   [wfs.json] - about to encode JSON
20 042 12:42:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 042 12:42:36 INFO   [wfs.json] - about to encode JSON
20 042 12:42:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 042 12:42:36 INFO   [wfs.json] - about to encode JSON
20 042 12:42:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 042 12:42:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 042 12:42:49 INFO   [wfs.json] - about to encode JSON
20 042 12:42:49 INFO   [wfs.json] - about to encode JSON
20 042 12:42:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 042 12:42:49 INFO   [wfs.json] - about to encode JSON
20 042 12:42:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 042 12:42:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213963.40953194082 : 216727.0858358767, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 042 12:42:49 INFO   [wfs.json] - about to encode JSON
20 042 12:42:49 INFO   [wfs.json] - about to encode JSON
20 042 12:42:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 042 12:42:59 INFO   [wfs.json] - about to encode JSON
20 042 12:42:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 042 12:42:59 INFO   [wfs.json] - about to encode JSON
20 042 12:42:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 042 12:42:59 INFO   [wfs.json] - about to encode JSON
20 042 12:42:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 042 12:42:59 INFO   [wfs.json] - about to encode JSON
20 042 12:42:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 12:42:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212918.37203585444 : 217772.12333196308, 6079768.960814183 : 6082038.1850914] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 042 12:42:59 INFO   [wfs.json] - about to encode JSON
20 004 15:04:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 15:04:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 15:04:34 INFO   [wfs.json] - about to encode JSON
20 004 15:04:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 15:04:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 15:04:45 INFO   [wfs.json] - about to encode JSON
20 014 15:14:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 15:14:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 15:14:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 15:14:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 15:14:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 014 15:14:07 INFO   [wfs.json] - about to encode JSON
20 014 15:14:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 014 15:14:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 014 15:14:07 INFO   [wfs.json] - about to encode JSON
20 014 15:14:07 INFO   [wfs.json] - about to encode JSON
20 014 15:14:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 014 15:14:07 INFO   [wfs.json] - about to encode JSON
20 014 15:14:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 15:14:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 014 15:14:08 INFO   [wfs.json] - about to encode JSON
20 014 15:14:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 15:14:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 15:14:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 15:14:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 15:14:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 014 15:14:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 014 15:14:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 014 15:14:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 014 15:14:12 INFO   [wfs.json] - about to encode JSON
20 014 15:14:12 INFO   [wfs.json] - about to encode JSON
20 014 15:14:12 INFO   [wfs.json] - about to encode JSON
20 014 15:14:12 INFO   [wfs.json] - about to encode JSON
20 014 15:14:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 15:14:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 014 15:14:12 INFO   [wfs.json] - about to encode JSON
20 015 15:15:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 15:15:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 15:15:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 15:15:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 15:15:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 15:15:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 15:15:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 15:15:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 15:15:09 INFO   [wfs.json] - about to encode JSON
20 015 15:15:09 INFO   [wfs.json] - about to encode JSON
20 015 15:15:09 INFO   [wfs.json] - about to encode JSON
20 015 15:15:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 15:15:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 15:15:09 INFO   [wfs.json] - about to encode JSON
20 015 15:15:09 INFO   [wfs.json] - about to encode JSON
20 015 15:15:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 15:15:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 15:15:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 15:15:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 15:15:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 15:15:10 INFO   [wfs.json] - about to encode JSON
20 015 15:15:10 INFO   [wfs.json] - about to encode JSON
20 015 15:15:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 15:15:10 INFO   [wfs.json] - about to encode JSON
20 015 15:15:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 15:15:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 15:15:11 INFO   [wfs.json] - about to encode JSON
20 015 15:15:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 15:15:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 15:15:11 INFO   [wfs.json] - about to encode JSON
20 017 15:17:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 15:17:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 15:17:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 15:17:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 15:17:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 15:17:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 15:17:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 15:17:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 15:17:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 15:17:20 INFO   [wfs.json] - about to encode JSON
20 017 15:17:20 INFO   [wfs.json] - about to encode JSON
20 017 15:17:20 INFO   [wfs.json] - about to encode JSON
20 017 15:17:20 INFO   [wfs.json] - about to encode JSON
20 017 15:17:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 15:17:20 INFO   [wfs.json] - about to encode JSON
20 019 15:19:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 15:19:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 15:19:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 15:19:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 019 15:19:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 019 15:19:51 INFO   [wfs.json] - about to encode JSON
20 019 15:19:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 019 15:19:51 INFO   [wfs.json] - about to encode JSON
20 019 15:19:51 INFO   [wfs.json] - about to encode JSON
20 019 15:19:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 15:19:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 15:19:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 019 15:19:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 019 15:19:51 INFO   [wfs.json] - about to encode JSON
20 019 15:19:51 INFO   [wfs.json] - about to encode JSON
20 020 15:20:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 15:20:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 15:20:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 15:20:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 15:20:25 INFO   [wfs.json] - about to encode JSON
20 020 15:20:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 15:20:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 15:20:25 INFO   [wfs.json] - about to encode JSON
20 020 15:20:25 INFO   [wfs.json] - about to encode JSON
20 020 15:20:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 15:20:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 15:20:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 15:20:25 INFO   [wfs.json] - about to encode JSON
20 020 15:20:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 15:20:25 INFO   [wfs.json] - about to encode JSON
20 020 15:20:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 15:20:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 15:20:45 INFO   [wfs.json] - about to encode JSON
20 020 15:20:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 15:20:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 15:20:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 15:20:45 INFO   [wfs.json] - about to encode JSON
20 020 15:20:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 15:20:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 15:20:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 15:20:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 15:20:45 INFO   [wfs.json] - about to encode JSON
20 020 15:20:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 15:20:45 INFO   [wfs.json] - about to encode JSON
20 020 15:20:45 INFO   [wfs.json] - about to encode JSON
20 021 15:21:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 15:21:02 INFO   [wfs.json] - about to encode JSON
20 021 15:21:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 15:21:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 15:21:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 15:21:02 INFO   [wfs.json] - about to encode JSON
20 021 15:21:02 INFO   [wfs.json] - about to encode JSON
20 021 15:21:02 INFO   [wfs.json] - about to encode JSON
20 021 15:21:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213944.30027486954 : 216746.19509294798, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 15:21:02 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213885.7781750887 : 216804.71719272883, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213885.7781750887 : 216804.71719272883, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213885.7781750887 : 216804.71719272883, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213885.7781750887 : 216804.71719272883, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213885.7781750887 : 216804.71719272883, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213852.33697521393 : 216838.1583926036, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213852.33697521393 : 216838.1583926036, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213852.33697521393 : 216838.1583926036, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213852.33697521393 : 216838.1583926036, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213852.33697521393 : 216838.1583926036, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:21 INFO   [wfs.json] - about to encode JSON
20 021 15:21:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 15:21:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 15:21:31 INFO   [wfs.json] - about to encode JSON
20 021 15:21:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 15:21:31 INFO   [wfs.json] - about to encode JSON
20 021 15:21:31 INFO   [wfs.json] - about to encode JSON
20 021 15:21:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 15:21:31 INFO   [wfs.json] - about to encode JSON
20 021 15:21:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 15:21:31 INFO   [wfs.json] - about to encode JSON
20 021 15:21:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 15:21:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 15:21:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 15:21:34 INFO   [wfs.json] - about to encode JSON
20 021 15:21:34 INFO   [wfs.json] - about to encode JSON
20 021 15:21:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 15:21:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213859.50294661566 : 216830.99242120187, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 15:21:34 INFO   [wfs.json] - about to encode JSON
20 021 15:21:34 INFO   [wfs.json] - about to encode JSON
20 021 15:21:34 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213767.53964696007 : 216922.95572085746, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213767.53964696007 : 216922.95572085746, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213767.53964696007 : 216922.95572085746, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213767.53964696007 : 216922.95572085746, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213767.53964696007 : 216922.95572085746, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213692.29694724185 : 216998.19842057567, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213692.29694724185 : 216998.19842057567, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213692.29694724185 : 216998.19842057567, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213692.29694724185 : 216998.19842057567, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213692.29694724185 : 216998.19842057567, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 021 15:21:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 15:21:38 INFO   [wfs.json] - about to encode JSON
20 022 15:22:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 15:22:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 15:22:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 15:22:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 15:22:19 INFO   [wfs.json] - about to encode JSON
20 022 15:22:19 INFO   [wfs.json] - about to encode JSON
20 022 15:22:19 INFO   [wfs.json] - about to encode JSON
20 022 15:22:19 INFO   [wfs.json] - about to encode JSON
20 022 15:22:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 15:22:19 INFO   [wfs.json] - about to encode JSON
20 022 15:22:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 15:22:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 15:22:35 INFO   [wfs.json] - about to encode JSON
20 022 15:22:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 15:22:35 INFO   [wfs.json] - about to encode JSON
20 022 15:22:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 15:22:35 INFO   [wfs.json] - about to encode JSON
20 022 15:22:35 INFO   [wfs.json] - about to encode JSON
20 022 15:22:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 15:22:35 INFO   [wfs.json] - about to encode JSON
20 022 15:22:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 15:22:37 INFO   [wfs.json] - about to encode JSON
20 022 15:22:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 15:22:37 INFO   [wfs.json] - about to encode JSON
20 022 15:22:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 15:22:37 INFO   [wfs.json] - about to encode JSON
20 022 15:22:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 15:22:37 INFO   [wfs.json] - about to encode JSON
20 022 15:22:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 15:22:37 INFO   [wfs.json] - about to encode JSON
20 022 15:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212768.50393623541 : 218170.83419942923, 6079254.794741905 : 6083008.562904726] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 15:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212768.50393623541 : 218170.83419942923, 6079254.794741905 : 6083008.562904726] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 15:22:38 INFO   [wfs.json] - about to encode JSON
20 022 15:22:38 INFO   [wfs.json] - about to encode JSON
20 022 15:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212768.50393623541 : 218170.83419942923, 6079254.794741905 : 6083008.562904726] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 15:22:38 INFO   [wfs.json] - about to encode JSON
20 022 15:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212768.50393623541 : 218170.83419942923, 6079254.794741905 : 6083008.562904726] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 15:22:38 INFO   [wfs.json] - about to encode JSON
20 022 15:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 15:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212768.50393623541 : 218170.83419942923, 6079254.794741905 : 6083008.562904726] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 15:22:38 INFO   [wfs.json] - about to encode JSON
20 026 15:26:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 15:26:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 15:26:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 15:26:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 026 15:26:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 026 15:26:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 026 15:26:57 INFO   [wfs.json] - about to encode JSON
20 026 15:26:57 INFO   [wfs.json] - about to encode JSON
20 026 15:26:57 INFO   [wfs.json] - about to encode JSON
20 026 15:26:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 15:26:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 026 15:26:57 INFO   [wfs.json] - about to encode JSON
20 026 15:26:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 15:26:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 026 15:26:57 INFO   [wfs.json] - about to encode JSON
20 032 15:32:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 15:32:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 15:32:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 15:32:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 15:32:41 INFO   [wfs.json] - about to encode JSON
20 032 15:32:41 INFO   [wfs.json] - about to encode JSON
20 032 15:32:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 15:32:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 15:32:41 INFO   [wfs.json] - about to encode JSON
20 032 15:32:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 15:32:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 15:32:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 15:32:41 INFO   [wfs.json] - about to encode JSON
20 032 15:32:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 15:32:41 INFO   [wfs.json] - about to encode JSON
20 034 15:34:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 15:34:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 15:34:19 INFO   [wfs.json] - about to encode JSON
20 035 15:35:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 035 15:35:32 INFO   [wfs.json] - about to encode JSON
20 035 15:35:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 15:35:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 035 15:35:32 INFO   [wfs.json] - about to encode JSON
20 035 15:35:32 INFO   [wfs.json] - about to encode JSON
20 035 15:35:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 035 15:35:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 035 15:35:32 INFO   [wfs.json] - about to encode JSON
20 035 15:35:32 INFO   [wfs.json] - about to encode JSON
20 035 15:35:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 035 15:35:33 INFO   [wfs.json] - about to encode JSON
20 035 15:35:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 15:35:33 INFO   [wfs.json] - about to encode JSON
20 035 15:35:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 035 15:35:33 INFO   [wfs.json] - about to encode JSON
20 035 15:35:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 035 15:35:33 INFO   [wfs.json] - about to encode JSON
20 035 15:35:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 035 15:35:33 INFO   [wfs.json] - about to encode JSON
20 035 15:35:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 15:35:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:37 INFO   [wfs.json] - about to encode JSON
20 035 15:35:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 035 15:35:37 INFO   [wfs.json] - about to encode JSON
20 035 15:35:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 035 15:35:37 INFO   [wfs.json] - about to encode JSON
20 035 15:35:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 035 15:35:37 INFO   [wfs.json] - about to encode JSON
20 035 15:35:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 035 15:35:37 INFO   [wfs.json] - about to encode JSON
20 035 15:35:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213488.84464588258 : 216823.41000482338, 6079814.418374313 : 6082131.415794209] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 15:35:51 INFO   [wfs.json] - about to encode JSON
20 035 15:35:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213216.37290445363 : 216550.93826339443, 6079771.928871918 : 6082088.926291813] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 15:35:55 INFO   [wfs.json] - about to encode JSON
20 035 15:35:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213519.45811448706 : 216854.02347342786, 6079869.272058162 : 6082186.2694780575] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 15:35:57 INFO   [wfs.json] - about to encode JSON
20 035 15:35:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 15:35:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213548.122000094 : 216882.6873590348, 6080005.425514795 : 6082322.4229346905] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 15:35:58 INFO   [wfs.json] - about to encode JSON
20 037 15:37:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 15:37:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 15:37:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 15:37:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 15:37:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 037 15:37:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 037 15:37:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 037 15:37:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 037 15:37:36 INFO   [wfs.json] - about to encode JSON
20 037 15:37:36 INFO   [wfs.json] - about to encode JSON
20 037 15:37:36 INFO   [wfs.json] - about to encode JSON
20 037 15:37:36 INFO   [wfs.json] - about to encode JSON
20 037 15:37:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 15:37:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 037 15:37:36 INFO   [wfs.json] - about to encode JSON
20 038 15:38:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 15:38:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 15:38:57 INFO   [wfs.json] - about to encode JSON
20 038 15:38:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 15:38:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 15:38:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 15:38:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 15:38:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 15:38:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 15:38:57 INFO   [wfs.json] - about to encode JSON
20 038 15:38:57 INFO   [wfs.json] - about to encode JSON
20 038 15:38:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 15:38:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 15:38:57 INFO   [wfs.json] - about to encode JSON
20 038 15:38:57 INFO   [wfs.json] - about to encode JSON
20 039 15:39:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 039 15:39:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 15:39:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 039 15:39:20 INFO   [wfs.json] - about to encode JSON
20 039 15:39:20 INFO   [wfs.json] - about to encode JSON
20 039 15:39:20 INFO   [wfs.json] - about to encode JSON
20 039 15:39:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 039 15:39:20 INFO   [wfs.json] - about to encode JSON
20 039 15:39:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 039 15:39:20 INFO   [wfs.json] - about to encode JSON
20 039 15:39:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 15:39:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 039 15:39:23 INFO   [wfs.json] - about to encode JSON
20 039 15:39:23 INFO   [wfs.json] - about to encode JSON
20 039 15:39:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 039 15:39:23 INFO   [wfs.json] - about to encode JSON
20 039 15:39:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 039 15:39:23 INFO   [wfs.json] - about to encode JSON
20 039 15:39:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 039 15:39:23 INFO   [wfs.json] - about to encode JSON
20 039 15:39:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 15:39:35 INFO   [wfs.json] - about to encode JSON
20 039 15:39:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 039 15:39:36 INFO   [wfs.json] - about to encode JSON
20 039 15:39:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 039 15:39:37 INFO   [wfs.json] - about to encode JSON
20 039 15:39:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 039 15:39:38 INFO   [wfs.json] - about to encode JSON
20 039 15:39:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 15:39:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 039 15:39:39 INFO   [wfs.json] - about to encode JSON
20 040 15:40:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 15:40:14 INFO   [wfs.json] - about to encode JSON
20 040 15:40:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 15:40:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 15:40:14 INFO   [wfs.json] - about to encode JSON
20 040 15:40:14 INFO   [wfs.json] - about to encode JSON
20 040 15:40:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 15:40:14 INFO   [wfs.json] - about to encode JSON
20 040 15:40:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 15:40:14 INFO   [wfs.json] - about to encode JSON
20 040 15:40:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 15:40:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 15:40:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 15:40:40 INFO   [wfs.json] - about to encode JSON
20 040 15:40:40 INFO   [wfs.json] - about to encode JSON
20 040 15:40:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 15:40:40 INFO   [wfs.json] - about to encode JSON
20 040 15:40:40 INFO   [wfs.json] - about to encode JSON
20 040 15:40:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 15:40:40 INFO   [wfs.json] - about to encode JSON
20 040 15:40:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 15:40:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 15:40:49 INFO   [wfs.json] - about to encode JSON
20 040 15:40:49 INFO   [wfs.json] - about to encode JSON
20 040 15:40:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 15:40:49 INFO   [wfs.json] - about to encode JSON
20 040 15:40:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 15:40:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 15:40:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 15:40:49 INFO   [wfs.json] - about to encode JSON
20 040 15:40:49 INFO   [wfs.json] - about to encode JSON
20 041 15:41:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 15:41:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 15:41:32 INFO   [wfs.json] - about to encode JSON
20 041 15:41:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 15:41:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 15:41:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 15:41:32 INFO   [wfs.json] - about to encode JSON
20 041 15:41:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 15:41:32 INFO   [wfs.json] - about to encode JSON
20 041 15:41:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 15:41:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 15:41:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 15:41:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 15:41:32 INFO   [wfs.json] - about to encode JSON
20 041 15:41:32 INFO   [wfs.json] - about to encode JSON
20 043 15:43:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 15:43:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 15:43:12 INFO   [wfs.json] - about to encode JSON
20 043 15:43:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 15:43:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 15:43:14 INFO   [wfs.json] - about to encode JSON
20 043 15:43:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 15:43:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 15:43:15 INFO   [wfs.json] - about to encode JSON
20 046 15:46:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 15:46:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 046 15:46:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 15:46:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 15:46:24 INFO   [wfs.json] - about to encode JSON
20 046 15:46:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 046 15:46:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 046 15:46:24 INFO   [wfs.json] - about to encode JSON
20 046 15:46:24 INFO   [wfs.json] - about to encode JSON
20 046 15:46:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 15:46:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 046 15:46:24 INFO   [wfs.json] - about to encode JSON
20 046 15:46:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 15:46:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 046 15:46:24 INFO   [wfs.json] - about to encode JSON
20 047 15:47:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 047 15:47:01 INFO   [wfs.json] - about to encode JSON
20 047 15:47:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 047 15:47:01 INFO   [wfs.json] - about to encode JSON
20 047 15:47:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 047 15:47:01 INFO   [wfs.json] - about to encode JSON
20 047 15:47:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 047 15:47:01 INFO   [wfs.json] - about to encode JSON
20 047 15:47:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 047 15:47:01 INFO   [wfs.json] - about to encode JSON
20 047 15:47:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 047 15:47:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:04 INFO   [wfs.json] - about to encode JSON
20 047 15:47:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 047 15:47:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 047 15:47:04 INFO   [wfs.json] - about to encode JSON
20 047 15:47:04 INFO   [wfs.json] - about to encode JSON
20 047 15:47:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 047 15:47:04 INFO   [wfs.json] - about to encode JSON
20 047 15:47:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 047 15:47:04 INFO   [wfs.json] - about to encode JSON
20 047 15:47:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76646.85758911636 : 79981.42294805717, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 047 15:47:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76646.85758911636 : 79981.42294805717, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 047 15:47:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76646.85758911636 : 79981.42294805717, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 047 15:47:06 INFO   [wfs.json] - about to encode JSON
20 047 15:47:06 INFO   [wfs.json] - about to encode JSON
20 047 15:47:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 15:47:06 INFO   [wfs.json] - about to encode JSON
20 047 15:47:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76646.85758911636 : 79981.42294805717, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 047 15:47:06 INFO   [wfs.json] - about to encode JSON
20 047 15:47:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76646.85758911636 : 79981.42294805717, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 047 15:47:06 INFO   [wfs.json] - about to encode JSON
20 048 15:48:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 15:48:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 15:48:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 048 15:48:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 048 15:48:02 INFO   [wfs.json] - about to encode JSON
20 048 15:48:02 INFO   [wfs.json] - about to encode JSON
20 048 15:48:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 15:48:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 15:48:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 15:48:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 048 15:48:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 048 15:48:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 048 15:48:02 INFO   [wfs.json] - about to encode JSON
20 048 15:48:02 INFO   [wfs.json] - about to encode JSON
20 048 15:48:02 INFO   [wfs.json] - about to encode JSON
20 050 15:50:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 050 15:50:05 INFO   [wfs.json] - about to encode JSON
20 050 15:50:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 050 15:50:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 050 15:50:05 INFO   [wfs.json] - about to encode JSON
20 050 15:50:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 050 15:50:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:05 INFO   [wfs.json] - about to encode JSON
20 050 15:50:05 INFO   [wfs.json] - about to encode JSON
20 050 15:50:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 050 15:50:05 INFO   [wfs.json] - about to encode JSON
20 050 15:50:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 050 15:50:25 INFO   [wfs.json] - about to encode JSON
20 050 15:50:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 050 15:50:25 INFO   [wfs.json] - about to encode JSON
20 050 15:50:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 050 15:50:25 INFO   [wfs.json] - about to encode JSON
20 050 15:50:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 050 15:50:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 050 15:50:25 INFO   [wfs.json] - about to encode JSON
20 050 15:50:25 INFO   [wfs.json] - about to encode JSON
20 050 15:50:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 050 15:50:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 050 15:50:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 050 15:50:51 INFO   [wfs.json] - about to encode JSON
20 050 15:50:51 INFO   [wfs.json] - about to encode JSON
20 050 15:50:51 INFO   [wfs.json] - about to encode JSON
20 050 15:50:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 050 15:50:51 INFO   [wfs.json] - about to encode JSON
20 050 15:50:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 15:50:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 050 15:50:51 INFO   [wfs.json] - about to encode JSON
20 054 15:54:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 15:54:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 054 15:54:14 INFO   [wfs.json] - about to encode JSON
20 054 15:54:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 15:54:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 15:54:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 054 15:54:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 15:54:14 INFO   [wfs.json] - about to encode JSON
20 054 15:54:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 15:54:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 054 15:54:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 054 15:54:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 054 15:54:14 INFO   [wfs.json] - about to encode JSON
20 054 15:54:14 INFO   [wfs.json] - about to encode JSON
20 054 15:54:14 INFO   [wfs.json] - about to encode JSON
20 056 15:56:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 15:56:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 15:56:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 15:56:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 15:56:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 15:56:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 15:56:01 INFO   [wfs.json] - about to encode JSON
20 056 15:56:01 INFO   [wfs.json] - about to encode JSON
20 056 15:56:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 15:56:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 15:56:01 INFO   [wfs.json] - about to encode JSON
20 056 15:56:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 15:56:01 INFO   [wfs.json] - about to encode JSON
20 056 15:56:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 15:56:01 INFO   [wfs.json] - about to encode JSON
20 058 15:58:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 15:58:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 15:58:24 INFO   [wfs.json] - about to encode JSON
20 058 15:58:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 15:58:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 15:58:24 INFO   [wfs.json] - about to encode JSON
20 058 15:58:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 15:58:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 15:58:24 INFO   [wfs.json] - about to encode JSON
20 058 15:58:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 15:58:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 15:58:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 15:58:24 INFO   [wfs.json] - about to encode JSON
20 058 15:58:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213677.96500443836 : 217012.53036337916, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 15:58:24 INFO   [wfs.json] - about to encode JSON
20 058 15:58:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 15:58:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 15:58:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76646.85758911636 : 79981.42294805717, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 15:58:53 INFO   [wfs.json] - about to encode JSON
20 058 15:58:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76646.85758911636 : 79981.42294805717, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 15:58:53 INFO   [wfs.json] - about to encode JSON
20 058 15:58:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 15:58:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76646.85758911636 : 79981.42294805717, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 15:58:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 15:58:53 INFO   [wfs.json] - about to encode JSON
20 058 15:58:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 15:58:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76646.85758911636 : 79981.42294805717, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 15:58:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76646.85758911636 : 79981.42294805717, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 15:58:53 INFO   [wfs.json] - about to encode JSON
20 058 15:58:53 INFO   [wfs.json] - about to encode JSON
20 001 16:01:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 16:01:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75868.15536346112 : 80760.12517371241, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 001 16:01:29 INFO   [wfs.json] - about to encode JSON
20 001 16:01:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 16:01:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 16:01:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75868.15536346112 : 80760.12517371241, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 001 16:01:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75868.15536346112 : 80760.12517371241, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 001 16:01:29 INFO   [wfs.json] - about to encode JSON
20 001 16:01:29 INFO   [wfs.json] - about to encode JSON
20 001 16:01:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 16:01:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75868.15536346112 : 80760.12517371241, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 001 16:01:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 16:01:29 INFO   [wfs.json] - about to encode JSON
20 001 16:01:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[75868.15536346112 : 80760.12517371241, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 001 16:01:29 INFO   [wfs.json] - about to encode JSON
20 001 16:01:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 16:01:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 001 16:01:51 INFO   [wfs.json] - about to encode JSON
20 001 16:01:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 16:01:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 16:01:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 001 16:01:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 16:01:51 INFO   [wfs.json] - about to encode JSON
20 001 16:01:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 001 16:01:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 001 16:01:51 INFO   [wfs.json] - about to encode JSON
20 001 16:01:51 INFO   [wfs.json] - about to encode JSON
20 001 16:01:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 16:01:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 001 16:01:51 INFO   [wfs.json] - about to encode JSON
20 052 16:52:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 16:52:07 INFO   [wfs.json] - about to encode JSON
20 052 16:52:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 16:52:07 INFO   [wfs.json] - about to encode JSON
20 052 16:52:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 16:52:07 INFO   [wfs.json] - about to encode JSON
20 052 16:52:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 16:52:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 16:52:07 INFO   [wfs.json] - about to encode JSON
20 052 16:52:07 INFO   [wfs.json] - about to encode JSON
20 052 16:52:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 16:52:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 16:52:08 INFO   [wfs.json] - about to encode JSON
20 052 16:52:08 INFO   [wfs.json] - about to encode JSON
20 052 16:52:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 16:52:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:08 INFO   [wfs.json] - about to encode JSON
20 052 16:52:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 16:52:08 INFO   [wfs.json] - about to encode JSON
20 052 16:52:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 16:52:08 INFO   [wfs.json] - about to encode JSON
20 052 16:52:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 16:52:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 16:52:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 16:52:09 INFO   [wfs.json] - about to encode JSON
20 052 16:52:09 INFO   [wfs.json] - about to encode JSON
20 052 16:52:09 INFO   [wfs.json] - about to encode JSON
20 052 16:52:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 16:52:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 16:52:09 INFO   [wfs.json] - about to encode JSON
20 052 16:52:09 INFO   [wfs.json] - about to encode JSON
20 052 16:52:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212892.0968073814 : 217784.06661763266, 6079740.296928575 : 6082057.294348471] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 16:52:13 INFO   [wfs.json] - about to encode JSON
20 052 16:52:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212892.0968073814 : 217784.06661763266, 6079740.296928575 : 6082057.294348471] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 16:52:13 INFO   [wfs.json] - about to encode JSON
20 052 16:52:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212892.0968073814 : 217784.06661763266, 6079740.296928575 : 6082057.294348471] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 16:52:13 INFO   [wfs.json] - about to encode JSON
20 052 16:52:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212892.0968073814 : 217784.06661763266, 6079740.296928575 : 6082057.294348471] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 16:52:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212892.0968073814 : 217784.06661763266, 6079740.296928575 : 6082057.294348471] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 16:52:13 INFO   [wfs.json] - about to encode JSON
20 052 16:52:13 INFO   [wfs.json] - about to encode JSON
20 052 16:52:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 16:52:17 INFO   [wfs.json] - about to encode JSON
20 052 16:52:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 16:52:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 16:52:17 INFO   [wfs.json] - about to encode JSON
20 052 16:52:17 INFO   [wfs.json] - about to encode JSON
20 052 16:52:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 16:52:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 16:52:17 INFO   [wfs.json] - about to encode JSON
20 052 16:52:17 INFO   [wfs.json] - about to encode JSON
20 052 16:52:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 16:52:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 16:52:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 16:52:18 INFO   [wfs.json] - about to encode JSON
20 052 16:52:18 INFO   [wfs.json] - about to encode JSON
20 052 16:52:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 16:52:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 16:52:18 INFO   [wfs.json] - about to encode JSON
20 052 16:52:18 INFO   [wfs.json] - about to encode JSON
20 052 16:52:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 16:52:18 INFO   [wfs.json] - about to encode JSON
20 055 16:55:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 16:55:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 16:55:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 16:55:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 16:55:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 16:55:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 16:55:47 INFO   [wfs.json] - about to encode JSON
20 055 16:55:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 16:55:47 INFO   [wfs.json] - about to encode JSON
20 055 16:55:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 16:55:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 16:55:47 INFO   [wfs.json] - about to encode JSON
20 055 16:55:47 INFO   [wfs.json] - about to encode JSON
20 055 16:55:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 16:55:47 INFO   [wfs.json] - about to encode JSON
20 055 16:55:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 16:55:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 16:55:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 16:55:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 16:55:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 16:55:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 16:55:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 16:55:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 16:55:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 16:55:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 16:55:48 INFO   [wfs.json] - about to encode JSON
20 055 16:55:48 INFO   [wfs.json] - about to encode JSON
20 055 16:55:48 INFO   [wfs.json] - about to encode JSON
20 055 16:55:48 INFO   [wfs.json] - about to encode JSON
20 055 16:55:48 INFO   [wfs.json] - about to encode JSON
20 056 16:56:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 16:56:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 16:56:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 16:56:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 16:56:55 INFO   [wfs.json] - about to encode JSON
20 056 16:56:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 16:56:55 INFO   [wfs.json] - about to encode JSON
20 056 16:56:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 16:56:55 INFO   [wfs.json] - about to encode JSON
20 056 16:56:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 16:56:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 16:56:55 INFO   [wfs.json] - about to encode JSON
20 056 16:56:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 16:56:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 16:56:55 INFO   [wfs.json] - about to encode JSON
20 056 16:56:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 16:56:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 16:56:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 16:56:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 16:56:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 16:56:56 INFO   [wfs.json] - about to encode JSON
20 056 16:56:56 INFO   [wfs.json] - about to encode JSON
20 056 16:56:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 16:56:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 16:56:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 16:56:56 INFO   [wfs.json] - about to encode JSON
20 056 16:56:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 16:56:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 16:56:56 INFO   [wfs.json] - about to encode JSON
20 056 16:56:56 INFO   [wfs.json] - about to encode JSON
20 057 16:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 16:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:18 INFO   [wfs.json] - about to encode JSON
20 057 16:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 057 16:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 057 16:57:18 INFO   [wfs.json] - about to encode JSON
20 057 16:57:18 INFO   [wfs.json] - about to encode JSON
20 057 16:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 057 16:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 057 16:57:18 INFO   [wfs.json] - about to encode JSON
20 057 16:57:18 INFO   [wfs.json] - about to encode JSON
20 057 16:57:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 16:57:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 057 16:57:19 INFO   [wfs.json] - about to encode JSON
20 057 16:57:19 INFO   [wfs.json] - about to encode JSON
20 057 16:57:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 057 16:57:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:19 INFO   [wfs.json] - about to encode JSON
20 057 16:57:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 057 16:57:19 INFO   [wfs.json] - about to encode JSON
20 057 16:57:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 057 16:57:19 INFO   [wfs.json] - about to encode JSON
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:47 INFO   [wfs.json] - about to encode JSON
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 057 16:57:47 INFO   [wfs.json] - about to encode JSON
20 057 16:57:47 INFO   [wfs.json] - about to encode JSON
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 057 16:57:47 INFO   [wfs.json] - about to encode JSON
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 057 16:57:47 INFO   [wfs.json] - about to encode JSON
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 057 16:57:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 057 16:57:47 INFO   [wfs.json] - about to encode JSON
20 057 16:57:47 INFO   [wfs.json] - about to encode JSON
20 057 16:57:47 INFO   [wfs.json] - about to encode JSON
20 057 16:57:47 INFO   [wfs.json] - about to encode JSON
20 057 16:57:47 INFO   [wfs.json] - about to encode JSON
20 058 16:58:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 16:58:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 16:58:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 16:58:37 INFO   [wfs.json] - about to encode JSON
20 058 16:58:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 16:58:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 16:58:37 INFO   [wfs.json] - about to encode JSON
20 058 16:58:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 16:58:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 16:58:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 16:58:37 INFO   [wfs.json] - about to encode JSON
20 058 16:58:37 INFO   [wfs.json] - about to encode JSON
20 058 16:58:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 16:58:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 16:58:37 INFO   [wfs.json] - about to encode JSON
20 058 16:58:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 16:58:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 16:58:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 16:58:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 16:58:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 16:58:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 16:58:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 16:58:38 INFO   [wfs.json] - about to encode JSON
20 058 16:58:38 INFO   [wfs.json] - about to encode JSON
20 058 16:58:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 16:58:38 INFO   [wfs.json] - about to encode JSON
20 058 16:58:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 16:58:38 INFO   [wfs.json] - about to encode JSON
20 058 16:58:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 16:58:38 INFO   [wfs.json] - about to encode JSON
20 059 16:59:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 059 16:59:02 INFO   [wfs.json] - about to encode JSON
20 059 16:59:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 059 16:59:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 059 16:59:02 INFO   [wfs.json] - about to encode JSON
20 059 16:59:02 INFO   [wfs.json] - about to encode JSON
20 059 16:59:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 059 16:59:02 INFO   [wfs.json] - about to encode JSON
20 059 16:59:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 059 16:59:02 INFO   [wfs.json] - about to encode JSON
20 059 16:59:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 059 16:59:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 059 16:59:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:03 INFO   [wfs.json] - about to encode JSON
20 059 16:59:03 INFO   [wfs.json] - about to encode JSON
20 059 16:59:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 059 16:59:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 059 16:59:03 INFO   [wfs.json] - about to encode JSON
20 059 16:59:03 INFO   [wfs.json] - about to encode JSON
20 059 16:59:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 059 16:59:03 INFO   [wfs.json] - about to encode JSON
20 059 16:59:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 059 16:59:45 INFO   [wfs.json] - about to encode JSON
20 059 16:59:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 059 16:59:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 059 16:59:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 059 16:59:45 INFO   [wfs.json] - about to encode JSON
20 059 16:59:45 INFO   [wfs.json] - about to encode JSON
20 059 16:59:45 INFO   [wfs.json] - about to encode JSON
20 059 16:59:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 059 16:59:45 INFO   [wfs.json] - about to encode JSON
20 059 16:59:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 16:59:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 059 16:59:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 059 16:59:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 059 16:59:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 059 16:59:46 INFO   [wfs.json] - about to encode JSON
20 059 16:59:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 059 16:59:46 INFO   [wfs.json] - about to encode JSON
20 059 16:59:46 INFO   [wfs.json] - about to encode JSON
20 059 16:59:46 INFO   [wfs.json] - about to encode JSON
20 059 16:59:46 INFO   [wfs.json] - about to encode JSON
20 000 17:00:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 000 17:00:03 INFO   [wfs.json] - about to encode JSON
20 000 17:00:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 000 17:00:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 000 17:00:03 INFO   [wfs.json] - about to encode JSON
20 000 17:00:03 INFO   [wfs.json] - about to encode JSON
20 000 17:00:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 000 17:00:03 INFO   [wfs.json] - about to encode JSON
20 000 17:00:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 000 17:00:03 INFO   [wfs.json] - about to encode JSON
20 000 17:00:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 000 17:00:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 000 17:00:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 000 17:00:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 000 17:00:04 INFO   [wfs.json] - about to encode JSON
20 000 17:00:04 INFO   [wfs.json] - about to encode JSON
20 000 17:00:04 INFO   [wfs.json] - about to encode JSON
20 000 17:00:04 INFO   [wfs.json] - about to encode JSON
20 000 17:00:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 000 17:00:04 INFO   [wfs.json] - about to encode JSON
20 000 17:00:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 000 17:00:13 INFO   [wfs.json] - about to encode JSON
20 000 17:00:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 000 17:00:13 INFO   [wfs.json] - about to encode JSON
20 000 17:00:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 000 17:00:13 INFO   [wfs.json] - about to encode JSON
20 000 17:00:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 000 17:00:13 INFO   [wfs.json] - about to encode JSON
20 000 17:00:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 000 17:00:13 INFO   [wfs.json] - about to encode JSON
20 000 17:00:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 000 17:00:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 000 17:00:14 INFO   [wfs.json] - about to encode JSON
20 000 17:00:14 INFO   [wfs.json] - about to encode JSON
20 000 17:00:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 000 17:00:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 000 17:00:14 INFO   [wfs.json] - about to encode JSON
20 000 17:00:14 INFO   [wfs.json] - about to encode JSON
20 000 17:00:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 000 17:00:14 INFO   [wfs.json] - about to encode JSON
20 000 17:00:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 000 17:00:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 000 17:00:25 INFO   [wfs.json] - about to encode JSON
20 000 17:00:25 INFO   [wfs.json] - about to encode JSON
20 000 17:00:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 000 17:00:25 INFO   [wfs.json] - about to encode JSON
20 000 17:00:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 000 17:00:25 INFO   [wfs.json] - about to encode JSON
20 000 17:00:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 000 17:00:25 INFO   [wfs.json] - about to encode JSON
20 000 17:00:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 000 17:00:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 000 17:00:26 INFO   [wfs.json] - about to encode JSON
20 000 17:00:26 INFO   [wfs.json] - about to encode JSON
20 000 17:00:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 000 17:00:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 000 17:00:26 INFO   [wfs.json] - about to encode JSON
20 000 17:00:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 000 17:00:26 INFO   [wfs.json] - about to encode JSON
20 000 17:00:26 INFO   [wfs.json] - about to encode JSON
20 000 17:00:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 000 17:00:43 INFO   [wfs.json] - about to encode JSON
20 000 17:00:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 000 17:00:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 000 17:00:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 000 17:00:43 INFO   [wfs.json] - about to encode JSON
20 000 17:00:43 INFO   [wfs.json] - about to encode JSON
20 000 17:00:43 INFO   [wfs.json] - about to encode JSON
20 000 17:00:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 000 17:00:43 INFO   [wfs.json] - about to encode JSON
20 000 17:00:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 17:00:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 000 17:00:44 INFO   [wfs.json] - about to encode JSON
20 000 17:00:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 000 17:00:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 000 17:00:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 000 17:00:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 000 17:00:44 INFO   [wfs.json] - about to encode JSON
20 000 17:00:44 INFO   [wfs.json] - about to encode JSON
20 000 17:00:44 INFO   [wfs.json] - about to encode JSON
20 000 17:00:44 INFO   [wfs.json] - about to encode JSON
20 003 17:03:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 17:03:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 17:03:02 INFO   [wfs.json] - about to encode JSON
20 003 17:03:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:02 INFO   [wfs.json] - about to encode JSON
20 003 17:03:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 17:03:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 17:03:02 INFO   [wfs.json] - about to encode JSON
20 003 17:03:02 INFO   [wfs.json] - about to encode JSON
20 003 17:03:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 17:03:02 INFO   [wfs.json] - about to encode JSON
20 003 17:03:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 17:03:03 INFO   [wfs.json] - about to encode JSON
20 003 17:03:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 17:03:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 17:03:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 17:03:03 INFO   [wfs.json] - about to encode JSON
20 003 17:03:03 INFO   [wfs.json] - about to encode JSON
20 003 17:03:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 17:03:03 INFO   [wfs.json] - about to encode JSON
20 003 17:03:03 INFO   [wfs.json] - about to encode JSON
20 003 17:03:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 17:03:45 INFO   [wfs.json] - about to encode JSON
20 003 17:03:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 17:03:45 INFO   [wfs.json] - about to encode JSON
20 003 17:03:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 17:03:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 17:03:45 INFO   [wfs.json] - about to encode JSON
20 003 17:03:45 INFO   [wfs.json] - about to encode JSON
20 003 17:03:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 17:03:45 INFO   [wfs.json] - about to encode JSON
20 003 17:03:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 17:03:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:46 INFO   [wfs.json] - about to encode JSON
20 003 17:03:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 17:03:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 17:03:46 INFO   [wfs.json] - about to encode JSON
20 003 17:03:46 INFO   [wfs.json] - about to encode JSON
20 003 17:03:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 17:03:46 INFO   [wfs.json] - about to encode JSON
20 003 17:03:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 17:03:46 INFO   [wfs.json] - about to encode JSON
20 003 17:03:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 17:03:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 17:03:52 INFO   [wfs.json] - about to encode JSON
20 003 17:03:52 INFO   [wfs.json] - about to encode JSON
20 003 17:03:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 17:03:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 17:03:52 INFO   [wfs.json] - about to encode JSON
20 003 17:03:52 INFO   [wfs.json] - about to encode JSON
20 003 17:03:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 17:03:52 INFO   [wfs.json] - about to encode JSON
20 003 17:03:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 17:03:53 INFO   [wfs.json] - about to encode JSON
20 003 17:03:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 17:03:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 17:03:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 17:03:53 INFO   [wfs.json] - about to encode JSON
20 003 17:03:53 INFO   [wfs.json] - about to encode JSON
20 003 17:03:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 17:03:53 INFO   [wfs.json] - about to encode JSON
20 003 17:03:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 17:03:53 INFO   [wfs.json] - about to encode JSON
20 004 17:04:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 17:04:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 17:04:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 17:04:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 17:04:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 17:04:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 17:04:38 INFO   [wfs.json] - about to encode JSON
20 004 17:04:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 17:04:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 17:04:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 17:04:38 INFO   [wfs.json] - about to encode JSON
20 004 17:04:38 INFO   [wfs.json] - about to encode JSON
20 004 17:04:38 INFO   [wfs.json] - about to encode JSON
20 004 17:04:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 17:04:38 INFO   [wfs.json] - about to encode JSON
20 004 17:04:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 17:04:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 17:04:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 17:04:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 17:04:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 17:04:39 INFO   [wfs.json] - about to encode JSON
20 004 17:04:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 17:04:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 17:04:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 17:04:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 17:04:39 INFO   [wfs.json] - about to encode JSON
20 004 17:04:39 INFO   [wfs.json] - about to encode JSON
20 004 17:04:39 INFO   [wfs.json] - about to encode JSON
20 004 17:04:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 17:04:39 INFO   [wfs.json] - about to encode JSON
20 007 17:07:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 17:07:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 17:07:27 INFO   [wfs.json] - about to encode JSON
20 007 17:07:27 INFO   [wfs.json] - about to encode JSON
20 007 17:07:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 17:07:27 INFO   [wfs.json] - about to encode JSON
20 007 17:07:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 17:07:27 INFO   [wfs.json] - about to encode JSON
20 007 17:07:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 17:07:27 INFO   [wfs.json] - about to encode JSON
20 007 17:07:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 17:07:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 17:07:28 INFO   [wfs.json] - about to encode JSON
20 007 17:07:28 INFO   [wfs.json] - about to encode JSON
20 007 17:07:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 17:07:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 17:07:28 INFO   [wfs.json] - about to encode JSON
20 007 17:07:28 INFO   [wfs.json] - about to encode JSON
20 007 17:07:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 17:07:28 INFO   [wfs.json] - about to encode JSON
20 007 17:07:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 17:07:40 INFO   [wfs.json] - about to encode JSON
20 007 17:07:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 17:07:40 INFO   [wfs.json] - about to encode JSON
20 007 17:07:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 17:07:40 INFO   [wfs.json] - about to encode JSON
20 007 17:07:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 17:07:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 17:07:40 INFO   [wfs.json] - about to encode JSON
20 007 17:07:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 17:07:40 INFO   [wfs.json] - about to encode JSON
20 014 17:14:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 17:14:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 014 17:14:09 INFO   [wfs.json] - about to encode JSON
20 014 17:14:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 17:14:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 17:14:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 014 17:14:09 INFO   [wfs.json] - about to encode JSON
20 014 17:14:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 17:14:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 17:14:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 014 17:14:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 014 17:14:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 014 17:14:09 INFO   [wfs.json] - about to encode JSON
20 014 17:14:09 INFO   [wfs.json] - about to encode JSON
20 014 17:14:09 INFO   [wfs.json] - about to encode JSON
20 014 17:14:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 17:14:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 17:14:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 17:14:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 17:14:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 17:14:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 014 17:14:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 014 17:14:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 014 17:14:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 014 17:14:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 014 17:14:10 INFO   [wfs.json] - about to encode JSON
20 014 17:14:10 INFO   [wfs.json] - about to encode JSON
20 014 17:14:10 INFO   [wfs.json] - about to encode JSON
20 014 17:14:10 INFO   [wfs.json] - about to encode JSON
20 014 17:14:10 INFO   [wfs.json] - about to encode JSON
20 017 17:17:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 17:17:25 INFO   [wfs.json] - about to encode JSON
20 017 17:17:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 17:17:25 INFO   [wfs.json] - about to encode JSON
20 017 17:17:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 17:17:25 INFO   [wfs.json] - about to encode JSON
20 017 17:17:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 17:17:25 INFO   [wfs.json] - about to encode JSON
20 017 17:17:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 17:17:25 INFO   [wfs.json] - about to encode JSON
20 017 17:17:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 17:17:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 17:17:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 17:17:26 INFO   [wfs.json] - about to encode JSON
20 017 17:17:26 INFO   [wfs.json] - about to encode JSON
20 017 17:17:26 INFO   [wfs.json] - about to encode JSON
20 017 17:17:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 17:17:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 17:17:26 INFO   [wfs.json] - about to encode JSON
20 017 17:17:26 INFO   [wfs.json] - about to encode JSON
20 017 17:17:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 17:17:50 INFO   [wfs.json] - about to encode JSON
20 017 17:17:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 17:17:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 17:17:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 17:17:50 INFO   [wfs.json] - about to encode JSON
20 017 17:17:50 INFO   [wfs.json] - about to encode JSON
20 017 17:17:50 INFO   [wfs.json] - about to encode JSON
20 017 17:17:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 17:17:50 INFO   [wfs.json] - about to encode JSON
20 017 17:17:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 17:17:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 17:17:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 17:17:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 17:17:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 17:17:51 INFO   [wfs.json] - about to encode JSON
20 017 17:17:51 INFO   [wfs.json] - about to encode JSON
20 017 17:17:51 INFO   [wfs.json] - about to encode JSON
20 017 17:17:51 INFO   [wfs.json] - about to encode JSON
20 017 17:17:51 INFO   [wfs.json] - about to encode JSON
20 017 17:17:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 17:17:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:56 INFO   [wfs.json] - about to encode JSON
20 017 17:17:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 17:17:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 17:17:56 INFO   [wfs.json] - about to encode JSON
20 017 17:17:56 INFO   [wfs.json] - about to encode JSON
20 017 17:17:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 17:17:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 17:17:56 INFO   [wfs.json] - about to encode JSON
20 017 17:17:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 17:17:56 INFO   [wfs.json] - about to encode JSON
20 018 17:18:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213429.54466251153 : 218321.5144727628, 6080043.656384583 : 6082360.653804478] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 17:18:14 INFO   [wfs.json] - about to encode JSON
20 018 17:18:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213429.54466251153 : 218321.5144727628, 6080043.656384583 : 6082360.653804478] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 17:18:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:14 INFO   [wfs.json] - about to encode JSON
20 018 17:18:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213429.54466251153 : 218321.5144727628, 6080043.656384583 : 6082360.653804478] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 17:18:14 INFO   [wfs.json] - about to encode JSON
20 018 17:18:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213429.54466251153 : 218321.5144727628, 6080043.656384583 : 6082360.653804478] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 17:18:14 INFO   [wfs.json] - about to encode JSON
20 018 17:18:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213429.54466251153 : 218321.5144727628, 6080043.656384583 : 6082360.653804478] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 17:18:14 INFO   [wfs.json] - about to encode JSON
20 018 17:18:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 17:18:44 INFO   [wfs.json] - about to encode JSON
20 018 17:18:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 17:18:44 INFO   [wfs.json] - about to encode JSON
20 018 17:18:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 17:18:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 17:18:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 17:18:44 INFO   [wfs.json] - about to encode JSON
20 018 17:18:44 INFO   [wfs.json] - about to encode JSON
20 018 17:18:44 INFO   [wfs.json] - about to encode JSON
20 018 17:18:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 17:18:45 INFO   [wfs.json] - about to encode JSON
20 018 17:18:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 17:18:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 17:18:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 17:18:45 INFO   [wfs.json] - about to encode JSON
20 018 17:18:45 INFO   [wfs.json] - about to encode JSON
20 018 17:18:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 17:18:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 17:18:45 INFO   [wfs.json] - about to encode JSON
20 018 17:18:45 INFO   [wfs.json] - about to encode JSON
20 021 17:21:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 17:21:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 17:21:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 17:21:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 17:21:00 INFO   [wfs.json] - about to encode JSON
20 021 17:21:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 17:21:00 INFO   [wfs.json] - about to encode JSON
20 021 17:21:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 17:21:00 INFO   [wfs.json] - about to encode JSON
20 021 17:21:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 17:21:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 17:21:00 INFO   [wfs.json] - about to encode JSON
20 021 17:21:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 17:21:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 17:21:00 INFO   [wfs.json] - about to encode JSON
20 021 17:21:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 17:21:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 17:21:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 17:21:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 17:21:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 17:21:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 17:21:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 17:21:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 17:21:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 17:21:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 17:21:01 INFO   [wfs.json] - about to encode JSON
20 021 17:21:01 INFO   [wfs.json] - about to encode JSON
20 021 17:21:01 INFO   [wfs.json] - about to encode JSON
20 021 17:21:01 INFO   [wfs.json] - about to encode JSON
20 021 17:21:01 INFO   [wfs.json] - about to encode JSON
20 022 17:22:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 17:22:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:46 INFO   [wfs.json] - about to encode JSON
20 022 17:22:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 17:22:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 17:22:46 INFO   [wfs.json] - about to encode JSON
20 022 17:22:46 INFO   [wfs.json] - about to encode JSON
20 022 17:22:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 17:22:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 17:22:46 INFO   [wfs.json] - about to encode JSON
20 022 17:22:46 INFO   [wfs.json] - about to encode JSON
20 022 17:22:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 17:22:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 17:22:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 17:22:47 INFO   [wfs.json] - about to encode JSON
20 022 17:22:47 INFO   [wfs.json] - about to encode JSON
20 022 17:22:47 INFO   [wfs.json] - about to encode JSON
20 022 17:22:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 17:22:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 17:22:47 INFO   [wfs.json] - about to encode JSON
20 022 17:22:47 INFO   [wfs.json] - about to encode JSON
20 022 17:22:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 17:22:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:48 INFO   [wfs.json] - about to encode JSON
20 022 17:22:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 17:22:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 17:22:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 17:22:48 INFO   [wfs.json] - about to encode JSON
20 022 17:22:48 INFO   [wfs.json] - about to encode JSON
20 022 17:22:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 17:22:48 INFO   [wfs.json] - about to encode JSON
20 022 17:22:48 INFO   [wfs.json] - about to encode JSON
20 022 17:22:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 17:22:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 17:22:49 INFO   [wfs.json] - about to encode JSON
20 022 17:22:49 INFO   [wfs.json] - about to encode JSON
20 022 17:22:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 17:22:49 INFO   [wfs.json] - about to encode JSON
20 022 17:22:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 17:22:49 INFO   [wfs.json] - about to encode JSON
20 022 17:22:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 17:22:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 17:22:49 INFO   [wfs.json] - about to encode JSON
20 023 17:23:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 17:23:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 17:23:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212944.63824586733 : 219241.99918064865, 6079110.378101377 : 6082093.014872244] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 17:23:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212944.63824586733 : 219241.99918064865, 6079110.378101377 : 6082093.014872244] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 17:23:32 INFO   [wfs.json] - about to encode JSON
20 023 17:23:32 INFO   [wfs.json] - about to encode JSON
20 023 17:23:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 17:23:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212944.63824586733 : 219241.99918064865, 6079110.378101377 : 6082093.014872244] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 17:23:32 INFO   [wfs.json] - about to encode JSON
20 023 17:23:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 17:23:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 17:23:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212944.63824586733 : 219241.99918064865, 6079110.378101377 : 6082093.014872244] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 17:23:32 INFO   [wfs.json] - about to encode JSON
20 023 17:23:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212944.63824586733 : 219241.99918064865, 6079110.378101377 : 6082093.014872244] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 17:23:32 INFO   [wfs.json] - about to encode JSON
20 024 17:24:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 17:24:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 17:24:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 024 17:24:34 INFO   [wfs.json] - about to encode JSON
20 024 17:24:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 17:24:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 024 17:24:34 INFO   [wfs.json] - about to encode JSON
20 024 17:24:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 17:24:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 17:24:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 024 17:24:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 17:24:34 INFO   [wfs.json] - about to encode JSON
20 024 17:24:34 INFO   [wfs.json] - about to encode JSON
20 024 17:24:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 024 17:24:34 INFO   [wfs.json] - about to encode JSON
20 024 17:24:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 17:24:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 17:24:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 17:24:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 17:24:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 17:24:35 INFO   [wfs.json] - about to encode JSON
20 024 17:24:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 17:24:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 024 17:24:35 INFO   [wfs.json] - about to encode JSON
20 024 17:24:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 024 17:24:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 024 17:24:35 INFO   [wfs.json] - about to encode JSON
20 024 17:24:35 INFO   [wfs.json] - about to encode JSON
20 024 17:24:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 024 17:24:35 INFO   [wfs.json] - about to encode JSON
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 17:25:03 INFO   [wfs.json] - about to encode JSON
20 025 17:25:03 INFO   [wfs.json] - about to encode JSON
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 17:25:03 INFO   [wfs.json] - about to encode JSON
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 17:25:03 INFO   [wfs.json] - about to encode JSON
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 17:25:03 INFO   [wfs.json] - about to encode JSON
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 17:25:03 INFO   [wfs.json] - about to encode JSON
20 025 17:25:03 INFO   [wfs.json] - about to encode JSON
20 025 17:25:03 INFO   [wfs.json] - about to encode JSON
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 17:25:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 17:25:03 INFO   [wfs.json] - about to encode JSON
20 025 17:25:03 INFO   [wfs.json] - about to encode JSON
20 025 17:25:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 17:25:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 17:25:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 17:25:05 INFO   [wfs.json] - about to encode JSON
20 025 17:25:05 INFO   [wfs.json] - about to encode JSON
20 025 17:25:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:05 INFO   [wfs.json] - about to encode JSON
20 025 17:25:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 17:25:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:05 INFO   [wfs.json] - about to encode JSON
20 025 17:25:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 17:25:05 INFO   [wfs.json] - about to encode JSON
20 025 17:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212677.11766532937 : 217569.08747558063, 6079544.4270435935 : 6081861.424463489] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 17:25:12 INFO   [wfs.json] - about to encode JSON
20 025 17:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212677.11766532937 : 217569.08747558063, 6079544.4270435935 : 6081861.424463489] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 17:25:12 INFO   [wfs.json] - about to encode JSON
20 025 17:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212677.11766532937 : 217569.08747558063, 6079544.4270435935 : 6081861.424463489] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 17:25:12 INFO   [wfs.json] - about to encode JSON
20 025 17:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212677.11766532937 : 217569.08747558063, 6079544.4270435935 : 6081861.424463489] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 17:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212677.11766532937 : 217569.08747558063, 6079544.4270435935 : 6081861.424463489] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 17:25:12 INFO   [wfs.json] - about to encode JSON
20 025 17:25:12 INFO   [wfs.json] - about to encode JSON
20 025 17:25:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212944.64726432748 : 217836.61707457874, 6079678.191843093 : 6081995.189262989] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 17:25:15 INFO   [wfs.json] - about to encode JSON
20 025 17:25:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212944.64726432748 : 217836.61707457874, 6079678.191843093 : 6081995.189262989] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 17:25:15 INFO   [wfs.json] - about to encode JSON
20 025 17:25:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212944.64726432748 : 217836.61707457874, 6079678.191843093 : 6081995.189262989] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 17:25:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:15 INFO   [wfs.json] - about to encode JSON
20 025 17:25:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212944.64726432748 : 217836.61707457874, 6079678.191843093 : 6081995.189262989] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 17:25:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212944.64726432748 : 217836.61707457874, 6079678.191843093 : 6081995.189262989] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 17:25:15 INFO   [wfs.json] - about to encode JSON
20 025 17:25:15 INFO   [wfs.json] - about to encode JSON
20 025 17:25:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213333.99837715505 : 218225.9681874063, 6079866.895756672 : 6082183.893176568] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 17:25:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:18 INFO   [wfs.json] - about to encode JSON
20 025 17:25:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213333.99837715505 : 218225.9681874063, 6079866.895756672 : 6082183.893176568] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 17:25:18 INFO   [wfs.json] - about to encode JSON
20 025 17:25:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213333.99837715505 : 218225.9681874063, 6079866.895756672 : 6082183.893176568] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 17:25:18 INFO   [wfs.json] - about to encode JSON
20 025 17:25:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213333.99837715505 : 218225.9681874063, 6079866.895756672 : 6082183.893176568] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 17:25:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:18 INFO   [wfs.json] - about to encode JSON
20 025 17:25:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213333.99837715505 : 218225.9681874063, 6079866.895756672 : 6082183.893176568] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 17:25:18 INFO   [wfs.json] - about to encode JSON
20 025 17:25:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213620.63723322446 : 218512.60704347573, 6079066.695616811 : 6081383.693036706] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 17:25:34 INFO   [wfs.json] - about to encode JSON
20 025 17:25:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213620.63723322446 : 218512.60704347573, 6079066.695616811 : 6081383.693036706] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 17:25:34 INFO   [wfs.json] - about to encode JSON
20 025 17:25:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 17:25:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213620.63723322446 : 218512.60704347573, 6079066.695616811 : 6081383.693036706] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 17:25:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213620.63723322446 : 218512.60704347573, 6079066.695616811 : 6081383.693036706] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 17:25:34 INFO   [wfs.json] - about to encode JSON
20 025 17:25:34 INFO   [wfs.json] - about to encode JSON
20 025 17:25:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213620.63723322446 : 218512.60704347573, 6079066.695616811 : 6081383.693036706] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 17:25:34 INFO   [wfs.json] - about to encode JSON
20 027 17:27:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 027 17:27:16 INFO   [wfs.json] - about to encode JSON
20 027 17:27:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 027 17:27:16 INFO   [wfs.json] - about to encode JSON
20 027 17:27:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 027 17:27:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 027 17:27:16 INFO   [wfs.json] - about to encode JSON
20 027 17:27:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 027 17:27:16 INFO   [wfs.json] - about to encode JSON
20 027 17:27:16 INFO   [wfs.json] - about to encode JSON
20 027 17:27:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 027 17:27:17 INFO   [wfs.json] - about to encode JSON
20 027 17:27:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 027 17:27:17 INFO   [wfs.json] - about to encode JSON
20 027 17:27:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 027 17:27:17 INFO   [wfs.json] - about to encode JSON
20 027 17:27:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 027 17:27:17 INFO   [wfs.json] - about to encode JSON
20 027 17:27:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 027 17:27:17 INFO   [wfs.json] - about to encode JSON
20 027 17:27:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 027 17:27:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:55 INFO   [wfs.json] - about to encode JSON
20 027 17:27:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 027 17:27:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:55 INFO   [wfs.json] - about to encode JSON
20 027 17:27:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 027 17:27:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 027 17:27:55 INFO   [wfs.json] - about to encode JSON
20 027 17:27:55 INFO   [wfs.json] - about to encode JSON
20 027 17:27:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 027 17:27:55 INFO   [wfs.json] - about to encode JSON
20 027 17:27:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 027 17:27:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:56 INFO   [wfs.json] - about to encode JSON
20 027 17:27:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 17:27:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 027 17:27:56 INFO   [wfs.json] - about to encode JSON
20 027 17:27:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 027 17:27:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 027 17:27:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 027 17:27:56 INFO   [wfs.json] - about to encode JSON
20 027 17:27:56 INFO   [wfs.json] - about to encode JSON
20 027 17:27:56 INFO   [wfs.json] - about to encode JSON
20 028 17:28:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 028 17:28:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 028 17:28:00 INFO   [wfs.json] - about to encode JSON
20 028 17:28:00 INFO   [wfs.json] - about to encode JSON
20 028 17:28:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 028 17:28:00 INFO   [wfs.json] - about to encode JSON
20 028 17:28:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 028 17:28:00 INFO   [wfs.json] - about to encode JSON
20 028 17:28:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 028 17:28:00 INFO   [wfs.json] - about to encode JSON
20 028 17:28:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 028 17:28:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 028 17:28:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 028 17:28:01 INFO   [wfs.json] - about to encode JSON
20 028 17:28:01 INFO   [wfs.json] - about to encode JSON
20 028 17:28:01 INFO   [wfs.json] - about to encode JSON
20 028 17:28:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 028 17:28:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 028 17:28:01 INFO   [wfs.json] - about to encode JSON
20 028 17:28:01 INFO   [wfs.json] - about to encode JSON
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 028 17:28:21 INFO   [wfs.json] - about to encode JSON
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 028 17:28:21 INFO   [wfs.json] - about to encode JSON
20 028 17:28:21 INFO   [wfs.json] - about to encode JSON
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 028 17:28:21 INFO   [wfs.json] - about to encode JSON
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 028 17:28:21 INFO   [wfs.json] - about to encode JSON
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 028 17:28:21 INFO   [wfs.json] - about to encode JSON
20 028 17:28:21 INFO   [wfs.json] - about to encode JSON
20 028 17:28:21 INFO   [wfs.json] - about to encode JSON
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 028 17:28:21 INFO   [wfs.json] - about to encode JSON
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 028 17:28:21 INFO   [wfs.json] - about to encode JSON
20 028 17:28:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 028 17:28:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 028 17:28:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:24 INFO   [wfs.json] - about to encode JSON
20 028 17:28:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 028 17:28:24 INFO   [wfs.json] - about to encode JSON
20 028 17:28:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 17:28:24 INFO   [wfs.json] - about to encode JSON
20 028 17:28:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 028 17:28:24 INFO   [wfs.json] - about to encode JSON
20 028 17:28:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 028 17:28:24 INFO   [wfs.json] - about to encode JSON
20 030 17:30:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213632.58051889404 : 216785.60793565752, 6079783.292756986 : 6082100.2901768815] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 030 17:30:03 INFO   [wfs.json] - about to encode JSON
20 030 17:30:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213632.58051889404 : 216785.60793565752, 6079783.292756986 : 6082100.2901768815] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 030 17:30:03 INFO   [wfs.json] - about to encode JSON
20 030 17:30:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213632.58051889404 : 216785.60793565752, 6079783.292756986 : 6082100.2901768815] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 030 17:30:03 INFO   [wfs.json] - about to encode JSON
20 030 17:30:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213632.58051889404 : 216785.60793565752, 6079783.292756986 : 6082100.2901768815] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 030 17:30:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213632.58051889404 : 216785.60793565752, 6079783.292756986 : 6082100.2901768815] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 030 17:30:03 INFO   [wfs.json] - about to encode JSON
20 030 17:30:03 INFO   [wfs.json] - about to encode JSON
20 030 17:30:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 030 17:30:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 030 17:30:13 INFO   [wfs.json] - about to encode JSON
20 030 17:30:13 INFO   [wfs.json] - about to encode JSON
20 030 17:30:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 030 17:30:13 INFO   [wfs.json] - about to encode JSON
20 030 17:30:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 030 17:30:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 030 17:30:13 INFO   [wfs.json] - about to encode JSON
20 030 17:30:13 INFO   [wfs.json] - about to encode JSON
20 030 17:30:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 030 17:30:48 INFO   [wfs.json] - about to encode JSON
20 030 17:30:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 030 17:30:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 030 17:30:48 INFO   [wfs.json] - about to encode JSON
20 030 17:30:48 INFO   [wfs.json] - about to encode JSON
20 030 17:30:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 030 17:30:48 INFO   [wfs.json] - about to encode JSON
20 030 17:30:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 030 17:30:48 INFO   [wfs.json] - about to encode JSON
20 030 17:30:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 030 17:30:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 030 17:30:49 INFO   [wfs.json] - about to encode JSON
20 030 17:30:49 INFO   [wfs.json] - about to encode JSON
20 030 17:30:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 030 17:30:49 INFO   [wfs.json] - about to encode JSON
20 030 17:30:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 17:30:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 030 17:30:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 030 17:30:49 INFO   [wfs.json] - about to encode JSON
20 030 17:30:49 INFO   [wfs.json] - about to encode JSON
20 031 17:31:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 17:31:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 17:31:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:44 INFO   [wfs.json] - about to encode JSON
20 031 17:31:44 INFO   [wfs.json] - about to encode JSON
20 031 17:31:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 17:31:44 INFO   [wfs.json] - about to encode JSON
20 031 17:31:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 17:31:44 INFO   [wfs.json] - about to encode JSON
20 031 17:31:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 17:31:44 INFO   [wfs.json] - about to encode JSON
20 031 17:31:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 17:31:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:45 INFO   [wfs.json] - about to encode JSON
20 031 17:31:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 17:31:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 17:31:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 17:31:45 INFO   [wfs.json] - about to encode JSON
20 031 17:31:45 INFO   [wfs.json] - about to encode JSON
20 031 17:31:45 INFO   [wfs.json] - about to encode JSON
20 031 17:31:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 17:31:45 INFO   [wfs.json] - about to encode JSON
20 031 17:31:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 17:31:58 INFO   [wfs.json] - about to encode JSON
20 031 17:31:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 17:31:58 INFO   [wfs.json] - about to encode JSON
20 031 17:31:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 17:31:58 INFO   [wfs.json] - about to encode JSON
20 031 17:31:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 17:31:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 17:31:58 INFO   [wfs.json] - about to encode JSON
20 031 17:31:58 INFO   [wfs.json] - about to encode JSON
20 031 17:31:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 17:31:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 17:31:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 17:31:59 INFO   [wfs.json] - about to encode JSON
20 031 17:31:59 INFO   [wfs.json] - about to encode JSON
20 031 17:31:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 17:31:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 17:31:59 INFO   [wfs.json] - about to encode JSON
20 031 17:31:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 17:31:59 INFO   [wfs.json] - about to encode JSON
20 031 17:31:59 INFO   [wfs.json] - about to encode JSON
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:31 INFO   [wfs.json] - about to encode JSON
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 17:32:31 INFO   [wfs.json] - about to encode JSON
20 032 17:32:31 INFO   [wfs.json] - about to encode JSON
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 17:32:31 INFO   [wfs.json] - about to encode JSON
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 17:32:31 INFO   [wfs.json] - about to encode JSON
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 17:32:31 INFO   [wfs.json] - about to encode JSON
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 17:32:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 17:32:32 INFO   [wfs.json] - about to encode JSON
20 032 17:32:32 INFO   [wfs.json] - about to encode JSON
20 032 17:32:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 17:32:32 INFO   [wfs.json] - about to encode JSON
20 032 17:32:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 17:32:32 INFO   [wfs.json] - about to encode JSON
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 17:32:46 INFO   [wfs.json] - about to encode JSON
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 17:32:46 INFO   [wfs.json] - about to encode JSON
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 17:32:46 INFO   [wfs.json] - about to encode JSON
20 032 17:32:46 INFO   [wfs.json] - about to encode JSON
20 032 17:32:46 INFO   [wfs.json] - about to encode JSON
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 17:32:46 INFO   [wfs.json] - about to encode JSON
20 032 17:32:46 INFO   [wfs.json] - about to encode JSON
20 032 17:32:46 INFO   [wfs.json] - about to encode JSON
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 17:32:46 INFO   [wfs.json] - about to encode JSON
20 032 17:32:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 17:32:46 INFO   [wfs.json] - about to encode JSON
20 032 17:32:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 17:32:50 INFO   [wfs.json] - about to encode JSON
20 032 17:32:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 17:32:50 INFO   [wfs.json] - about to encode JSON
20 032 17:32:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 17:32:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:50 INFO   [wfs.json] - about to encode JSON
20 032 17:32:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 17:32:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:50 INFO   [wfs.json] - about to encode JSON
20 032 17:32:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 17:32:50 INFO   [wfs.json] - about to encode JSON
20 032 17:32:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 17:32:51 INFO   [wfs.json] - about to encode JSON
20 032 17:32:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 17:32:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 17:32:51 INFO   [wfs.json] - about to encode JSON
20 032 17:32:51 INFO   [wfs.json] - about to encode JSON
20 032 17:32:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 17:32:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 17:32:51 INFO   [wfs.json] - about to encode JSON
20 032 17:32:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 17:32:51 INFO   [wfs.json] - about to encode JSON
20 034 17:34:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 17:34:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 17:34:15 INFO   [wfs.json] - about to encode JSON
20 034 17:34:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 17:34:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 17:34:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 17:34:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 17:34:15 INFO   [wfs.json] - about to encode JSON
20 034 17:34:15 INFO   [wfs.json] - about to encode JSON
20 034 17:34:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 17:34:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 17:34:15 INFO   [wfs.json] - about to encode JSON
20 034 17:34:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 17:34:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 17:34:15 INFO   [wfs.json] - about to encode JSON
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 035 17:35:27 INFO   [wfs.json] - about to encode JSON
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 035 17:35:27 INFO   [wfs.json] - about to encode JSON
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 17:35:27 INFO   [wfs.json] - about to encode JSON
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 035 17:35:27 INFO   [wfs.json] - about to encode JSON
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 035 17:35:27 INFO   [wfs.json] - about to encode JSON
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 17:35:27 INFO   [wfs.json] - about to encode JSON
20 035 17:35:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 035 17:35:27 INFO   [wfs.json] - about to encode JSON
20 035 17:35:27 INFO   [wfs.json] - about to encode JSON
20 035 17:35:27 INFO   [wfs.json] - about to encode JSON
20 035 17:35:27 INFO   [wfs.json] - about to encode JSON
20 036 17:36:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 036 17:36:33 INFO   [wfs.json] - about to encode JSON
20 036 17:36:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 036 17:36:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:33 INFO   [wfs.json] - about to encode JSON
20 036 17:36:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 036 17:36:33 INFO   [wfs.json] - about to encode JSON
20 036 17:36:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 036 17:36:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:33 INFO   [wfs.json] - about to encode JSON
20 036 17:36:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 036 17:36:33 INFO   [wfs.json] - about to encode JSON
20 036 17:36:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 036 17:36:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 036 17:36:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 036 17:36:34 INFO   [wfs.json] - about to encode JSON
20 036 17:36:34 INFO   [wfs.json] - about to encode JSON
20 036 17:36:34 INFO   [wfs.json] - about to encode JSON
20 036 17:36:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 036 17:36:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 036 17:36:34 INFO   [wfs.json] - about to encode JSON
20 036 17:36:34 INFO   [wfs.json] - about to encode JSON
20 036 17:36:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 036 17:36:39 INFO   [wfs.json] - about to encode JSON
20 036 17:36:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 036 17:36:39 INFO   [wfs.json] - about to encode JSON
20 036 17:36:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 036 17:36:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 036 17:36:39 INFO   [wfs.json] - about to encode JSON
20 036 17:36:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:39 INFO   [wfs.json] - about to encode JSON
20 036 17:36:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 036 17:36:39 INFO   [wfs.json] - about to encode JSON
20 036 17:36:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 036 17:36:40 INFO   [wfs.json] - about to encode JSON
20 036 17:36:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 036 17:36:40 INFO   [wfs.json] - about to encode JSON
20 036 17:36:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 036 17:36:40 INFO   [wfs.json] - about to encode JSON
20 036 17:36:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 036 17:36:40 INFO   [wfs.json] - about to encode JSON
20 036 17:36:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 036 17:36:40 INFO   [wfs.json] - about to encode JSON
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 036 17:36:52 INFO   [wfs.json] - about to encode JSON
20 036 17:36:52 INFO   [wfs.json] - about to encode JSON
20 036 17:36:52 INFO   [wfs.json] - about to encode JSON
20 036 17:36:52 INFO   [wfs.json] - about to encode JSON
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 036 17:36:52 INFO   [wfs.json] - about to encode JSON
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 036 17:36:52 INFO   [wfs.json] - about to encode JSON
20 036 17:36:52 INFO   [wfs.json] - about to encode JSON
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 036 17:36:52 INFO   [wfs.json] - about to encode JSON
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 036 17:36:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 036 17:36:52 INFO   [wfs.json] - about to encode JSON
20 036 17:36:52 INFO   [wfs.json] - about to encode JSON
20 036 17:36:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 036 17:36:54 INFO   [wfs.json] - about to encode JSON
20 036 17:36:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 036 17:36:54 INFO   [wfs.json] - about to encode JSON
20 036 17:36:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 17:36:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 036 17:36:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 036 17:36:54 INFO   [wfs.json] - about to encode JSON
20 036 17:36:54 INFO   [wfs.json] - about to encode JSON
20 036 17:36:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 036 17:36:54 INFO   [wfs.json] - about to encode JSON
20 037 17:37:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 17:37:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 17:37:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 17:37:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 17:37:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 17:37:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 037 17:37:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 037 17:37:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 037 17:37:48 INFO   [wfs.json] - about to encode JSON
20 037 17:37:48 INFO   [wfs.json] - about to encode JSON
20 037 17:37:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 037 17:37:48 INFO   [wfs.json] - about to encode JSON
20 037 17:37:48 INFO   [wfs.json] - about to encode JSON
20 037 17:37:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 037 17:37:48 INFO   [wfs.json] - about to encode JSON
20 037 17:37:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 17:37:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 17:37:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 037 17:37:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 17:37:49 INFO   [wfs.json] - about to encode JSON
20 037 17:37:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 17:37:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 17:37:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 037 17:37:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 037 17:37:49 INFO   [wfs.json] - about to encode JSON
20 037 17:37:49 INFO   [wfs.json] - about to encode JSON
20 037 17:37:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 037 17:37:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 037 17:37:49 INFO   [wfs.json] - about to encode JSON
20 037 17:37:49 INFO   [wfs.json] - about to encode JSON
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 17:38:00 INFO   [wfs.json] - about to encode JSON
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 17:38:00 INFO   [wfs.json] - about to encode JSON
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 17:38:00 INFO   [wfs.json] - about to encode JSON
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 17:38:00 INFO   [wfs.json] - about to encode JSON
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 17:38:00 INFO   [wfs.json] - about to encode JSON
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 17:38:00 INFO   [wfs.json] - about to encode JSON
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 17:38:00 INFO   [wfs.json] - about to encode JSON
20 038 17:38:00 INFO   [wfs.json] - about to encode JSON
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 17:38:00 INFO   [wfs.json] - about to encode JSON
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 17:38:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 17:38:00 INFO   [wfs.json] - about to encode JSON
20 039 17:39:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 17:39:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 17:39:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 039 17:39:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 039 17:39:27 INFO   [wfs.json] - about to encode JSON
20 039 17:39:27 INFO   [wfs.json] - about to encode JSON
20 039 17:39:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 17:39:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 039 17:39:27 INFO   [wfs.json] - about to encode JSON
20 039 17:39:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 17:39:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 17:39:36 INFO   [wfs.json] - about to encode JSON
20 039 17:39:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 17:39:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 039 17:39:39 INFO   [wfs.json] - about to encode JSON
20 040 17:40:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 17:40:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76759.1244744102 : 79912.15189117374, 5999320.335674448 : 6001637.333094344] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 17:40:43 INFO   [wfs.json] - about to encode JSON
20 040 17:40:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 17:40:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 17:40:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76759.1244744102 : 79912.15189117374, 5999320.335674448 : 6001637.333094344] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 17:40:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76759.1244744102 : 79912.15189117374, 5999320.335674448 : 6001637.333094344] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 17:40:43 INFO   [wfs.json] - about to encode JSON
20 040 17:40:43 INFO   [wfs.json] - about to encode JSON
20 040 17:40:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 17:40:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76759.1244744102 : 79912.15189117374, 5999320.335674448 : 6001637.333094344] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 17:40:43 INFO   [wfs.json] - about to encode JSON
20 040 17:40:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 17:40:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76759.1244744102 : 79912.15189117374, 5999320.335674448 : 6001637.333094344] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 17:40:43 INFO   [wfs.json] - about to encode JSON
20 041 17:41:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 17:41:02 INFO   [wfs.json] - about to encode JSON
20 041 17:41:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 17:41:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 17:41:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:02 INFO   [wfs.json] - about to encode JSON
20 041 17:41:02 INFO   [wfs.json] - about to encode JSON
20 041 17:41:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 17:41:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 17:41:02 INFO   [wfs.json] - about to encode JSON
20 041 17:41:02 INFO   [wfs.json] - about to encode JSON
20 041 17:41:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 17:41:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:04 INFO   [wfs.json] - about to encode JSON
20 041 17:41:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 17:41:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 17:41:04 INFO   [wfs.json] - about to encode JSON
20 041 17:41:04 INFO   [wfs.json] - about to encode JSON
20 041 17:41:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 17:41:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 17:41:12 INFO   [wfs.json] - about to encode JSON
20 041 17:41:12 INFO   [wfs.json] - about to encode JSON
20 041 17:41:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 17:41:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 17:41:49 INFO   [wfs.json] - about to encode JSON
20 041 17:41:49 INFO   [wfs.json] - about to encode JSON
20 041 17:41:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 17:41:49 INFO   [wfs.json] - about to encode JSON
20 041 17:41:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 17:41:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:49 INFO   [wfs.json] - about to encode JSON
20 041 17:41:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 17:41:49 INFO   [wfs.json] - about to encode JSON
20 041 17:41:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 17:41:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 17:41:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 17:41:50 INFO   [wfs.json] - about to encode JSON
20 041 17:41:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 17:41:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 17:41:50 INFO   [wfs.json] - about to encode JSON
20 041 17:41:50 INFO   [wfs.json] - about to encode JSON
20 041 17:41:50 INFO   [wfs.json] - about to encode JSON
20 041 17:41:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 17:41:50 INFO   [wfs.json] - about to encode JSON
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 17:43:08 INFO   [wfs.json] - about to encode JSON
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 17:43:08 INFO   [wfs.json] - about to encode JSON
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 043 17:43:08 INFO   [wfs.json] - about to encode JSON
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 043 17:43:08 INFO   [wfs.json] - about to encode JSON
20 043 17:43:08 INFO   [wfs.json] - about to encode JSON
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 17:43:08 INFO   [wfs.json] - about to encode JSON
20 043 17:43:08 INFO   [wfs.json] - about to encode JSON
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 17:43:08 INFO   [wfs.json] - about to encode JSON
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 17:43:08 INFO   [wfs.json] - about to encode JSON
20 043 17:43:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 043 17:43:08 INFO   [wfs.json] - about to encode JSON
20 045 17:45:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 17:45:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 17:45:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 17:45:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 17:45:06 INFO   [wfs.json] - about to encode JSON
20 045 17:45:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 17:45:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 17:45:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 17:45:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 17:45:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 17:45:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 17:45:06 INFO   [wfs.json] - about to encode JSON
20 045 17:45:06 INFO   [wfs.json] - about to encode JSON
20 045 17:45:06 INFO   [wfs.json] - about to encode JSON
20 045 17:45:06 INFO   [wfs.json] - about to encode JSON
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 046 17:46:57 INFO   [wfs.json] - about to encode JSON
20 046 17:46:57 INFO   [wfs.json] - about to encode JSON
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 046 17:46:57 INFO   [wfs.json] - about to encode JSON
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 046 17:46:57 INFO   [wfs.json] - about to encode JSON
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 046 17:46:57 INFO   [wfs.json] - about to encode JSON
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 046 17:46:57 INFO   [wfs.json] - about to encode JSON
20 046 17:46:57 INFO   [wfs.json] - about to encode JSON
20 046 17:46:57 INFO   [wfs.json] - about to encode JSON
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 046 17:46:57 INFO   [wfs.json] - about to encode JSON
20 046 17:46:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 046 17:46:57 INFO   [wfs.json] - about to encode JSON
20 049 17:49:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 049 17:49:16 INFO   [wfs.json] - about to encode JSON
20 049 17:49:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 049 17:49:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 049 17:49:16 INFO   [wfs.json] - about to encode JSON
20 049 17:49:16 INFO   [wfs.json] - about to encode JSON
20 049 17:49:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 049 17:49:16 INFO   [wfs.json] - about to encode JSON
20 049 17:49:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 049 17:49:16 INFO   [wfs.json] - about to encode JSON
20 049 17:49:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 049 17:49:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 049 17:49:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 049 17:49:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 049 17:49:17 INFO   [wfs.json] - about to encode JSON
20 049 17:49:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 049 17:49:17 INFO   [wfs.json] - about to encode JSON
20 049 17:49:17 INFO   [wfs.json] - about to encode JSON
20 049 17:49:17 INFO   [wfs.json] - about to encode JSON
20 049 17:49:17 INFO   [wfs.json] - about to encode JSON
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 049 17:49:48 INFO   [wfs.json] - about to encode JSON
20 049 17:49:48 INFO   [wfs.json] - about to encode JSON
20 049 17:49:48 INFO   [wfs.json] - about to encode JSON
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 049 17:49:48 INFO   [wfs.json] - about to encode JSON
20 049 17:49:48 INFO   [wfs.json] - about to encode JSON
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 049 17:49:48 INFO   [wfs.json] - about to encode JSON
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 049 17:49:48 INFO   [wfs.json] - about to encode JSON
20 049 17:49:48 INFO   [wfs.json] - about to encode JSON
20 049 17:49:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 049 17:49:49 INFO   [wfs.json] - about to encode JSON
20 049 17:49:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 17:49:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 049 17:49:49 INFO   [wfs.json] - about to encode JSON
20 051 17:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 17:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 17:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 17:51:28 INFO   [wfs.json] - about to encode JSON
20 051 17:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 17:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 17:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 17:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 17:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 17:51:28 INFO   [wfs.json] - about to encode JSON
20 051 17:51:28 INFO   [wfs.json] - about to encode JSON
20 051 17:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 17:51:28 INFO   [wfs.json] - about to encode JSON
20 051 17:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 17:51:28 INFO   [wfs.json] - about to encode JSON
20 051 17:51:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 17:51:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 17:51:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 17:51:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 17:51:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 17:51:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 17:51:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 17:51:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 17:51:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 17:51:29 INFO   [wfs.json] - about to encode JSON
20 051 17:51:29 INFO   [wfs.json] - about to encode JSON
20 051 17:51:29 INFO   [wfs.json] - about to encode JSON
20 051 17:51:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 17:51:29 INFO   [wfs.json] - about to encode JSON
20 051 17:51:29 INFO   [wfs.json] - about to encode JSON
20 052 17:52:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 17:52:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 17:52:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 17:52:51 INFO   [wfs.json] - about to encode JSON
20 052 17:52:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 17:52:51 INFO   [wfs.json] - about to encode JSON
20 052 17:52:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 17:52:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 17:52:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 17:52:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 17:52:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 17:52:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 17:52:51 INFO   [wfs.json] - about to encode JSON
20 052 17:52:51 INFO   [wfs.json] - about to encode JSON
20 052 17:52:51 INFO   [wfs.json] - about to encode JSON
20 052 17:52:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 17:52:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 17:52:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 17:52:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 17:52:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 17:52:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 17:52:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 17:52:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 17:52:52 INFO   [wfs.json] - about to encode JSON
20 052 17:52:52 INFO   [wfs.json] - about to encode JSON
20 052 17:52:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 17:52:52 INFO   [wfs.json] - about to encode JSON
20 052 17:52:52 INFO   [wfs.json] - about to encode JSON
20 052 17:52:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 17:52:52 INFO   [wfs.json] - about to encode JSON
20 053 17:53:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 17:53:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 17:53:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 17:53:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 17:53:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 17:53:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 053 17:53:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 053 17:53:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 053 17:53:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 053 17:53:33 INFO   [wfs.json] - about to encode JSON
20 053 17:53:33 INFO   [wfs.json] - about to encode JSON
20 053 17:53:33 INFO   [wfs.json] - about to encode JSON
20 053 17:53:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 053 17:53:33 INFO   [wfs.json] - about to encode JSON
20 053 17:53:33 INFO   [wfs.json] - about to encode JSON
20 054 17:54:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 054 17:54:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 054 17:54:37 INFO   [wfs.json] - about to encode JSON
20 054 17:54:37 INFO   [wfs.json] - about to encode JSON
20 054 17:54:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 054 17:54:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 054 17:54:37 INFO   [wfs.json] - about to encode JSON
20 054 17:54:37 INFO   [wfs.json] - about to encode JSON
20 054 17:54:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 054 17:54:37 INFO   [wfs.json] - about to encode JSON
20 054 17:54:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 054 17:54:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:38 INFO   [wfs.json] - about to encode JSON
20 054 17:54:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 054 17:54:38 INFO   [wfs.json] - about to encode JSON
20 054 17:54:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 054 17:54:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 054 17:54:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 054 17:54:38 INFO   [wfs.json] - about to encode JSON
20 054 17:54:38 INFO   [wfs.json] - about to encode JSON
20 054 17:54:38 INFO   [wfs.json] - about to encode JSON
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 054 17:54:47 INFO   [wfs.json] - about to encode JSON
20 054 17:54:47 INFO   [wfs.json] - about to encode JSON
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 054 17:54:47 INFO   [wfs.json] - about to encode JSON
20 054 17:54:47 INFO   [wfs.json] - about to encode JSON
20 054 17:54:47 INFO   [wfs.json] - about to encode JSON
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 054 17:54:47 INFO   [wfs.json] - about to encode JSON
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 054 17:54:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 054 17:54:47 INFO   [wfs.json] - about to encode JSON
20 054 17:54:47 INFO   [wfs.json] - about to encode JSON
20 054 17:54:47 INFO   [wfs.json] - about to encode JSON
20 054 17:54:47 INFO   [wfs.json] - about to encode JSON
20 055 17:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 17:55:08 INFO   [wfs.json] - about to encode JSON
20 055 17:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 17:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 17:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:08 INFO   [wfs.json] - about to encode JSON
20 055 17:55:08 INFO   [wfs.json] - about to encode JSON
20 055 17:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 17:55:08 INFO   [wfs.json] - about to encode JSON
20 055 17:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 17:55:08 INFO   [wfs.json] - about to encode JSON
20 055 17:55:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 17:55:36 INFO   [wfs.json] - about to encode JSON
20 055 17:55:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 17:55:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 17:55:36 INFO   [wfs.json] - about to encode JSON
20 055 17:55:36 INFO   [wfs.json] - about to encode JSON
20 055 17:55:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 17:55:36 INFO   [wfs.json] - about to encode JSON
20 055 17:55:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 17:55:36 INFO   [wfs.json] - about to encode JSON
20 055 17:55:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 17:55:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 17:55:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 17:55:37 INFO   [wfs.json] - about to encode JSON
20 055 17:55:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 17:55:37 INFO   [wfs.json] - about to encode JSON
20 055 17:55:37 INFO   [wfs.json] - about to encode JSON
20 055 17:55:37 INFO   [wfs.json] - about to encode JSON
20 055 17:55:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 17:55:37 INFO   [wfs.json] - about to encode JSON
20 055 17:55:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 17:55:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:39 INFO   [wfs.json] - about to encode JSON
20 055 17:55:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 17:55:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 17:55:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 17:55:39 INFO   [wfs.json] - about to encode JSON
20 055 17:55:39 INFO   [wfs.json] - about to encode JSON
20 055 17:55:39 INFO   [wfs.json] - about to encode JSON
20 055 17:55:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 17:55:39 INFO   [wfs.json] - about to encode JSON
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 17:55:51 INFO   [wfs.json] - about to encode JSON
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:51 INFO   [wfs.json] - about to encode JSON
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 17:55:51 INFO   [wfs.json] - about to encode JSON
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 17:55:51 INFO   [wfs.json] - about to encode JSON
20 055 17:55:51 INFO   [wfs.json] - about to encode JSON
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 17:55:51 INFO   [wfs.json] - about to encode JSON
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 17:55:51 INFO   [wfs.json] - about to encode JSON
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 17:55:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 17:55:51 INFO   [wfs.json] - about to encode JSON
20 055 17:55:51 INFO   [wfs.json] - about to encode JSON
20 055 17:55:51 INFO   [wfs.json] - about to encode JSON
20 056 17:56:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 17:56:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 17:56:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 17:56:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 17:56:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 17:56:00 INFO   [wfs.json] - about to encode JSON
20 056 17:56:00 INFO   [wfs.json] - about to encode JSON
20 056 17:56:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 17:56:00 INFO   [wfs.json] - about to encode JSON
20 059 17:59:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 17:59:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 17:59:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 17:59:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 17:59:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 059 17:59:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 059 17:59:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 17:59:01 INFO   [wfs.json] - about to encode JSON
20 059 17:59:01 INFO   [wfs.json] - about to encode JSON
20 059 17:59:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 059 17:59:01 INFO   [wfs.json] - about to encode JSON
20 059 17:59:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 059 17:59:01 INFO   [wfs.json] - about to encode JSON
20 059 17:59:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 059 17:59:01 INFO   [wfs.json] - about to encode JSON
20 059 17:59:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 17:59:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 17:59:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 17:59:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 059 17:59:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 059 17:59:02 INFO   [wfs.json] - about to encode JSON
20 059 17:59:02 INFO   [wfs.json] - about to encode JSON
20 059 17:59:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 17:59:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 17:59:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 059 17:59:02 INFO   [wfs.json] - about to encode JSON
20 059 17:59:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 059 17:59:02 INFO   [wfs.json] - about to encode JSON
20 059 17:59:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 059 17:59:02 INFO   [wfs.json] - about to encode JSON
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 000 18:00:53 INFO   [wfs.json] - about to encode JSON
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 000 18:00:53 INFO   [wfs.json] - about to encode JSON
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 000 18:00:53 INFO   [wfs.json] - about to encode JSON
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 000 18:00:53 INFO   [wfs.json] - about to encode JSON
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 000 18:00:53 INFO   [wfs.json] - about to encode JSON
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 000 18:00:53 INFO   [wfs.json] - about to encode JSON
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 000 18:00:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 000 18:00:53 INFO   [wfs.json] - about to encode JSON
20 000 18:00:53 INFO   [wfs.json] - about to encode JSON
20 000 18:00:53 INFO   [wfs.json] - about to encode JSON
20 000 18:00:53 INFO   [wfs.json] - about to encode JSON
20 001 18:01:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 001 18:01:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 001 18:01:26 INFO   [wfs.json] - about to encode JSON
20 001 18:01:26 INFO   [wfs.json] - about to encode JSON
20 001 18:01:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 001 18:01:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 001 18:01:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 001 18:01:26 INFO   [wfs.json] - about to encode JSON
20 001 18:01:26 INFO   [wfs.json] - about to encode JSON
20 001 18:01:26 INFO   [wfs.json] - about to encode JSON
20 001 18:01:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 001 18:01:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 001 18:01:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 001 18:01:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 001 18:01:27 INFO   [wfs.json] - about to encode JSON
20 001 18:01:27 INFO   [wfs.json] - about to encode JSON
20 001 18:01:27 INFO   [wfs.json] - about to encode JSON
20 001 18:01:27 INFO   [wfs.json] - about to encode JSON
20 001 18:01:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 001 18:01:27 INFO   [wfs.json] - about to encode JSON
20 001 18:01:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 001 18:01:29 INFO   [wfs.json] - about to encode JSON
20 001 18:01:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 001 18:01:29 INFO   [wfs.json] - about to encode JSON
20 001 18:01:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 001 18:01:29 INFO   [wfs.json] - about to encode JSON
20 001 18:01:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 001 18:01:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 001 18:01:29 INFO   [wfs.json] - about to encode JSON
20 001 18:01:29 INFO   [wfs.json] - about to encode JSON
20 001 18:01:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 001 18:01:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 001 18:01:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 001 18:01:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:30 INFO   [wfs.json] - about to encode JSON
20 001 18:01:30 INFO   [wfs.json] - about to encode JSON
20 001 18:01:30 INFO   [wfs.json] - about to encode JSON
20 001 18:01:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 18:01:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 001 18:01:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 001 18:01:30 INFO   [wfs.json] - about to encode JSON
20 001 18:01:30 INFO   [wfs.json] - about to encode JSON
20 002 18:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 18:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 18:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 18:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 18:02:07 INFO   [wfs.json] - about to encode JSON
20 002 18:02:07 INFO   [wfs.json] - about to encode JSON
20 002 18:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 18:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 18:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 18:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 18:02:07 INFO   [wfs.json] - about to encode JSON
20 002 18:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 18:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 18:02:07 INFO   [wfs.json] - about to encode JSON
20 002 18:02:07 INFO   [wfs.json] - about to encode JSON
20 002 18:02:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 18:02:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 18:02:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 18:02:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 18:02:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 18:02:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 18:02:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 18:02:08 INFO   [wfs.json] - about to encode JSON
20 002 18:02:08 INFO   [wfs.json] - about to encode JSON
20 002 18:02:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 18:02:08 INFO   [wfs.json] - about to encode JSON
20 002 18:02:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 18:02:08 INFO   [wfs.json] - about to encode JSON
20 002 18:02:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 18:02:08 INFO   [wfs.json] - about to encode JSON
20 037 18:37:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 18:37:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 18:37:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 18:37:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 18:37:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 18:37:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 037 18:37:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 037 18:37:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 037 18:37:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 037 18:37:48 INFO   [wfs.json] - about to encode JSON
20 037 18:37:48 INFO   [wfs.json] - about to encode JSON
20 037 18:37:48 INFO   [wfs.json] - about to encode JSON
20 037 18:37:48 INFO   [wfs.json] - about to encode JSON
20 037 18:37:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 037 18:37:48 INFO   [wfs.json] - about to encode JSON
20 039 18:39:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 18:39:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213763.9566612592 : 216916.98407802268, 6079747.462899977 : 6082064.460319873] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 18:39:22 INFO   [wfs.json] - about to encode JSON
20 039 18:39:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 18:39:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213966.9925176417 : 217120.01993440517, 6079711.633042967 : 6082028.630462863] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 18:39:27 INFO   [wfs.json] - about to encode JSON
20 039 18:39:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 18:39:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213334.93688505047 : 216487.96430181395, 6080017.949978998 : 6082334.947398894] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 18:39:29 INFO   [wfs.json] - about to encode JSON
20 039 18:39:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 18:39:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213591.79127419277 : 216744.81869095625, 6079782.59350406 : 6082099.590923956] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 18:39:30 INFO   [wfs.json] - about to encode JSON
20 039 18:39:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 18:39:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213737.26863143893 : 216890.2960482024, 6079794.231692639 : 6082111.229112535] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 18:39:32 INFO   [wfs.json] - about to encode JSON
20 039 18:39:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 18:39:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213319.25363300435 : 216472.28104976783, 6079586.418521989 : 6081903.415941885] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 18:39:33 INFO   [wfs.json] - about to encode JSON
20 039 18:39:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 18:39:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 18:39:34 INFO   [wfs.json] - about to encode JSON
20 039 18:39:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 18:39:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213646.91246169756 : 216799.93987846104, 6079625.641386148 : 6081942.638806043] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 18:39:39 INFO   [wfs.json] - about to encode JSON
20 043 18:43:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 18:43:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 18:43:26 INFO   [wfs.json] - about to encode JSON
20 043 18:43:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 18:43:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 18:43:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 18:43:26 INFO   [wfs.json] - about to encode JSON
20 043 18:43:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 043 18:43:26 INFO   [wfs.json] - about to encode JSON
20 043 18:43:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 18:43:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 18:43:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 18:43:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 043 18:43:26 INFO   [wfs.json] - about to encode JSON
20 043 18:43:26 INFO   [wfs.json] - about to encode JSON
20 043 18:43:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 18:43:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 18:43:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 18:43:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 18:43:27 INFO   [wfs.json] - about to encode JSON
20 043 18:43:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 18:43:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 18:43:27 INFO   [wfs.json] - about to encode JSON
20 043 18:43:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 043 18:43:27 INFO   [wfs.json] - about to encode JSON
20 043 18:43:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 18:43:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 18:43:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 043 18:43:27 INFO   [wfs.json] - about to encode JSON
20 043 18:43:27 INFO   [wfs.json] - about to encode JSON
20 044 18:44:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 18:44:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 18:44:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 18:44:17 INFO   [wfs.json] - about to encode JSON
20 044 18:44:17 INFO   [wfs.json] - about to encode JSON
20 044 18:44:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 18:44:17 INFO   [wfs.json] - about to encode JSON
20 044 18:44:17 INFO   [wfs.json] - about to encode JSON
20 044 18:44:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 18:44:17 INFO   [wfs.json] - about to encode JSON
20 044 18:44:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 18:44:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 18:44:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 18:44:18 INFO   [wfs.json] - about to encode JSON
20 044 18:44:18 INFO   [wfs.json] - about to encode JSON
20 044 18:44:18 INFO   [wfs.json] - about to encode JSON
20 044 18:44:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 18:44:18 INFO   [wfs.json] - about to encode JSON
20 044 18:44:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 18:44:18 INFO   [wfs.json] - about to encode JSON
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 18:44:20 INFO   [wfs.json] - about to encode JSON
20 044 18:44:20 INFO   [wfs.json] - about to encode JSON
20 044 18:44:20 INFO   [wfs.json] - about to encode JSON
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 18:44:20 INFO   [wfs.json] - about to encode JSON
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 18:44:20 INFO   [wfs.json] - about to encode JSON
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 18:44:20 INFO   [wfs.json] - about to encode JSON
20 044 18:44:20 INFO   [wfs.json] - about to encode JSON
20 044 18:44:20 INFO   [wfs.json] - about to encode JSON
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 18:44:20 INFO   [wfs.json] - about to encode JSON
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 18:44:20 INFO   [wfs.json] - about to encode JSON
20 044 18:44:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 18:44:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 18:44:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 18:44:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 18:44:23 INFO   [wfs.json] - about to encode JSON
20 044 18:44:23 INFO   [wfs.json] - about to encode JSON
20 044 18:44:23 INFO   [wfs.json] - about to encode JSON
20 044 18:44:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:23 INFO   [wfs.json] - about to encode JSON
20 044 18:44:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 18:44:23 INFO   [wfs.json] - about to encode JSON
20 044 18:44:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213646.91246169753 : 216799.939878461, 6079317.504615874 : 6081634.50203577] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 18:44:30 INFO   [wfs.json] - about to encode JSON
20 044 18:44:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213646.91246169753 : 216799.939878461, 6079317.504615874 : 6081634.50203577] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 18:44:30 INFO   [wfs.json] - about to encode JSON
20 044 18:44:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213646.91246169753 : 216799.939878461, 6079317.504615874 : 6081634.50203577] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 18:44:30 INFO   [wfs.json] - about to encode JSON
20 044 18:44:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213646.91246169753 : 216799.939878461, 6079317.504615874 : 6081634.50203577] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 18:44:30 INFO   [wfs.json] - about to encode JSON
20 044 18:44:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 18:44:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213646.91246169753 : 216799.939878461, 6079317.504615874 : 6081634.50203577] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 18:44:30 INFO   [wfs.json] - about to encode JSON
20 045 18:45:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 18:45:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 18:45:20 INFO   [wfs.json] - about to encode JSON
20 045 18:45:20 INFO   [wfs.json] - about to encode JSON
20 045 18:45:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 18:45:20 INFO   [wfs.json] - about to encode JSON
20 045 18:45:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 18:45:20 INFO   [wfs.json] - about to encode JSON
20 045 18:45:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 18:45:20 INFO   [wfs.json] - about to encode JSON
20 045 18:45:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 18:45:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 18:45:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 18:45:21 INFO   [wfs.json] - about to encode JSON
20 045 18:45:21 INFO   [wfs.json] - about to encode JSON
20 045 18:45:21 INFO   [wfs.json] - about to encode JSON
20 045 18:45:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 18:45:21 INFO   [wfs.json] - about to encode JSON
20 045 18:45:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 18:45:21 INFO   [wfs.json] - about to encode JSON
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:29 INFO   [wfs.json] - about to encode JSON
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 18:45:29 INFO   [wfs.json] - about to encode JSON
20 045 18:45:29 INFO   [wfs.json] - about to encode JSON
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 18:45:29 INFO   [wfs.json] - about to encode JSON
20 045 18:45:29 INFO   [wfs.json] - about to encode JSON
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 18:45:29 INFO   [wfs.json] - about to encode JSON
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 18:45:29 INFO   [wfs.json] - about to encode JSON
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 18:45:29 INFO   [wfs.json] - about to encode JSON
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 18:45:29 INFO   [wfs.json] - about to encode JSON
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 18:45:29 INFO   [wfs.json] - about to encode JSON
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 18:45:31 INFO   [wfs.json] - about to encode JSON
20 045 18:45:31 INFO   [wfs.json] - about to encode JSON
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 18:45:31 INFO   [wfs.json] - about to encode JSON
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 18:45:31 INFO   [wfs.json] - about to encode JSON
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 18:45:31 INFO   [wfs.json] - about to encode JSON
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 18:45:31 INFO   [wfs.json] - about to encode JSON
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 18:45:31 INFO   [wfs.json] - about to encode JSON
20 045 18:45:31 INFO   [wfs.json] - about to encode JSON
20 045 18:45:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 18:45:31 INFO   [wfs.json] - about to encode JSON
20 045 18:45:31 INFO   [wfs.json] - about to encode JSON
20 045 18:45:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213732.90411851835 : 216885.93153528182, 6079687.7464716295 : 6082004.743891525] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 18:45:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213732.90411851835 : 216885.93153528182, 6079687.7464716295 : 6082004.743891525] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 18:45:44 INFO   [wfs.json] - about to encode JSON
20 045 18:45:44 INFO   [wfs.json] - about to encode JSON
20 045 18:45:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213732.90411851835 : 216885.93153528182, 6079687.7464716295 : 6082004.743891525] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 18:45:44 INFO   [wfs.json] - about to encode JSON
20 045 18:45:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213732.90411851835 : 216885.93153528182, 6079687.7464716295 : 6082004.743891525] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 18:45:44 INFO   [wfs.json] - about to encode JSON
20 045 18:45:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 18:45:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213732.90411851835 : 216885.93153528182, 6079687.7464716295 : 6082004.743891525] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 18:45:44 INFO   [wfs.json] - about to encode JSON
20 046 18:46:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 18:46:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 18:46:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 18:46:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 18:46:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 18:46:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 046 18:46:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 046 18:46:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 046 18:46:40 INFO   [wfs.json] - about to encode JSON
20 046 18:46:40 INFO   [wfs.json] - about to encode JSON
20 046 18:46:40 INFO   [wfs.json] - about to encode JSON
20 046 18:46:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 046 18:46:40 INFO   [wfs.json] - about to encode JSON
20 046 18:46:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 046 18:46:40 INFO   [wfs.json] - about to encode JSON
20 046 18:46:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 18:46:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 18:46:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 18:46:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 18:46:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 18:46:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 046 18:46:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 046 18:46:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 046 18:46:41 INFO   [wfs.json] - about to encode JSON
20 046 18:46:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 046 18:46:41 INFO   [wfs.json] - about to encode JSON
20 046 18:46:41 INFO   [wfs.json] - about to encode JSON
20 046 18:46:41 INFO   [wfs.json] - about to encode JSON
20 046 18:46:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 046 18:46:41 INFO   [wfs.json] - about to encode JSON
20 048 18:48:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 048 18:48:12 INFO   [wfs.json] - about to encode JSON
20 048 18:48:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 048 18:48:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 048 18:48:12 INFO   [wfs.json] - about to encode JSON
20 048 18:48:12 INFO   [wfs.json] - about to encode JSON
20 048 18:48:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 048 18:48:12 INFO   [wfs.json] - about to encode JSON
20 048 18:48:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 048 18:48:12 INFO   [wfs.json] - about to encode JSON
20 048 18:48:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 048 18:48:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 048 18:48:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 048 18:48:13 INFO   [wfs.json] - about to encode JSON
20 048 18:48:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 048 18:48:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 048 18:48:13 INFO   [wfs.json] - about to encode JSON
20 048 18:48:13 INFO   [wfs.json] - about to encode JSON
20 048 18:48:13 INFO   [wfs.json] - about to encode JSON
20 048 18:48:13 INFO   [wfs.json] - about to encode JSON
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 048 18:48:14 INFO   [wfs.json] - about to encode JSON
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 048 18:48:14 INFO   [wfs.json] - about to encode JSON
20 048 18:48:14 INFO   [wfs.json] - about to encode JSON
20 048 18:48:14 INFO   [wfs.json] - about to encode JSON
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 048 18:48:14 INFO   [wfs.json] - about to encode JSON
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 048 18:48:14 INFO   [wfs.json] - about to encode JSON
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 048 18:48:14 INFO   [wfs.json] - about to encode JSON
20 048 18:48:14 INFO   [wfs.json] - about to encode JSON
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 048 18:48:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 048 18:48:14 INFO   [wfs.json] - about to encode JSON
20 048 18:48:14 INFO   [wfs.json] - about to encode JSON
20 052 18:52:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 18:52:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 18:52:10 INFO   [wfs.json] - about to encode JSON
20 052 18:52:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 18:52:10 INFO   [wfs.json] - about to encode JSON
20 052 18:52:10 INFO   [wfs.json] - about to encode JSON
20 052 18:52:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 18:52:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 18:52:10 INFO   [wfs.json] - about to encode JSON
20 052 18:52:10 INFO   [wfs.json] - about to encode JSON
20 052 18:52:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 18:52:11 INFO   [wfs.json] - about to encode JSON
20 052 18:52:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 18:52:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:11 INFO   [wfs.json] - about to encode JSON
20 052 18:52:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 18:52:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 18:52:11 INFO   [wfs.json] - about to encode JSON
20 052 18:52:11 INFO   [wfs.json] - about to encode JSON
20 052 18:52:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 18:52:11 INFO   [wfs.json] - about to encode JSON
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 18:52:47 INFO   [wfs.json] - about to encode JSON
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 18:52:47 INFO   [wfs.json] - about to encode JSON
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 18:52:47 INFO   [wfs.json] - about to encode JSON
20 052 18:52:47 INFO   [wfs.json] - about to encode JSON
20 052 18:52:47 INFO   [wfs.json] - about to encode JSON
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 18:52:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 18:52:47 INFO   [wfs.json] - about to encode JSON
20 052 18:52:47 INFO   [wfs.json] - about to encode JSON
20 052 18:52:47 INFO   [wfs.json] - about to encode JSON
20 052 18:52:47 INFO   [wfs.json] - about to encode JSON
20 052 18:52:47 INFO   [wfs.json] - about to encode JSON
20 053 18:53:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 18:53:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 18:53:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 18:53:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 053 18:53:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 053 18:53:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 053 18:53:48 INFO   [wfs.json] - about to encode JSON
20 053 18:53:48 INFO   [wfs.json] - about to encode JSON
20 053 18:53:48 INFO   [wfs.json] - about to encode JSON
20 053 18:53:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 18:53:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 18:53:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 053 18:53:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 053 18:53:48 INFO   [wfs.json] - about to encode JSON
20 053 18:53:48 INFO   [wfs.json] - about to encode JSON
20 053 18:53:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 18:53:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 18:53:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 18:53:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 18:53:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 18:53:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 053 18:53:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 053 18:53:49 INFO   [wfs.json] - about to encode JSON
20 053 18:53:49 INFO   [wfs.json] - about to encode JSON
20 053 18:53:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 053 18:53:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 053 18:53:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 053 18:53:49 INFO   [wfs.json] - about to encode JSON
20 053 18:53:49 INFO   [wfs.json] - about to encode JSON
20 053 18:53:49 INFO   [wfs.json] - about to encode JSON
20 054 18:54:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 054 18:54:51 INFO   [wfs.json] - about to encode JSON
20 054 18:54:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 054 18:54:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 054 18:54:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 054 18:54:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 054 18:54:51 INFO   [wfs.json] - about to encode JSON
20 054 18:54:51 INFO   [wfs.json] - about to encode JSON
20 054 18:54:51 INFO   [wfs.json] - about to encode JSON
20 054 18:54:51 INFO   [wfs.json] - about to encode JSON
20 054 18:54:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 054 18:54:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 054 18:54:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 054 18:54:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 054 18:54:52 INFO   [wfs.json] - about to encode JSON
20 054 18:54:52 INFO   [wfs.json] - about to encode JSON
20 054 18:54:52 INFO   [wfs.json] - about to encode JSON
20 054 18:54:52 INFO   [wfs.json] - about to encode JSON
20 054 18:54:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 054 18:54:52 INFO   [wfs.json] - about to encode JSON
20 054 18:54:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 054 18:54:55 INFO   [wfs.json] - about to encode JSON
20 054 18:54:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 18:54:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 054 18:54:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 054 18:54:55 INFO   [wfs.json] - about to encode JSON
20 054 18:54:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 054 18:54:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 054 18:54:55 INFO   [wfs.json] - about to encode JSON
20 054 18:54:55 INFO   [wfs.json] - about to encode JSON
20 054 18:54:55 INFO   [wfs.json] - about to encode JSON
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 18:55:06 INFO   [wfs.json] - about to encode JSON
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 18:55:06 INFO   [wfs.json] - about to encode JSON
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 18:55:06 INFO   [wfs.json] - about to encode JSON
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 18:55:06 INFO   [wfs.json] - about to encode JSON
20 055 18:55:06 INFO   [wfs.json] - about to encode JSON
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 18:55:06 INFO   [wfs.json] - about to encode JSON
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 18:55:06 INFO   [wfs.json] - about to encode JSON
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 18:55:06 INFO   [wfs.json] - about to encode JSON
20 055 18:55:06 INFO   [wfs.json] - about to encode JSON
20 055 18:55:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 18:55:06 INFO   [wfs.json] - about to encode JSON
20 055 18:55:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 18:55:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 18:55:16 INFO   [wfs.json] - about to encode JSON
20 055 18:55:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 18:55:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999231.955360492 : 6001548.952780387] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 18:55:21 INFO   [wfs.json] - about to encode JSON
20 014 19:14:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 014 19:14:31 INFO   [wfs.json] - about to encode JSON
20 014 19:14:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 014 19:14:31 INFO   [wfs.json] - about to encode JSON
20 014 19:14:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 014 19:14:31 INFO   [wfs.json] - about to encode JSON
20 014 19:14:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 014 19:14:31 INFO   [wfs.json] - about to encode JSON
20 014 19:14:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 014 19:14:31 INFO   [wfs.json] - about to encode JSON
20 014 19:14:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 014 19:14:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 014 19:14:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 014 19:14:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 014 19:14:32 INFO   [wfs.json] - about to encode JSON
20 014 19:14:32 INFO   [wfs.json] - about to encode JSON
20 014 19:14:32 INFO   [wfs.json] - about to encode JSON
20 014 19:14:32 INFO   [wfs.json] - about to encode JSON
20 014 19:14:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 014 19:14:32 INFO   [wfs.json] - about to encode JSON
20 014 19:14:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 014 19:14:47 INFO   [wfs.json] - about to encode JSON
20 014 19:14:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 014 19:14:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 014 19:14:47 INFO   [wfs.json] - about to encode JSON
20 014 19:14:47 INFO   [wfs.json] - about to encode JSON
20 014 19:14:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 014 19:14:47 INFO   [wfs.json] - about to encode JSON
20 014 19:14:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 014 19:14:47 INFO   [wfs.json] - about to encode JSON
20 014 19:14:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 014 19:14:48 INFO   [wfs.json] - about to encode JSON
20 014 19:14:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 19:14:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 014 19:14:48 INFO   [wfs.json] - about to encode JSON
20 014 19:14:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 014 19:14:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 014 19:14:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 014 19:14:48 INFO   [wfs.json] - about to encode JSON
20 014 19:14:48 INFO   [wfs.json] - about to encode JSON
20 014 19:14:48 INFO   [wfs.json] - about to encode JSON
20 015 19:15:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213078.41206382654 : 216231.43948059002, 6079776.126785582 : 6082093.124205478] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 19:15:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213078.41206382654 : 216231.43948059002, 6079776.126785582 : 6082093.124205478] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 19:15:02 INFO   [wfs.json] - about to encode JSON
20 015 19:15:02 INFO   [wfs.json] - about to encode JSON
20 015 19:15:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213078.41206382654 : 216231.43948059002, 6079776.126785582 : 6082093.124205478] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 19:15:02 INFO   [wfs.json] - about to encode JSON
20 015 19:15:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213078.41206382654 : 216231.43948059002, 6079776.126785582 : 6082093.124205478] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 19:15:02 INFO   [wfs.json] - about to encode JSON
20 015 19:15:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213078.41206382654 : 216231.43948059002, 6079776.126785582 : 6082093.124205478] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 19:15:02 INFO   [wfs.json] - about to encode JSON
20 015 19:15:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213338.9323060686 : 216491.95972283208, 6079830.97315237 : 6082147.970572266] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 19:15:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213338.9323060686 : 216491.95972283208, 6079830.97315237 : 6082147.970572266] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 19:15:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213338.9323060686 : 216491.95972283208, 6079830.97315237 : 6082147.970572266] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 19:15:04 INFO   [wfs.json] - about to encode JSON
20 015 19:15:04 INFO   [wfs.json] - about to encode JSON
20 015 19:15:04 INFO   [wfs.json] - about to encode JSON
20 015 19:15:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213338.9323060686 : 216491.95972283208, 6079830.97315237 : 6082147.970572266] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 19:15:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213338.9323060686 : 216491.95972283208, 6079830.97315237 : 6082147.970572266] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 19:15:04 INFO   [wfs.json] - about to encode JSON
20 015 19:15:04 INFO   [wfs.json] - about to encode JSON
20 015 19:15:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213544.35681958502 : 216697.3842363485, 6079845.305095173 : 6082162.302515069] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 19:15:16 INFO   [wfs.json] - about to encode JSON
20 015 19:15:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213544.35681958502 : 216697.3842363485, 6079845.305095173 : 6082162.302515069] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 19:15:16 INFO   [wfs.json] - about to encode JSON
20 015 19:15:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213544.35681958502 : 216697.3842363485, 6079845.305095173 : 6082162.302515069] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 19:15:16 INFO   [wfs.json] - about to encode JSON
20 015 19:15:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213544.35681958502 : 216697.3842363485, 6079845.305095173 : 6082162.302515069] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 19:15:16 INFO   [wfs.json] - about to encode JSON
20 015 19:15:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213544.35681958502 : 216697.3842363485, 6079845.305095173 : 6082162.302515069] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 19:15:16 INFO   [wfs.json] - about to encode JSON
20 015 19:15:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 19:15:26 INFO   [wfs.json] - about to encode JSON
20 015 19:15:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 19:15:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 19:15:26 INFO   [wfs.json] - about to encode JSON
20 015 19:15:26 INFO   [wfs.json] - about to encode JSON
20 015 19:15:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 19:15:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 19:15:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 19:15:26 INFO   [wfs.json] - about to encode JSON
20 015 19:15:26 INFO   [wfs.json] - about to encode JSON
20 017 19:17:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 19:17:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 19:17:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 19:17:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 19:17:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 19:17:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 19:17:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 19:17:35 INFO   [wfs.json] - about to encode JSON
20 017 19:17:35 INFO   [wfs.json] - about to encode JSON
20 017 19:17:35 INFO   [wfs.json] - about to encode JSON
20 017 19:17:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 19:17:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 19:17:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 19:17:35 INFO   [wfs.json] - about to encode JSON
20 017 19:17:35 INFO   [wfs.json] - about to encode JSON
20 017 19:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 19:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 19:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 19:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 19:17:59 INFO   [wfs.json] - about to encode JSON
20 017 19:17:59 INFO   [wfs.json] - about to encode JSON
20 017 19:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 19:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 19:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 19:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 19:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 19:17:59 INFO   [wfs.json] - about to encode JSON
20 017 19:17:59 INFO   [wfs.json] - about to encode JSON
20 017 19:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 19:17:59 INFO   [wfs.json] - about to encode JSON
20 018 19:18:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 19:18:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 19:18:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 19:18:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 19:18:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 19:18:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 19:18:00 INFO   [wfs.json] - about to encode JSON
20 018 19:18:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 19:18:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 19:18:00 INFO   [wfs.json] - about to encode JSON
20 018 19:18:00 INFO   [wfs.json] - about to encode JSON
20 018 19:18:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 19:18:00 INFO   [wfs.json] - about to encode JSON
20 018 19:18:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 19:18:00 INFO   [wfs.json] - about to encode JSON
20 018 19:18:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 19:18:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 19:18:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 19:18:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 19:18:01 INFO   [wfs.json] - about to encode JSON
20 018 19:18:01 INFO   [wfs.json] - about to encode JSON
20 018 19:18:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 19:18:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 19:18:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 19:18:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 19:18:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 19:18:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 19:18:01 INFO   [wfs.json] - about to encode JSON
20 018 19:18:01 INFO   [wfs.json] - about to encode JSON
20 018 19:18:01 INFO   [wfs.json] - about to encode JSON
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 019 19:19:18 INFO   [wfs.json] - about to encode JSON
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 019 19:19:18 INFO   [wfs.json] - about to encode JSON
20 019 19:19:18 INFO   [wfs.json] - about to encode JSON
20 019 19:19:18 INFO   [wfs.json] - about to encode JSON
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 019 19:19:18 INFO   [wfs.json] - about to encode JSON
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 019 19:19:18 INFO   [wfs.json] - about to encode JSON
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 019 19:19:18 INFO   [wfs.json] - about to encode JSON
20 019 19:19:18 INFO   [wfs.json] - about to encode JSON
20 019 19:19:18 INFO   [wfs.json] - about to encode JSON
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 019 19:19:18 INFO   [wfs.json] - about to encode JSON
20 019 19:19:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213795.00920400006 : 216948.03662076354, 6079745.074242842 : 6082062.071662738] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 019 19:19:22 INFO   [wfs.json] - about to encode JSON
20 019 19:19:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213795.00920400006 : 216948.03662076354, 6079745.074242842 : 6082062.071662738] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 019 19:19:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:22 INFO   [wfs.json] - about to encode JSON
20 019 19:19:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213795.00920400006 : 216948.03662076354, 6079745.074242842 : 6082062.071662738] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 019 19:19:22 INFO   [wfs.json] - about to encode JSON
20 019 19:19:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 19:19:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213795.00920400006 : 216948.03662076354, 6079745.074242842 : 6082062.071662738] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 019 19:19:22 INFO   [wfs.json] - about to encode JSON
20 019 19:19:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213795.00920400006 : 216948.03662076354, 6079745.074242842 : 6082062.071662738] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 019 19:19:22 INFO   [wfs.json] - about to encode JSON
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 19:20:01 INFO   [wfs.json] - about to encode JSON
20 020 19:20:01 INFO   [wfs.json] - about to encode JSON
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 19:20:01 INFO   [wfs.json] - about to encode JSON
20 020 19:20:01 INFO   [wfs.json] - about to encode JSON
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 19:20:01 INFO   [wfs.json] - about to encode JSON
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 19:20:01 INFO   [wfs.json] - about to encode JSON
20 020 19:20:01 INFO   [wfs.json] - about to encode JSON
20 020 19:20:01 INFO   [wfs.json] - about to encode JSON
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 19:20:01 INFO   [wfs.json] - about to encode JSON
20 020 19:20:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 19:20:01 INFO   [wfs.json] - about to encode JSON
20 020 19:20:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 19:20:32 INFO   [wfs.json] - about to encode JSON
20 020 19:20:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 19:20:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 19:20:32 INFO   [wfs.json] - about to encode JSON
20 020 19:20:32 INFO   [wfs.json] - about to encode JSON
20 020 19:20:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 19:20:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 19:20:32 INFO   [wfs.json] - about to encode JSON
20 020 19:20:32 INFO   [wfs.json] - about to encode JSON
20 020 19:20:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 19:20:33 INFO   [wfs.json] - about to encode JSON
20 020 19:20:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 19:20:33 INFO   [wfs.json] - about to encode JSON
20 020 19:20:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 19:20:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 19:20:33 INFO   [wfs.json] - about to encode JSON
20 020 19:20:33 INFO   [wfs.json] - about to encode JSON
20 020 19:20:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 19:20:33 INFO   [wfs.json] - about to encode JSON
20 020 19:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 19:20:35 INFO   [wfs.json] - about to encode JSON
20 020 19:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 19:20:35 INFO   [wfs.json] - about to encode JSON
20 020 19:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 19:20:35 INFO   [wfs.json] - about to encode JSON
20 020 19:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 19:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 19:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 19:20:35 INFO   [wfs.json] - about to encode JSON
20 020 19:20:35 INFO   [wfs.json] - about to encode JSON
20 021 19:21:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 19:21:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 19:21:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 19:21:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 19:21:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 19:21:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 19:21:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 19:21:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 19:21:47 INFO   [wfs.json] - about to encode JSON
20 021 19:21:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 19:21:47 INFO   [wfs.json] - about to encode JSON
20 021 19:21:47 INFO   [wfs.json] - about to encode JSON
20 021 19:21:47 INFO   [wfs.json] - about to encode JSON
20 021 19:21:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 19:21:47 INFO   [wfs.json] - about to encode JSON
20 021 19:21:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 19:21:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 19:21:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 19:21:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 19:21:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 19:21:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 19:21:48 INFO   [wfs.json] - about to encode JSON
20 021 19:21:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 19:21:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 19:21:48 INFO   [wfs.json] - about to encode JSON
20 021 19:21:48 INFO   [wfs.json] - about to encode JSON
20 021 19:21:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 19:21:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 19:21:48 INFO   [wfs.json] - about to encode JSON
20 021 19:21:48 INFO   [wfs.json] - about to encode JSON
20 022 19:22:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 19:22:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 19:22:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 19:22:06 INFO   [wfs.json] - about to encode JSON
20 022 19:22:06 INFO   [wfs.json] - about to encode JSON
20 022 19:22:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 19:22:06 INFO   [wfs.json] - about to encode JSON
20 022 19:22:06 INFO   [wfs.json] - about to encode JSON
20 022 19:22:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 19:22:06 INFO   [wfs.json] - about to encode JSON
20 022 19:22:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 19:22:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:07 INFO   [wfs.json] - about to encode JSON
20 022 19:22:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 19:22:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 19:22:07 INFO   [wfs.json] - about to encode JSON
20 022 19:22:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:07 INFO   [wfs.json] - about to encode JSON
20 022 19:22:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 19:22:07 INFO   [wfs.json] - about to encode JSON
20 022 19:22:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 19:22:07 INFO   [wfs.json] - about to encode JSON
20 022 19:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 19:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 19:22:14 INFO   [wfs.json] - about to encode JSON
20 022 19:22:14 INFO   [wfs.json] - about to encode JSON
20 022 19:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 19:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 19:22:14 INFO   [wfs.json] - about to encode JSON
20 022 19:22:14 INFO   [wfs.json] - about to encode JSON
20 022 19:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 19:22:14 INFO   [wfs.json] - about to encode JSON
20 022 19:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 19:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 19:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 19:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 19:22:15 INFO   [wfs.json] - about to encode JSON
20 022 19:22:15 INFO   [wfs.json] - about to encode JSON
20 022 19:22:15 INFO   [wfs.json] - about to encode JSON
20 022 19:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 19:22:15 INFO   [wfs.json] - about to encode JSON
20 022 19:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 19:22:15 INFO   [wfs.json] - about to encode JSON
20 023 19:23:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 19:23:21 INFO   [wfs.json] - about to encode JSON
20 023 19:23:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 19:23:21 INFO   [wfs.json] - about to encode JSON
20 023 19:23:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 19:23:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 19:23:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 19:23:21 INFO   [wfs.json] - about to encode JSON
20 023 19:23:21 INFO   [wfs.json] - about to encode JSON
20 023 19:23:21 INFO   [wfs.json] - about to encode JSON
20 023 19:23:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 19:23:22 INFO   [wfs.json] - about to encode JSON
20 023 19:23:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 19:23:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 19:23:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 19:23:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 19:23:22 INFO   [wfs.json] - about to encode JSON
20 023 19:23:22 INFO   [wfs.json] - about to encode JSON
20 023 19:23:22 INFO   [wfs.json] - about to encode JSON
20 023 19:23:22 INFO   [wfs.json] - about to encode JSON
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 19:23:47 INFO   [wfs.json] - about to encode JSON
20 023 19:23:47 INFO   [wfs.json] - about to encode JSON
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 19:23:47 INFO   [wfs.json] - about to encode JSON
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:47 INFO   [wfs.json] - about to encode JSON
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 19:23:47 INFO   [wfs.json] - about to encode JSON
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 19:23:47 INFO   [wfs.json] - about to encode JSON
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 19:23:47 INFO   [wfs.json] - about to encode JSON
20 023 19:23:47 INFO   [wfs.json] - about to encode JSON
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 19:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 19:23:47 INFO   [wfs.json] - about to encode JSON
20 023 19:23:47 INFO   [wfs.json] - about to encode JSON
20 023 19:23:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 19:23:54 INFO   [wfs.json] - about to encode JSON
20 023 19:23:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 19:23:54 INFO   [wfs.json] - about to encode JSON
20 023 19:23:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 19:23:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 19:23:54 INFO   [wfs.json] - about to encode JSON
20 023 19:23:54 INFO   [wfs.json] - about to encode JSON
20 023 19:23:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 19:23:54 INFO   [wfs.json] - about to encode JSON
20 023 19:23:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 19:23:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 19:23:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 19:23:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 19:23:55 INFO   [wfs.json] - about to encode JSON
20 023 19:23:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 19:23:55 INFO   [wfs.json] - about to encode JSON
20 023 19:23:55 INFO   [wfs.json] - about to encode JSON
20 023 19:23:55 INFO   [wfs.json] - about to encode JSON
20 023 19:23:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 19:23:55 INFO   [wfs.json] - about to encode JSON
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 19:24:22 INFO   [wfs.json] - about to encode JSON
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 024 19:24:22 INFO   [wfs.json] - about to encode JSON
20 024 19:24:22 INFO   [wfs.json] - about to encode JSON
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 024 19:24:22 INFO   [wfs.json] - about to encode JSON
20 024 19:24:22 INFO   [wfs.json] - about to encode JSON
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 19:24:22 INFO   [wfs.json] - about to encode JSON
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 024 19:24:22 INFO   [wfs.json] - about to encode JSON
20 024 19:24:22 INFO   [wfs.json] - about to encode JSON
20 024 19:24:22 INFO   [wfs.json] - about to encode JSON
20 024 19:24:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 024 19:24:22 INFO   [wfs.json] - about to encode JSON
20 024 19:24:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 19:24:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 19:24:50 INFO   [wfs.json] - about to encode JSON
20 025 19:25:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 19:25:06 INFO   [wfs.json] - about to encode JSON
20 025 19:25:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 19:25:06 INFO   [wfs.json] - about to encode JSON
20 025 19:25:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 19:25:06 INFO   [wfs.json] - about to encode JSON
20 025 19:25:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 19:25:06 INFO   [wfs.json] - about to encode JSON
20 025 19:25:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 19:25:06 INFO   [wfs.json] - about to encode JSON
20 025 19:25:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 19:25:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 19:25:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:07 INFO   [wfs.json] - about to encode JSON
20 025 19:25:07 INFO   [wfs.json] - about to encode JSON
20 025 19:25:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 19:25:07 INFO   [wfs.json] - about to encode JSON
20 025 19:25:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 19:25:07 INFO   [wfs.json] - about to encode JSON
20 025 19:25:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 19:25:07 INFO   [wfs.json] - about to encode JSON
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:12 INFO   [wfs.json] - about to encode JSON
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 19:25:12 INFO   [wfs.json] - about to encode JSON
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 19:25:12 INFO   [wfs.json] - about to encode JSON
20 025 19:25:12 INFO   [wfs.json] - about to encode JSON
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 19:25:12 INFO   [wfs.json] - about to encode JSON
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:12 INFO   [wfs.json] - about to encode JSON
20 025 19:25:12 INFO   [wfs.json] - about to encode JSON
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 19:25:12 INFO   [wfs.json] - about to encode JSON
20 025 19:25:12 INFO   [wfs.json] - about to encode JSON
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 19:25:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 19:25:12 INFO   [wfs.json] - about to encode JSON
20 026 19:26:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 026 19:26:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 026 19:26:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 026 19:26:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 026 19:26:15 INFO   [wfs.json] - about to encode JSON
20 026 19:26:15 INFO   [wfs.json] - about to encode JSON
20 026 19:26:15 INFO   [wfs.json] - about to encode JSON
20 026 19:26:15 INFO   [wfs.json] - about to encode JSON
20 026 19:26:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 026 19:26:15 INFO   [wfs.json] - about to encode JSON
20 026 19:26:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 026 19:26:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 026 19:26:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 026 19:26:16 INFO   [wfs.json] - about to encode JSON
20 026 19:26:16 INFO   [wfs.json] - about to encode JSON
20 026 19:26:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 026 19:26:16 INFO   [wfs.json] - about to encode JSON
20 026 19:26:16 INFO   [wfs.json] - about to encode JSON
20 026 19:26:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 026 19:26:16 INFO   [wfs.json] - about to encode JSON
20 026 19:26:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 026 19:26:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 026 19:26:22 INFO   [wfs.json] - about to encode JSON
20 026 19:26:22 INFO   [wfs.json] - about to encode JSON
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 026 19:26:23 INFO   [wfs.json] - about to encode JSON
20 026 19:26:23 INFO   [wfs.json] - about to encode JSON
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 026 19:26:23 INFO   [wfs.json] - about to encode JSON
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 026 19:26:23 INFO   [wfs.json] - about to encode JSON
20 026 19:26:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 026 19:26:23 INFO   [wfs.json] - about to encode JSON
20 026 19:26:23 INFO   [wfs.json] - about to encode JSON
20 026 19:26:23 INFO   [wfs.json] - about to encode JSON
20 026 19:26:23 INFO   [wfs.json] - about to encode JSON
20 027 19:27:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 19:27:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 027 19:27:05 INFO   [wfs.json] - about to encode JSON
20 027 19:27:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 19:27:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 027 19:27:05 INFO   [wfs.json] - about to encode JSON
20 027 19:27:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 19:27:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 19:27:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 027 19:27:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 027 19:27:05 INFO   [wfs.json] - about to encode JSON
20 027 19:27:05 INFO   [wfs.json] - about to encode JSON
20 027 19:27:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 19:27:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 027 19:27:05 INFO   [wfs.json] - about to encode JSON
20 027 19:27:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 19:27:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 19:27:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 19:27:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 19:27:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 19:27:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 027 19:27:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 027 19:27:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 027 19:27:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 027 19:27:06 INFO   [wfs.json] - about to encode JSON
20 027 19:27:06 INFO   [wfs.json] - about to encode JSON
20 027 19:27:06 INFO   [wfs.json] - about to encode JSON
20 027 19:27:06 INFO   [wfs.json] - about to encode JSON
20 027 19:27:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 027 19:27:06 INFO   [wfs.json] - about to encode JSON
20 029 19:29:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 19:29:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 19:29:21 INFO   [wfs.json] - about to encode JSON
20 029 19:29:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 19:29:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 029 19:29:21 INFO   [wfs.json] - about to encode JSON
20 029 19:29:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 19:29:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 029 19:29:21 INFO   [wfs.json] - about to encode JSON
20 029 19:29:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 19:29:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 19:29:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 029 19:29:21 INFO   [wfs.json] - about to encode JSON
20 029 19:29:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 029 19:29:21 INFO   [wfs.json] - about to encode JSON
20 029 19:29:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 19:29:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 19:29:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 19:29:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 19:29:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 19:29:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 029 19:29:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 19:29:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 029 19:29:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 029 19:29:22 INFO   [wfs.json] - about to encode JSON
20 029 19:29:22 INFO   [wfs.json] - about to encode JSON
20 029 19:29:22 INFO   [wfs.json] - about to encode JSON
20 029 19:29:22 INFO   [wfs.json] - about to encode JSON
20 029 19:29:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 029 19:29:22 INFO   [wfs.json] - about to encode JSON
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 033 19:33:06 INFO   [wfs.json] - about to encode JSON
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 033 19:33:06 INFO   [wfs.json] - about to encode JSON
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 033 19:33:06 INFO   [wfs.json] - about to encode JSON
20 033 19:33:06 INFO   [wfs.json] - about to encode JSON
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 033 19:33:06 INFO   [wfs.json] - about to encode JSON
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 19:33:06 INFO   [wfs.json] - about to encode JSON
20 033 19:33:06 INFO   [wfs.json] - about to encode JSON
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 033 19:33:06 INFO   [wfs.json] - about to encode JSON
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 033 19:33:06 INFO   [wfs.json] - about to encode JSON
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 19:33:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 033 19:33:06 INFO   [wfs.json] - about to encode JSON
20 035 19:35:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 19:35:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 19:35:44 INFO   [wfs.json] - about to encode JSON
20 035 19:35:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 19:35:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 19:35:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 19:35:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 19:35:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 035 19:35:44 INFO   [wfs.json] - about to encode JSON
20 035 19:35:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 035 19:35:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 035 19:35:44 INFO   [wfs.json] - about to encode JSON
20 035 19:35:44 INFO   [wfs.json] - about to encode JSON
20 035 19:35:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 035 19:35:44 INFO   [wfs.json] - about to encode JSON
20 035 19:35:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 19:35:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 19:35:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 19:35:45 INFO   [wfs.json] - about to encode JSON
20 035 19:35:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 19:35:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 035 19:35:45 INFO   [wfs.json] - about to encode JSON
20 035 19:35:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 19:35:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 19:35:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 035 19:35:45 INFO   [wfs.json] - about to encode JSON
20 035 19:35:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 035 19:35:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 035 19:35:45 INFO   [wfs.json] - about to encode JSON
20 035 19:35:45 INFO   [wfs.json] - about to encode JSON
20 038 19:38:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 19:38:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 19:38:01 INFO   [wfs.json] - about to encode JSON
20 038 19:38:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 19:38:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 19:38:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 19:38:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 19:38:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 19:38:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 19:38:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 19:38:01 INFO   [wfs.json] - about to encode JSON
20 038 19:38:01 INFO   [wfs.json] - about to encode JSON
20 038 19:38:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 19:38:01 INFO   [wfs.json] - about to encode JSON
20 038 19:38:01 INFO   [wfs.json] - about to encode JSON
20 038 19:38:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 19:38:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 19:38:02 INFO   [wfs.json] - about to encode JSON
20 038 19:38:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 19:38:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 19:38:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 19:38:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 19:38:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 19:38:02 INFO   [wfs.json] - about to encode JSON
20 038 19:38:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 19:38:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 19:38:02 INFO   [wfs.json] - about to encode JSON
20 038 19:38:02 INFO   [wfs.json] - about to encode JSON
20 038 19:38:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 19:38:02 INFO   [wfs.json] - about to encode JSON
20 039 19:39:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 19:39:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 19:39:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 19:39:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 039 19:39:37 INFO   [wfs.json] - about to encode JSON
20 039 19:39:37 INFO   [wfs.json] - about to encode JSON
20 039 19:39:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 19:39:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 19:39:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 039 19:39:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 039 19:39:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 19:39:37 INFO   [wfs.json] - about to encode JSON
20 039 19:39:37 INFO   [wfs.json] - about to encode JSON
20 039 19:39:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 039 19:39:37 INFO   [wfs.json] - about to encode JSON
20 039 19:39:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 19:39:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 19:39:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 19:39:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 19:39:38 INFO   [wfs.json] - about to encode JSON
20 039 19:39:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 039 19:39:38 INFO   [wfs.json] - about to encode JSON
20 039 19:39:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 039 19:39:38 INFO   [wfs.json] - about to encode JSON
20 039 19:39:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 19:39:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 19:39:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 039 19:39:38 INFO   [wfs.json] - about to encode JSON
20 039 19:39:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 039 19:39:38 INFO   [wfs.json] - about to encode JSON
20 040 19:40:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 19:40:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 19:40:56 INFO   [wfs.json] - about to encode JSON
20 040 19:40:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 19:40:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 19:40:57 INFO   [wfs.json] - about to encode JSON
20 040 19:40:57 INFO   [wfs.json] - about to encode JSON
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 19:40:57 INFO   [wfs.json] - about to encode JSON
20 040 19:40:57 INFO   [wfs.json] - about to encode JSON
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 19:40:57 INFO   [wfs.json] - about to encode JSON
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 19:40:57 INFO   [wfs.json] - about to encode JSON
20 040 19:40:57 INFO   [wfs.json] - about to encode JSON
20 040 19:40:57 INFO   [wfs.json] - about to encode JSON
20 040 19:40:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 19:40:57 INFO   [wfs.json] - about to encode JSON
20 041 19:41:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 19:41:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 19:41:08 INFO   [wfs.json] - about to encode JSON
20 041 19:41:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 19:41:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 19:41:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 19:41:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 19:41:08 INFO   [wfs.json] - about to encode JSON
20 041 19:41:08 INFO   [wfs.json] - about to encode JSON
20 041 19:41:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 19:41:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 19:41:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 19:41:08 INFO   [wfs.json] - about to encode JSON
20 041 19:41:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 19:41:08 INFO   [wfs.json] - about to encode JSON
20 041 19:41:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 19:41:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 19:41:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 19:41:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 19:41:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 19:41:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 19:41:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 19:41:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 19:41:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 19:41:09 INFO   [wfs.json] - about to encode JSON
20 041 19:41:09 INFO   [wfs.json] - about to encode JSON
20 041 19:41:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 19:41:09 INFO   [wfs.json] - about to encode JSON
20 041 19:41:09 INFO   [wfs.json] - about to encode JSON
20 041 19:41:09 INFO   [wfs.json] - about to encode JSON
20 043 19:43:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 19:43:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 19:43:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 19:43:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 19:43:59 INFO   [wfs.json] - about to encode JSON
20 043 19:43:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 19:43:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 19:43:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 043 19:43:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 19:43:59 INFO   [wfs.json] - about to encode JSON
20 043 19:43:59 INFO   [wfs.json] - about to encode JSON
20 043 19:43:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 043 19:43:59 INFO   [wfs.json] - about to encode JSON
20 043 19:43:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 19:43:59 INFO   [wfs.json] - about to encode JSON
20 044 19:44:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 19:44:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 19:44:00 INFO   [wfs.json] - about to encode JSON
20 044 19:44:00 INFO   [wfs.json] - about to encode JSON
20 044 19:44:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 19:44:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 19:44:00 INFO   [wfs.json] - about to encode JSON
20 044 19:44:00 INFO   [wfs.json] - about to encode JSON
20 044 19:44:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 19:44:00 INFO   [wfs.json] - about to encode JSON
20 044 19:44:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 19:44:58 INFO   [wfs.json] - about to encode JSON
20 044 19:44:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 19:44:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 19:44:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 19:44:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 19:44:58 INFO   [wfs.json] - about to encode JSON
20 044 19:44:58 INFO   [wfs.json] - about to encode JSON
20 044 19:44:58 INFO   [wfs.json] - about to encode JSON
20 044 19:44:58 INFO   [wfs.json] - about to encode JSON
20 044 19:44:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 19:44:59 INFO   [wfs.json] - about to encode JSON
20 044 19:44:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 19:44:59 INFO   [wfs.json] - about to encode JSON
20 044 19:44:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 19:44:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 19:44:59 INFO   [wfs.json] - about to encode JSON
20 044 19:44:59 INFO   [wfs.json] - about to encode JSON
20 044 19:44:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 19:44:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 19:44:59 INFO   [wfs.json] - about to encode JSON
20 045 19:45:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 19:45:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 19:45:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 19:45:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 19:45:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 19:45:37 INFO   [wfs.json] - about to encode JSON
20 045 19:45:37 INFO   [wfs.json] - about to encode JSON
20 045 19:45:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 19:45:37 INFO   [wfs.json] - about to encode JSON
20 045 19:45:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 19:45:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 19:45:37 INFO   [wfs.json] - about to encode JSON
20 045 19:45:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 19:45:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 19:45:37 INFO   [wfs.json] - about to encode JSON
20 045 19:45:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 19:45:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 19:45:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 19:45:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 19:45:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 19:45:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 19:45:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 19:45:38 INFO   [wfs.json] - about to encode JSON
20 045 19:45:38 INFO   [wfs.json] - about to encode JSON
20 045 19:45:38 INFO   [wfs.json] - about to encode JSON
20 045 19:45:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 19:45:38 INFO   [wfs.json] - about to encode JSON
20 045 19:45:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 19:45:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 19:45:38 INFO   [wfs.json] - about to encode JSON
20 045 19:45:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 19:45:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 19:45:43 INFO   [wfs.json] - about to encode JSON
20 045 19:45:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 19:45:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 19:45:43 INFO   [wfs.json] - about to encode JSON
20 046 19:46:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 19:46:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 19:46:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 19:46:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 19:46:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 046 19:46:48 INFO   [wfs.json] - about to encode JSON
20 046 19:46:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 046 19:46:48 INFO   [wfs.json] - about to encode JSON
20 046 19:46:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 046 19:46:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 046 19:46:48 INFO   [wfs.json] - about to encode JSON
20 046 19:46:48 INFO   [wfs.json] - about to encode JSON
20 046 19:46:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 19:46:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 046 19:46:48 INFO   [wfs.json] - about to encode JSON
20 046 19:46:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 19:46:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 19:46:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 19:46:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 19:46:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 19:46:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 046 19:46:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 046 19:46:49 INFO   [wfs.json] - about to encode JSON
20 046 19:46:49 INFO   [wfs.json] - about to encode JSON
20 046 19:46:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 046 19:46:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 046 19:46:49 INFO   [wfs.json] - about to encode JSON
20 046 19:46:49 INFO   [wfs.json] - about to encode JSON
20 046 19:46:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 046 19:46:49 INFO   [wfs.json] - about to encode JSON
20 047 19:47:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 19:47:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 047 19:47:19 INFO   [wfs.json] - about to encode JSON
20 047 19:47:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 19:47:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 19:47:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 19:47:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 19:47:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 047 19:47:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 047 19:47:19 INFO   [wfs.json] - about to encode JSON
20 047 19:47:19 INFO   [wfs.json] - about to encode JSON
20 047 19:47:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 047 19:47:19 INFO   [wfs.json] - about to encode JSON
20 047 19:47:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 047 19:47:19 INFO   [wfs.json] - about to encode JSON
20 047 19:47:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 19:47:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 19:47:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 19:47:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 19:47:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 047 19:47:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 047 19:47:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 047 19:47:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 047 19:47:20 INFO   [wfs.json] - about to encode JSON
20 047 19:47:20 INFO   [wfs.json] - about to encode JSON
20 047 19:47:20 INFO   [wfs.json] - about to encode JSON
20 047 19:47:20 INFO   [wfs.json] - about to encode JSON
20 047 19:47:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 19:47:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 047 19:47:20 INFO   [wfs.json] - about to encode JSON
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 049 19:49:10 INFO   [wfs.json] - about to encode JSON
20 049 19:49:10 INFO   [wfs.json] - about to encode JSON
20 049 19:49:10 INFO   [wfs.json] - about to encode JSON
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 19:49:10 INFO   [wfs.json] - about to encode JSON
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 049 19:49:10 INFO   [wfs.json] - about to encode JSON
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 049 19:49:10 INFO   [wfs.json] - about to encode JSON
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 049 19:49:10 INFO   [wfs.json] - about to encode JSON
20 049 19:49:10 INFO   [wfs.json] - about to encode JSON
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 049 19:49:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 049 19:49:10 INFO   [wfs.json] - about to encode JSON
20 049 19:49:10 INFO   [wfs.json] - about to encode JSON
20 049 19:49:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 19:49:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 049 19:49:28 INFO   [wfs.json] - about to encode JSON
20 049 19:49:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 19:49:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 049 19:49:28 INFO   [wfs.json] - about to encode JSON
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 19:51:00 INFO   [wfs.json] - about to encode JSON
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 19:51:00 INFO   [wfs.json] - about to encode JSON
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:00 INFO   [wfs.json] - about to encode JSON
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 19:51:00 INFO   [wfs.json] - about to encode JSON
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 19:51:00 INFO   [wfs.json] - about to encode JSON
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 19:51:00 INFO   [wfs.json] - about to encode JSON
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 19:51:00 INFO   [wfs.json] - about to encode JSON
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 19:51:00 INFO   [wfs.json] - about to encode JSON
20 051 19:51:00 INFO   [wfs.json] - about to encode JSON
20 051 19:51:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 19:51:00 INFO   [wfs.json] - about to encode JSON
20 051 19:51:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 19:51:14 INFO   [wfs.json] - about to encode JSON
20 051 19:51:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 19:51:14 INFO   [wfs.json] - about to encode JSON
20 051 19:51:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 19:51:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 19:51:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 19:51:14 INFO   [wfs.json] - about to encode JSON
20 051 19:51:14 INFO   [wfs.json] - about to encode JSON
20 051 19:51:14 INFO   [wfs.json] - about to encode JSON
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 19:51:28 INFO   [wfs.json] - about to encode JSON
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 19:51:28 INFO   [wfs.json] - about to encode JSON
20 051 19:51:28 INFO   [wfs.json] - about to encode JSON
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 19:51:28 INFO   [wfs.json] - about to encode JSON
20 051 19:51:28 INFO   [wfs.json] - about to encode JSON
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 19:51:28 INFO   [wfs.json] - about to encode JSON
20 051 19:51:28 INFO   [wfs.json] - about to encode JSON
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 19:51:28 INFO   [wfs.json] - about to encode JSON
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 19:51:28 INFO   [wfs.json] - about to encode JSON
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 19:51:28 INFO   [wfs.json] - about to encode JSON
20 051 19:51:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213107.78740551957 : 216260.81482228305, 6080953.43482034 : 6083270.432240236] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 19:51:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:33 INFO   [wfs.json] - about to encode JSON
20 051 19:51:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213107.78740551957 : 216260.81482228305, 6080953.43482034 : 6083270.432240236] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 19:51:33 INFO   [wfs.json] - about to encode JSON
20 051 19:51:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213107.78740551957 : 216260.81482228305, 6080953.43482034 : 6083270.432240236] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 19:51:33 INFO   [wfs.json] - about to encode JSON
20 051 19:51:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213107.78740551957 : 216260.81482228305, 6080953.43482034 : 6083270.432240236] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 19:51:33 INFO   [wfs.json] - about to encode JSON
20 051 19:51:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213107.78740551957 : 216260.81482228305, 6080953.43482034 : 6083270.432240236] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 19:51:33 INFO   [wfs.json] - about to encode JSON
20 051 19:51:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 19:51:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 19:51:39 INFO   [wfs.json] - about to encode JSON
20 051 19:51:39 INFO   [wfs.json] - about to encode JSON
20 051 19:51:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 19:51:39 INFO   [wfs.json] - about to encode JSON
20 051 19:51:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 19:51:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 19:51:39 INFO   [wfs.json] - about to encode JSON
20 051 19:51:39 INFO   [wfs.json] - about to encode JSON
20 051 19:51:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 19:51:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:42 INFO   [wfs.json] - about to encode JSON
20 051 19:51:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 19:51:42 INFO   [wfs.json] - about to encode JSON
20 051 19:51:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 19:51:42 INFO   [wfs.json] - about to encode JSON
20 051 19:51:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 19:51:42 INFO   [wfs.json] - about to encode JSON
20 051 19:51:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 19:51:42 INFO   [wfs.json] - about to encode JSON
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 19:51:44 INFO   [wfs.json] - about to encode JSON
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 19:51:44 INFO   [wfs.json] - about to encode JSON
20 051 19:51:44 INFO   [wfs.json] - about to encode JSON
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 19:51:44 INFO   [wfs.json] - about to encode JSON
20 051 19:51:44 INFO   [wfs.json] - about to encode JSON
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 19:51:44 INFO   [wfs.json] - about to encode JSON
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 19:51:44 INFO   [wfs.json] - about to encode JSON
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 19:51:44 INFO   [wfs.json] - about to encode JSON
20 051 19:51:44 INFO   [wfs.json] - about to encode JSON
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 19:51:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 19:51:44 INFO   [wfs.json] - about to encode JSON
20 052 19:52:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 19:52:08 INFO   [wfs.json] - about to encode JSON
20 052 19:52:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 19:52:08 INFO   [wfs.json] - about to encode JSON
20 052 19:52:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 19:52:08 INFO   [wfs.json] - about to encode JSON
20 052 19:52:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 19:52:08 INFO   [wfs.json] - about to encode JSON
20 052 19:52:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 19:52:08 INFO   [wfs.json] - about to encode JSON
20 052 19:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 19:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:14 INFO   [wfs.json] - about to encode JSON
20 052 19:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 19:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 19:52:14 INFO   [wfs.json] - about to encode JSON
20 052 19:52:14 INFO   [wfs.json] - about to encode JSON
20 052 19:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 19:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 19:52:14 INFO   [wfs.json] - about to encode JSON
20 052 19:52:14 INFO   [wfs.json] - about to encode JSON
20 052 19:52:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 19:52:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:16 INFO   [wfs.json] - about to encode JSON
20 052 19:52:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 19:52:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 19:52:16 INFO   [wfs.json] - about to encode JSON
20 052 19:52:16 INFO   [wfs.json] - about to encode JSON
20 052 19:52:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 19:52:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:16 INFO   [wfs.json] - about to encode JSON
20 052 19:52:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 19:52:16 INFO   [wfs.json] - about to encode JSON
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 19:52:28 INFO   [wfs.json] - about to encode JSON
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:28 INFO   [wfs.json] - about to encode JSON
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 19:52:28 INFO   [wfs.json] - about to encode JSON
20 052 19:52:28 INFO   [wfs.json] - about to encode JSON
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 19:52:28 INFO   [wfs.json] - about to encode JSON
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 19:52:28 INFO   [wfs.json] - about to encode JSON
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 19:52:28 INFO   [wfs.json] - about to encode JSON
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 19:52:28 INFO   [wfs.json] - about to encode JSON
20 052 19:52:28 INFO   [wfs.json] - about to encode JSON
20 052 19:52:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 19:52:28 INFO   [wfs.json] - about to encode JSON
20 053 19:53:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 053 19:53:25 INFO   [wfs.json] - about to encode JSON
20 053 19:53:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 053 19:53:25 INFO   [wfs.json] - about to encode JSON
20 053 19:53:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 053 19:53:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 053 19:53:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 053 19:53:25 INFO   [wfs.json] - about to encode JSON
20 053 19:53:25 INFO   [wfs.json] - about to encode JSON
20 053 19:53:25 INFO   [wfs.json] - about to encode JSON
20 053 19:53:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 053 19:53:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:26 INFO   [wfs.json] - about to encode JSON
20 053 19:53:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 053 19:53:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 053 19:53:26 INFO   [wfs.json] - about to encode JSON
20 053 19:53:26 INFO   [wfs.json] - about to encode JSON
20 053 19:53:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 053 19:53:26 INFO   [wfs.json] - about to encode JSON
20 053 19:53:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 053 19:53:26 INFO   [wfs.json] - about to encode JSON
20 053 19:53:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 053 19:53:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 053 19:53:28 INFO   [wfs.json] - about to encode JSON
20 053 19:53:28 INFO   [wfs.json] - about to encode JSON
20 053 19:53:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 053 19:53:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 053 19:53:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 053 19:53:28 INFO   [wfs.json] - about to encode JSON
20 053 19:53:28 INFO   [wfs.json] - about to encode JSON
20 053 19:53:28 INFO   [wfs.json] - about to encode JSON
20 053 19:53:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 19:53:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76737.626560205 : 79890.65397696853, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 053 19:53:36 INFO   [wfs.json] - about to encode JSON
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 054 19:54:59 INFO   [wfs.json] - about to encode JSON
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 054 19:54:59 INFO   [wfs.json] - about to encode JSON
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 19:54:59 INFO   [wfs.json] - about to encode JSON
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 054 19:54:59 INFO   [wfs.json] - about to encode JSON
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 054 19:54:59 INFO   [wfs.json] - about to encode JSON
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 054 19:54:59 INFO   [wfs.json] - about to encode JSON
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 19:54:59 INFO   [wfs.json] - about to encode JSON
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 054 19:54:59 INFO   [wfs.json] - about to encode JSON
20 054 19:54:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 054 19:54:59 INFO   [wfs.json] - about to encode JSON
20 055 19:55:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 19:55:00 INFO   [wfs.json] - about to encode JSON
20 055 19:55:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 19:55:00 INFO   [wfs.json] - about to encode JSON
20 055 19:55:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 19:55:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 19:55:00 INFO   [wfs.json] - about to encode JSON
20 055 19:55:00 INFO   [wfs.json] - about to encode JSON
20 055 19:55:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 19:55:00 INFO   [wfs.json] - about to encode JSON
20 055 19:55:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 19:55:00 INFO   [wfs.json] - about to encode JSON
20 055 19:55:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 19:55:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 19:55:04 INFO   [wfs.json] - about to encode JSON
20 055 19:55:04 INFO   [wfs.json] - about to encode JSON
20 055 19:55:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 19:55:04 INFO   [wfs.json] - about to encode JSON
20 055 19:55:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 19:55:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 19:55:04 INFO   [wfs.json] - about to encode JSON
20 055 19:55:04 INFO   [wfs.json] - about to encode JSON
20 055 19:55:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 19:55:29 INFO   [wfs.json] - about to encode JSON
20 055 19:55:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 19:55:29 INFO   [wfs.json] - about to encode JSON
20 055 19:55:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 19:55:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:29 INFO   [wfs.json] - about to encode JSON
20 055 19:55:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 19:55:29 INFO   [wfs.json] - about to encode JSON
20 055 19:55:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 19:55:29 INFO   [wfs.json] - about to encode JSON
20 055 19:55:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 19:55:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 19:55:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 19:55:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 19:55:30 INFO   [wfs.json] - about to encode JSON
20 055 19:55:30 INFO   [wfs.json] - about to encode JSON
20 055 19:55:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 19:55:30 INFO   [wfs.json] - about to encode JSON
20 055 19:55:30 INFO   [wfs.json] - about to encode JSON
20 055 19:55:30 INFO   [wfs.json] - about to encode JSON
20 055 19:55:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 19:55:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 19:55:32 INFO   [wfs.json] - about to encode JSON
20 055 19:55:32 INFO   [wfs.json] - about to encode JSON
20 055 19:55:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 19:55:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 19:55:32 INFO   [wfs.json] - about to encode JSON
20 055 19:55:32 INFO   [wfs.json] - about to encode JSON
20 055 19:55:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 19:55:32 INFO   [wfs.json] - about to encode JSON
20 055 19:55:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 19:55:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 19:55:35 INFO   [wfs.json] - about to encode JSON
20 055 19:55:35 INFO   [wfs.json] - about to encode JSON
20 055 19:55:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 19:55:35 INFO   [wfs.json] - about to encode JSON
20 055 19:55:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 19:55:35 INFO   [wfs.json] - about to encode JSON
20 055 19:55:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 19:55:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 19:55:35 INFO   [wfs.json] - about to encode JSON
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 19:56:29 INFO   [wfs.json] - about to encode JSON
20 056 19:56:29 INFO   [wfs.json] - about to encode JSON
20 056 19:56:29 INFO   [wfs.json] - about to encode JSON
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:29 INFO   [wfs.json] - about to encode JSON
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 19:56:29 INFO   [wfs.json] - about to encode JSON
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 19:56:29 INFO   [wfs.json] - about to encode JSON
20 056 19:56:29 INFO   [wfs.json] - about to encode JSON
20 056 19:56:29 INFO   [wfs.json] - about to encode JSON
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 19:56:29 INFO   [wfs.json] - about to encode JSON
20 056 19:56:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 19:56:29 INFO   [wfs.json] - about to encode JSON
20 056 19:56:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 19:56:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:34 INFO   [wfs.json] - about to encode JSON
20 056 19:56:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 19:56:34 INFO   [wfs.json] - about to encode JSON
20 056 19:56:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 19:56:34 INFO   [wfs.json] - about to encode JSON
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 19:56:35 INFO   [wfs.json] - about to encode JSON
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 19:56:35 INFO   [wfs.json] - about to encode JSON
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 19:56:35 INFO   [wfs.json] - about to encode JSON
20 056 19:56:35 INFO   [wfs.json] - about to encode JSON
20 056 19:56:35 INFO   [wfs.json] - about to encode JSON
20 056 19:56:35 INFO   [wfs.json] - about to encode JSON
20 056 19:56:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 19:56:35 INFO   [wfs.json] - about to encode JSON
20 056 19:56:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 19:56:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213790.23188973224 : 216943.25930649572, 6079690.1351287635 : 6082007.132548659] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 19:56:44 INFO   [wfs.json] - about to encode JSON
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:18 INFO   [wfs.json] - about to encode JSON
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 19:57:18 INFO   [wfs.json] - about to encode JSON
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 057 19:57:18 INFO   [wfs.json] - about to encode JSON
20 057 19:57:18 INFO   [wfs.json] - about to encode JSON
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 057 19:57:18 INFO   [wfs.json] - about to encode JSON
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 057 19:57:18 INFO   [wfs.json] - about to encode JSON
20 057 19:57:18 INFO   [wfs.json] - about to encode JSON
20 057 19:57:18 INFO   [wfs.json] - about to encode JSON
20 057 19:57:18 INFO   [wfs.json] - about to encode JSON
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 057 19:57:18 INFO   [wfs.json] - about to encode JSON
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 057 19:57:24 INFO   [wfs.json] - about to encode JSON
20 057 19:57:24 INFO   [wfs.json] - about to encode JSON
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 19:57:24 INFO   [wfs.json] - about to encode JSON
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 057 19:57:24 INFO   [wfs.json] - about to encode JSON
20 057 19:57:24 INFO   [wfs.json] - about to encode JSON
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 057 19:57:24 INFO   [wfs.json] - about to encode JSON
20 057 19:57:24 INFO   [wfs.json] - about to encode JSON
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 057 19:57:24 INFO   [wfs.json] - about to encode JSON
20 057 19:57:24 INFO   [wfs.json] - about to encode JSON
20 057 19:57:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 057 19:57:24 INFO   [wfs.json] - about to encode JSON
20 057 19:57:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 057 19:57:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 057 19:57:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 19:57:44 INFO   [wfs.json] - about to encode JSON
20 057 19:57:44 INFO   [wfs.json] - about to encode JSON
20 057 19:57:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 057 19:57:44 INFO   [wfs.json] - about to encode JSON
20 057 19:57:44 INFO   [wfs.json] - about to encode JSON
20 057 19:57:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 057 19:57:44 INFO   [wfs.json] - about to encode JSON
20 057 19:57:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 19:57:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:45 INFO   [wfs.json] - about to encode JSON
20 057 19:57:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 057 19:57:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 057 19:57:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 19:57:45 INFO   [wfs.json] - about to encode JSON
20 057 19:57:45 INFO   [wfs.json] - about to encode JSON
20 057 19:57:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 057 19:57:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 057 19:57:45 INFO   [wfs.json] - about to encode JSON
20 057 19:57:45 INFO   [wfs.json] - about to encode JSON
20 058 19:58:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 19:58:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 19:58:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 19:58:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 19:58:10 INFO   [wfs.json] - about to encode JSON
20 058 19:58:10 INFO   [wfs.json] - about to encode JSON
20 058 19:58:10 INFO   [wfs.json] - about to encode JSON
20 058 19:58:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:10 INFO   [wfs.json] - about to encode JSON
20 058 19:58:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 19:58:10 INFO   [wfs.json] - about to encode JSON
20 058 19:58:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 19:58:11 INFO   [wfs.json] - about to encode JSON
20 058 19:58:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 19:58:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 19:58:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 19:58:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 19:58:11 INFO   [wfs.json] - about to encode JSON
20 058 19:58:11 INFO   [wfs.json] - about to encode JSON
20 058 19:58:11 INFO   [wfs.json] - about to encode JSON
20 058 19:58:11 INFO   [wfs.json] - about to encode JSON
20 058 19:58:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 19:58:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 19:58:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 19:58:56 INFO   [wfs.json] - about to encode JSON
20 058 19:58:56 INFO   [wfs.json] - about to encode JSON
20 058 19:58:56 INFO   [wfs.json] - about to encode JSON
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 19:58:57 INFO   [wfs.json] - about to encode JSON
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 19:58:57 INFO   [wfs.json] - about to encode JSON
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 19:58:57 INFO   [wfs.json] - about to encode JSON
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 19:58:57 INFO   [wfs.json] - about to encode JSON
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 19:58:57 INFO   [wfs.json] - about to encode JSON
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 19:58:57 INFO   [wfs.json] - about to encode JSON
20 058 19:58:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 19:58:57 INFO   [wfs.json] - about to encode JSON
20 059 19:59:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 19:59:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 19:59:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 19:59:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 19:59:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 059 19:59:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 059 19:59:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 19:59:19 INFO   [wfs.json] - about to encode JSON
20 059 19:59:19 INFO   [wfs.json] - about to encode JSON
20 059 19:59:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 059 19:59:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 059 19:59:19 INFO   [wfs.json] - about to encode JSON
20 059 19:59:19 INFO   [wfs.json] - about to encode JSON
20 059 19:59:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 059 19:59:19 INFO   [wfs.json] - about to encode JSON
20 059 19:59:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 19:59:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 19:59:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 19:59:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 19:59:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 19:59:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 059 19:59:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 059 19:59:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 059 19:59:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 059 19:59:20 INFO   [wfs.json] - about to encode JSON
20 059 19:59:20 INFO   [wfs.json] - about to encode JSON
20 059 19:59:20 INFO   [wfs.json] - about to encode JSON
20 059 19:59:20 INFO   [wfs.json] - about to encode JSON
20 059 19:59:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 059 19:59:20 INFO   [wfs.json] - about to encode JSON
20 001 20:01:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 20:01:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 20:01:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 001 20:01:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 001 20:01:54 INFO   [wfs.json] - about to encode JSON
20 001 20:01:54 INFO   [wfs.json] - about to encode JSON
20 001 20:01:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 20:01:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 20:01:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 20:01:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 001 20:01:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 001 20:01:54 INFO   [wfs.json] - about to encode JSON
20 001 20:01:54 INFO   [wfs.json] - about to encode JSON
20 001 20:01:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 001 20:01:54 INFO   [wfs.json] - about to encode JSON
20 001 20:01:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 20:01:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 20:01:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 20:01:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 20:01:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 001 20:01:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 001 20:01:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 001 20:01:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 001 20:01:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 001 20:01:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 001 20:01:55 INFO   [wfs.json] - about to encode JSON
20 001 20:01:55 INFO   [wfs.json] - about to encode JSON
20 001 20:01:55 INFO   [wfs.json] - about to encode JSON
20 001 20:01:55 INFO   [wfs.json] - about to encode JSON
20 001 20:01:55 INFO   [wfs.json] - about to encode JSON
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 20:02:07 INFO   [wfs.json] - about to encode JSON
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 20:02:07 INFO   [wfs.json] - about to encode JSON
20 002 20:02:07 INFO   [wfs.json] - about to encode JSON
20 002 20:02:07 INFO   [wfs.json] - about to encode JSON
20 002 20:02:07 INFO   [wfs.json] - about to encode JSON
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:07 INFO   [wfs.json] - about to encode JSON
20 002 20:02:07 INFO   [wfs.json] - about to encode JSON
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 20:02:07 INFO   [wfs.json] - about to encode JSON
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 20:02:07 INFO   [wfs.json] - about to encode JSON
20 002 20:02:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 20:02:07 INFO   [wfs.json] - about to encode JSON
20 002 20:02:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 20:02:48 INFO   [wfs.json] - about to encode JSON
20 002 20:02:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 20:02:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:48 INFO   [wfs.json] - about to encode JSON
20 002 20:02:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 20:02:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 20:02:48 INFO   [wfs.json] - about to encode JSON
20 002 20:02:48 INFO   [wfs.json] - about to encode JSON
20 002 20:02:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 20:02:48 INFO   [wfs.json] - about to encode JSON
20 002 20:02:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 20:02:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 20:02:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 20:02:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 20:02:49 INFO   [wfs.json] - about to encode JSON
20 002 20:02:49 INFO   [wfs.json] - about to encode JSON
20 002 20:02:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 20:02:49 INFO   [wfs.json] - about to encode JSON
20 002 20:02:49 INFO   [wfs.json] - about to encode JSON
20 002 20:02:49 INFO   [wfs.json] - about to encode JSON
20 002 20:02:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 20:02:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 20:02:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 20:02:56 INFO   [wfs.json] - about to encode JSON
20 002 20:02:56 INFO   [wfs.json] - about to encode JSON
20 002 20:02:56 INFO   [wfs.json] - about to encode JSON
20 002 20:02:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 20:02:56 INFO   [wfs.json] - about to encode JSON
20 002 20:02:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 20:02:56 INFO   [wfs.json] - about to encode JSON
20 002 20:02:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 20:02:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 20:02:57 INFO   [wfs.json] - about to encode JSON
20 002 20:02:57 INFO   [wfs.json] - about to encode JSON
20 002 20:02:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 20:02:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:57 INFO   [wfs.json] - about to encode JSON
20 002 20:02:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 20:02:57 INFO   [wfs.json] - about to encode JSON
20 002 20:02:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 20:02:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 20:02:57 INFO   [wfs.json] - about to encode JSON
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 20:03:42 INFO   [wfs.json] - about to encode JSON
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 20:03:42 INFO   [wfs.json] - about to encode JSON
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 20:03:42 INFO   [wfs.json] - about to encode JSON
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 20:03:42 INFO   [wfs.json] - about to encode JSON
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 20:03:42 INFO   [wfs.json] - about to encode JSON
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 20:03:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 20:03:42 INFO   [wfs.json] - about to encode JSON
20 003 20:03:42 INFO   [wfs.json] - about to encode JSON
20 003 20:03:42 INFO   [wfs.json] - about to encode JSON
20 003 20:03:42 INFO   [wfs.json] - about to encode JSON
20 003 20:03:42 INFO   [wfs.json] - about to encode JSON
20 003 20:03:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 20:03:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 20:03:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 20:03:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 20:03:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 20:03:55 INFO   [wfs.json] - about to encode JSON
20 003 20:03:55 INFO   [wfs.json] - about to encode JSON
20 003 20:03:55 INFO   [wfs.json] - about to encode JSON
20 003 20:03:55 INFO   [wfs.json] - about to encode JSON
20 003 20:03:55 INFO   [wfs.json] - about to encode JSON
20 003 20:03:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 20:03:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 20:03:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 20:03:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 20:03:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 20:03:56 INFO   [wfs.json] - about to encode JSON
20 003 20:03:56 INFO   [wfs.json] - about to encode JSON
20 003 20:03:56 INFO   [wfs.json] - about to encode JSON
20 003 20:03:56 INFO   [wfs.json] - about to encode JSON
20 003 20:03:56 INFO   [wfs.json] - about to encode JSON
20 003 20:03:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 20:03:58 INFO   [wfs.json] - about to encode JSON
20 003 20:03:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 20:03:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 20:03:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 20:03:58 INFO   [wfs.json] - about to encode JSON
20 003 20:03:58 INFO   [wfs.json] - about to encode JSON
20 003 20:03:58 INFO   [wfs.json] - about to encode JSON
20 003 20:03:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 20:03:58 INFO   [wfs.json] - about to encode JSON
20 003 20:03:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 20:03:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 20:03:59 INFO   [wfs.json] - about to encode JSON
20 003 20:03:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 20:03:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 20:03:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 20:03:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 20:03:59 INFO   [wfs.json] - about to encode JSON
20 003 20:03:59 INFO   [wfs.json] - about to encode JSON
20 003 20:03:59 INFO   [wfs.json] - about to encode JSON
20 003 20:03:59 INFO   [wfs.json] - about to encode JSON
20 004 20:04:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 20:04:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 20:04:00 INFO   [wfs.json] - about to encode JSON
20 004 20:04:00 INFO   [wfs.json] - about to encode JSON
20 004 20:04:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 20:04:00 INFO   [wfs.json] - about to encode JSON
20 004 20:04:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 20:04:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 20:04:00 INFO   [wfs.json] - about to encode JSON
20 004 20:04:00 INFO   [wfs.json] - about to encode JSON
20 004 20:04:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 20:04:01 INFO   [wfs.json] - about to encode JSON
20 004 20:04:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 20:04:01 INFO   [wfs.json] - about to encode JSON
20 004 20:04:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 20:04:01 INFO   [wfs.json] - about to encode JSON
20 004 20:04:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 20:04:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:01 INFO   [wfs.json] - about to encode JSON
20 004 20:04:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 20:04:01 INFO   [wfs.json] - about to encode JSON
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 20:04:21 INFO   [wfs.json] - about to encode JSON
20 004 20:04:21 INFO   [wfs.json] - about to encode JSON
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 20:04:21 INFO   [wfs.json] - about to encode JSON
20 004 20:04:21 INFO   [wfs.json] - about to encode JSON
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213768.73397552702 : 216921.7613922905, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 20:04:21 INFO   [wfs.json] - about to encode JSON
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:21 INFO   [wfs.json] - about to encode JSON
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 20:04:21 INFO   [wfs.json] - about to encode JSON
20 004 20:04:21 INFO   [wfs.json] - about to encode JSON
20 004 20:04:21 INFO   [wfs.json] - about to encode JSON
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 20:04:21 INFO   [wfs.json] - about to encode JSON
20 004 20:04:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213767.53964696007 : 216922.95572085746, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 20:04:43 INFO   [wfs.json] - about to encode JSON
20 004 20:04:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213753.20770415658 : 216937.28766366094, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 20:04:43 INFO   [wfs.json] - about to encode JSON
20 004 20:04:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213584.80737621582 : 217105.6879916017, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 20:04:43 INFO   [wfs.json] - about to encode JSON
20 004 20:04:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213508.37034793064 : 217182.12501988688, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 20:04:43 INFO   [wfs.json] - about to encode JSON
20 004 20:04:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213293.39120587858 : 217397.10416193894, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 20:04:43 INFO   [wfs.json] - about to encode JSON
20 004 20:04:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213233.67477753077 : 217456.82059028675, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 20:04:44 INFO   [wfs.json] - about to encode JSON
20 004 20:04:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 20:04:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213228.89746326295 : 217461.59790455457, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 20:04:44 INFO   [wfs.json] - about to encode JSON
20 005 20:05:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 20:05:22 INFO   [wfs.json] - about to encode JSON
20 005 20:05:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 20:05:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 20:05:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 20:05:22 INFO   [wfs.json] - about to encode JSON
20 005 20:05:22 INFO   [wfs.json] - about to encode JSON
20 005 20:05:22 INFO   [wfs.json] - about to encode JSON
20 005 20:05:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 20:05:22 INFO   [wfs.json] - about to encode JSON
20 005 20:05:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 20:05:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 20:05:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:23 INFO   [wfs.json] - about to encode JSON
20 005 20:05:23 INFO   [wfs.json] - about to encode JSON
20 005 20:05:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 20:05:23 INFO   [wfs.json] - about to encode JSON
20 005 20:05:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 20:05:23 INFO   [wfs.json] - about to encode JSON
20 005 20:05:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 20:05:23 INFO   [wfs.json] - about to encode JSON
20 005 20:05:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 20:05:26 INFO   [wfs.json] - about to encode JSON
20 005 20:05:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 20:05:26 INFO   [wfs.json] - about to encode JSON
20 005 20:05:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 20:05:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 20:05:26 INFO   [wfs.json] - about to encode JSON
20 005 20:05:26 INFO   [wfs.json] - about to encode JSON
20 005 20:05:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 20:05:27 INFO   [wfs.json] - about to encode JSON
20 005 20:05:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 20:05:27 INFO   [wfs.json] - about to encode JSON
20 005 20:05:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 20:05:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 20:05:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 20:05:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 20:05:27 INFO   [wfs.json] - about to encode JSON
20 005 20:05:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 20:05:27 INFO   [wfs.json] - about to encode JSON
20 005 20:05:27 INFO   [wfs.json] - about to encode JSON
20 005 20:05:27 INFO   [wfs.json] - about to encode JSON
20 006 20:06:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 20:06:27 INFO   [wfs.json] - about to encode JSON
20 006 20:06:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 20:06:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:27 INFO   [wfs.json] - about to encode JSON
20 006 20:06:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 20:06:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 20:06:27 INFO   [wfs.json] - about to encode JSON
20 006 20:06:27 INFO   [wfs.json] - about to encode JSON
20 006 20:06:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 20:06:27 INFO   [wfs.json] - about to encode JSON
20 006 20:06:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 20:06:29 INFO   [wfs.json] - about to encode JSON
20 006 20:06:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 20:06:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 20:06:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 20:06:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:29 INFO   [wfs.json] - about to encode JSON
20 006 20:06:29 INFO   [wfs.json] - about to encode JSON
20 006 20:06:29 INFO   [wfs.json] - about to encode JSON
20 006 20:06:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 20:06:29 INFO   [wfs.json] - about to encode JSON
20 006 20:06:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 20:06:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 20:06:30 INFO   [wfs.json] - about to encode JSON
20 006 20:06:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 20:06:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 20:06:30 INFO   [wfs.json] - about to encode JSON
20 006 20:06:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 20:06:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 20:06:30 INFO   [wfs.json] - about to encode JSON
20 006 20:06:30 INFO   [wfs.json] - about to encode JSON
20 006 20:06:30 INFO   [wfs.json] - about to encode JSON
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 20:07:02 INFO   [wfs.json] - about to encode JSON
20 007 20:07:02 INFO   [wfs.json] - about to encode JSON
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 20:07:02 INFO   [wfs.json] - about to encode JSON
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 20:07:02 INFO   [wfs.json] - about to encode JSON
20 007 20:07:02 INFO   [wfs.json] - about to encode JSON
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 20:07:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 20:07:02 INFO   [wfs.json] - about to encode JSON
20 007 20:07:02 INFO   [wfs.json] - about to encode JSON
20 007 20:07:02 INFO   [wfs.json] - about to encode JSON
20 007 20:07:02 INFO   [wfs.json] - about to encode JSON
20 007 20:07:02 INFO   [wfs.json] - about to encode JSON
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 20:07:05 INFO   [wfs.json] - about to encode JSON
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 20:07:05 INFO   [wfs.json] - about to encode JSON
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 20:07:05 INFO   [wfs.json] - about to encode JSON
20 007 20:07:05 INFO   [wfs.json] - about to encode JSON
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 20:07:05 INFO   [wfs.json] - about to encode JSON
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 20:07:05 INFO   [wfs.json] - about to encode JSON
20 007 20:07:05 INFO   [wfs.json] - about to encode JSON
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 20:07:05 INFO   [wfs.json] - about to encode JSON
20 007 20:07:05 INFO   [wfs.json] - about to encode JSON
20 007 20:07:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 20:07:05 INFO   [wfs.json] - about to encode JSON
20 007 20:07:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 20:07:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 20:07:32 INFO   [wfs.json] - about to encode JSON
20 007 20:07:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 20:07:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 20:07:32 INFO   [wfs.json] - about to encode JSON
20 007 20:07:32 INFO   [wfs.json] - about to encode JSON
20 007 20:07:32 INFO   [wfs.json] - about to encode JSON
20 007 20:07:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 20:07:32 INFO   [wfs.json] - about to encode JSON
20 007 20:07:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 20:07:33 INFO   [wfs.json] - about to encode JSON
20 007 20:07:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 20:07:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 20:07:33 INFO   [wfs.json] - about to encode JSON
20 007 20:07:33 INFO   [wfs.json] - about to encode JSON
20 007 20:07:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 20:07:33 INFO   [wfs.json] - about to encode JSON
20 007 20:07:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 20:07:33 INFO   [wfs.json] - about to encode JSON
20 007 20:07:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 20:07:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 20:07:43 INFO   [wfs.json] - about to encode JSON
20 007 20:07:43 INFO   [wfs.json] - about to encode JSON
20 007 20:07:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 20:07:43 INFO   [wfs.json] - about to encode JSON
20 007 20:07:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 20:07:43 INFO   [wfs.json] - about to encode JSON
20 007 20:07:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 20:07:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 20:07:43 INFO   [wfs.json] - about to encode JSON
20 008 20:08:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 20:08:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 20:08:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 20:08:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 20:08:12 INFO   [wfs.json] - about to encode JSON
20 008 20:08:12 INFO   [wfs.json] - about to encode JSON
20 008 20:08:12 INFO   [wfs.json] - about to encode JSON
20 008 20:08:12 INFO   [wfs.json] - about to encode JSON
20 008 20:08:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 20:08:12 INFO   [wfs.json] - about to encode JSON
20 008 20:08:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 20:08:13 INFO   [wfs.json] - about to encode JSON
20 008 20:08:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 20:08:13 INFO   [wfs.json] - about to encode JSON
20 008 20:08:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 20:08:13 INFO   [wfs.json] - about to encode JSON
20 008 20:08:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 20:08:13 INFO   [wfs.json] - about to encode JSON
20 008 20:08:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 20:08:13 INFO   [wfs.json] - about to encode JSON
20 008 20:08:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 20:08:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 20:08:14 INFO   [wfs.json] - about to encode JSON
20 008 20:08:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 20:08:14 INFO   [wfs.json] - about to encode JSON
20 008 20:08:14 INFO   [wfs.json] - about to encode JSON
20 008 20:08:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 20:08:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 20:08:14 INFO   [wfs.json] - about to encode JSON
20 008 20:08:14 INFO   [wfs.json] - about to encode JSON
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 20:08:38 INFO   [wfs.json] - about to encode JSON
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 20:08:38 INFO   [wfs.json] - about to encode JSON
20 008 20:08:38 INFO   [wfs.json] - about to encode JSON
20 008 20:08:38 INFO   [wfs.json] - about to encode JSON
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 20:08:38 INFO   [wfs.json] - about to encode JSON
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 20:08:38 INFO   [wfs.json] - about to encode JSON
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 20:08:38 INFO   [wfs.json] - about to encode JSON
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 20:08:38 INFO   [wfs.json] - about to encode JSON
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:38 INFO   [wfs.json] - about to encode JSON
20 008 20:08:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 20:08:38 INFO   [wfs.json] - about to encode JSON
20 008 20:08:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 20:08:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 20:08:40 INFO   [wfs.json] - about to encode JSON
20 008 20:08:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:40 INFO   [wfs.json] - about to encode JSON
20 008 20:08:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 20:08:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 20:08:40 INFO   [wfs.json] - about to encode JSON
20 008 20:08:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 20:08:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 20:08:40 INFO   [wfs.json] - about to encode JSON
20 008 20:08:40 INFO   [wfs.json] - about to encode JSON
20 009 20:09:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 20:09:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76214.51064787833 : 80413.7698892952, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 20:09:12 INFO   [wfs.json] - about to encode JSON
20 009 20:09:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 20:09:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76214.51064787833 : 80413.7698892952, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 20:09:13 INFO   [wfs.json] - about to encode JSON
20 009 20:09:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 20:09:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 20:09:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 20:09:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 20:09:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 20:09:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 20:09:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 20:09:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 20:09:57 INFO   [wfs.json] - about to encode JSON
20 009 20:09:57 INFO   [wfs.json] - about to encode JSON
20 009 20:09:57 INFO   [wfs.json] - about to encode JSON
20 009 20:09:57 INFO   [wfs.json] - about to encode JSON
20 009 20:09:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 20:09:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 20:09:57 INFO   [wfs.json] - about to encode JSON
20 009 20:09:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 20:09:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 20:09:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 20:09:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 20:09:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 20:09:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 20:09:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 20:09:58 INFO   [wfs.json] - about to encode JSON
20 009 20:09:58 INFO   [wfs.json] - about to encode JSON
20 009 20:09:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 20:09:58 INFO   [wfs.json] - about to encode JSON
20 009 20:09:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 20:09:58 INFO   [wfs.json] - about to encode JSON
20 009 20:09:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 20:09:58 INFO   [wfs.json] - about to encode JSON
20 010 20:10:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 20:10:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 20:10:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 20:10:07 INFO   [wfs.json] - about to encode JSON
20 010 20:10:07 INFO   [wfs.json] - about to encode JSON
20 010 20:10:07 INFO   [wfs.json] - about to encode JSON
20 010 20:10:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 20:10:07 INFO   [wfs.json] - about to encode JSON
20 010 20:10:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 20:10:07 INFO   [wfs.json] - about to encode JSON
20 010 20:10:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 20:10:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 20:10:08 INFO   [wfs.json] - about to encode JSON
20 010 20:10:08 INFO   [wfs.json] - about to encode JSON
20 010 20:10:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 20:10:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:08 INFO   [wfs.json] - about to encode JSON
20 010 20:10:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 20:10:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 20:10:08 INFO   [wfs.json] - about to encode JSON
20 010 20:10:08 INFO   [wfs.json] - about to encode JSON
20 010 20:10:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 20:10:52 INFO   [wfs.json] - about to encode JSON
20 010 20:10:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 20:10:52 INFO   [wfs.json] - about to encode JSON
20 010 20:10:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 20:10:52 INFO   [wfs.json] - about to encode JSON
20 010 20:10:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 20:10:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:52 INFO   [wfs.json] - about to encode JSON
20 010 20:10:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 20:10:52 INFO   [wfs.json] - about to encode JSON
20 010 20:10:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 20:10:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 20:10:53 INFO   [wfs.json] - about to encode JSON
20 010 20:10:53 INFO   [wfs.json] - about to encode JSON
20 010 20:10:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 20:10:53 INFO   [wfs.json] - about to encode JSON
20 010 20:10:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 20:10:53 INFO   [wfs.json] - about to encode JSON
20 010 20:10:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 20:10:53 INFO   [wfs.json] - about to encode JSON
20 010 20:10:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 20:10:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 20:10:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 20:10:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 20:10:59 INFO   [wfs.json] - about to encode JSON
20 010 20:10:59 INFO   [wfs.json] - about to encode JSON
20 010 20:10:59 INFO   [wfs.json] - about to encode JSON
20 010 20:10:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 20:10:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 20:10:59 INFO   [wfs.json] - about to encode JSON
20 010 20:10:59 INFO   [wfs.json] - about to encode JSON
20 011 20:11:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 011 20:11:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 011 20:11:00 INFO   [wfs.json] - about to encode JSON
20 011 20:11:00 INFO   [wfs.json] - about to encode JSON
20 011 20:11:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 011 20:11:00 INFO   [wfs.json] - about to encode JSON
20 011 20:11:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 011 20:11:00 INFO   [wfs.json] - about to encode JSON
20 011 20:11:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 011 20:11:00 INFO   [wfs.json] - about to encode JSON
20 011 20:11:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 011 20:11:02 INFO   [wfs.json] - about to encode JSON
20 011 20:11:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 011 20:11:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:02 INFO   [wfs.json] - about to encode JSON
20 011 20:11:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 011 20:11:02 INFO   [wfs.json] - about to encode JSON
20 011 20:11:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 011 20:11:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 011 20:11:02 INFO   [wfs.json] - about to encode JSON
20 011 20:11:02 INFO   [wfs.json] - about to encode JSON
20 011 20:11:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 011 20:11:03 INFO   [wfs.json] - about to encode JSON
20 011 20:11:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 011 20:11:03 INFO   [wfs.json] - about to encode JSON
20 011 20:11:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 011 20:11:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 011 20:11:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 011 20:11:03 INFO   [wfs.json] - about to encode JSON
20 011 20:11:03 INFO   [wfs.json] - about to encode JSON
20 011 20:11:03 INFO   [wfs.json] - about to encode JSON
20 011 20:11:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 011 20:11:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 011 20:11:23 INFO   [wfs.json] - about to encode JSON
20 011 20:11:23 INFO   [wfs.json] - about to encode JSON
20 011 20:11:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 011 20:11:23 INFO   [wfs.json] - about to encode JSON
20 011 20:11:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 011 20:11:23 INFO   [wfs.json] - about to encode JSON
20 011 20:11:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 011 20:11:23 INFO   [wfs.json] - about to encode JSON
20 011 20:11:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 011 20:11:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 011 20:11:24 INFO   [wfs.json] - about to encode JSON
20 011 20:11:24 INFO   [wfs.json] - about to encode JSON
20 011 20:11:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 011 20:11:24 INFO   [wfs.json] - about to encode JSON
20 011 20:11:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 011 20:11:24 INFO   [wfs.json] - about to encode JSON
20 011 20:11:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 011 20:11:24 INFO   [wfs.json] - about to encode JSON
20 011 20:11:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 011 20:11:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 011 20:11:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 011 20:11:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 011 20:11:59 INFO   [wfs.json] - about to encode JSON
20 011 20:11:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 20:11:59 INFO   [wfs.json] - about to encode JSON
20 011 20:11:59 INFO   [wfs.json] - about to encode JSON
20 011 20:11:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 011 20:11:59 INFO   [wfs.json] - about to encode JSON
20 011 20:11:59 INFO   [wfs.json] - about to encode JSON
20 012 20:12:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 012 20:12:00 INFO   [wfs.json] - about to encode JSON
20 012 20:12:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 012 20:12:00 INFO   [wfs.json] - about to encode JSON
20 012 20:12:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 012 20:12:00 INFO   [wfs.json] - about to encode JSON
20 012 20:12:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 012 20:12:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 012 20:12:00 INFO   [wfs.json] - about to encode JSON
20 012 20:12:00 INFO   [wfs.json] - about to encode JSON
20 012 20:12:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 012 20:12:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 012 20:12:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 012 20:12:18 INFO   [wfs.json] - about to encode JSON
20 012 20:12:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 012 20:12:18 INFO   [wfs.json] - about to encode JSON
20 012 20:12:18 INFO   [wfs.json] - about to encode JSON
20 012 20:12:18 INFO   [wfs.json] - about to encode JSON
20 012 20:12:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 012 20:12:18 INFO   [wfs.json] - about to encode JSON
20 012 20:12:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 012 20:12:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 012 20:12:19 INFO   [wfs.json] - about to encode JSON
20 012 20:12:19 INFO   [wfs.json] - about to encode JSON
20 012 20:12:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 20:12:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 012 20:12:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 012 20:12:19 INFO   [wfs.json] - about to encode JSON
20 012 20:12:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 012 20:12:19 INFO   [wfs.json] - about to encode JSON
20 012 20:12:19 INFO   [wfs.json] - about to encode JSON
20 013 20:13:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 20:13:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 20:13:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 013 20:13:57 INFO   [wfs.json] - about to encode JSON
20 013 20:13:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 20:13:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 20:13:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 20:13:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 013 20:13:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 013 20:13:57 INFO   [wfs.json] - about to encode JSON
20 013 20:13:57 INFO   [wfs.json] - about to encode JSON
20 013 20:13:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 013 20:13:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 013 20:13:57 INFO   [wfs.json] - about to encode JSON
20 013 20:13:57 INFO   [wfs.json] - about to encode JSON
20 013 20:13:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 20:13:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 20:13:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 013 20:13:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 013 20:13:58 INFO   [wfs.json] - about to encode JSON
20 013 20:13:58 INFO   [wfs.json] - about to encode JSON
20 013 20:13:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 20:13:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 20:13:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 20:13:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 013 20:13:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 013 20:13:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 013 20:13:58 INFO   [wfs.json] - about to encode JSON
20 013 20:13:58 INFO   [wfs.json] - about to encode JSON
20 013 20:13:58 INFO   [wfs.json] - about to encode JSON
20 015 20:15:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 20:15:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 20:15:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 20:15:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:02 INFO   [wfs.json] - about to encode JSON
20 015 20:15:02 INFO   [wfs.json] - about to encode JSON
20 015 20:15:02 INFO   [wfs.json] - about to encode JSON
20 015 20:15:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 20:15:02 INFO   [wfs.json] - about to encode JSON
20 015 20:15:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 20:15:02 INFO   [wfs.json] - about to encode JSON
20 015 20:15:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 20:15:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 20:15:03 INFO   [wfs.json] - about to encode JSON
20 015 20:15:03 INFO   [wfs.json] - about to encode JSON
20 015 20:15:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 20:15:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 20:15:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 20:15:03 INFO   [wfs.json] - about to encode JSON
20 015 20:15:03 INFO   [wfs.json] - about to encode JSON
20 015 20:15:03 INFO   [wfs.json] - about to encode JSON
20 015 20:15:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 20:15:38 INFO   [wfs.json] - about to encode JSON
20 015 20:15:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 20:15:38 INFO   [wfs.json] - about to encode JSON
20 015 20:15:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 20:15:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 20:15:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:38 INFO   [wfs.json] - about to encode JSON
20 015 20:15:38 INFO   [wfs.json] - about to encode JSON
20 015 20:15:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 20:15:38 INFO   [wfs.json] - about to encode JSON
20 015 20:15:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 20:15:39 INFO   [wfs.json] - about to encode JSON
20 015 20:15:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 20:15:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 20:15:39 INFO   [wfs.json] - about to encode JSON
20 015 20:15:39 INFO   [wfs.json] - about to encode JSON
20 015 20:15:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 20:15:39 INFO   [wfs.json] - about to encode JSON
20 015 20:15:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 20:15:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 20:15:39 INFO   [wfs.json] - about to encode JSON
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 20:18:05 INFO   [wfs.json] - about to encode JSON
20 018 20:18:05 INFO   [wfs.json] - about to encode JSON
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 20:18:05 INFO   [wfs.json] - about to encode JSON
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 20:18:05 INFO   [wfs.json] - about to encode JSON
20 018 20:18:05 INFO   [wfs.json] - about to encode JSON
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 20:18:05 INFO   [wfs.json] - about to encode JSON
20 018 20:18:05 INFO   [wfs.json] - about to encode JSON
20 018 20:18:05 INFO   [wfs.json] - about to encode JSON
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 20:18:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 20:18:05 INFO   [wfs.json] - about to encode JSON
20 018 20:18:05 INFO   [wfs.json] - about to encode JSON
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 20:18:21 INFO   [wfs.json] - about to encode JSON
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 20:18:21 INFO   [wfs.json] - about to encode JSON
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 20:18:21 INFO   [wfs.json] - about to encode JSON
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 20:18:21 INFO   [wfs.json] - about to encode JSON
20 018 20:18:21 INFO   [wfs.json] - about to encode JSON
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 20:18:21 INFO   [wfs.json] - about to encode JSON
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 20:18:21 INFO   [wfs.json] - about to encode JSON
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 20:18:21 INFO   [wfs.json] - about to encode JSON
20 018 20:18:21 INFO   [wfs.json] - about to encode JSON
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 20:18:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 20:18:21 INFO   [wfs.json] - about to encode JSON
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 019 20:19:19 INFO   [wfs.json] - about to encode JSON
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 019 20:19:19 INFO   [wfs.json] - about to encode JSON
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 019 20:19:19 INFO   [wfs.json] - about to encode JSON
20 019 20:19:19 INFO   [wfs.json] - about to encode JSON
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 019 20:19:19 INFO   [wfs.json] - about to encode JSON
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 019 20:19:19 INFO   [wfs.json] - about to encode JSON
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 019 20:19:19 INFO   [wfs.json] - about to encode JSON
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 019 20:19:19 INFO   [wfs.json] - about to encode JSON
20 019 20:19:19 INFO   [wfs.json] - about to encode JSON
20 019 20:19:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 019 20:19:19 INFO   [wfs.json] - about to encode JSON
20 020 20:20:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 20:20:17 INFO   [wfs.json] - about to encode JSON
20 020 20:20:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 20:20:17 INFO   [wfs.json] - about to encode JSON
20 020 20:20:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 20:20:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 20:20:17 INFO   [wfs.json] - about to encode JSON
20 020 20:20:17 INFO   [wfs.json] - about to encode JSON
20 020 20:20:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 20:20:17 INFO   [wfs.json] - about to encode JSON
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 20:20:18 INFO   [wfs.json] - about to encode JSON
20 020 20:20:18 INFO   [wfs.json] - about to encode JSON
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 20:20:18 INFO   [wfs.json] - about to encode JSON
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 20:20:18 INFO   [wfs.json] - about to encode JSON
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 20:20:18 INFO   [wfs.json] - about to encode JSON
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 20:20:18 INFO   [wfs.json] - about to encode JSON
20 020 20:20:18 INFO   [wfs.json] - about to encode JSON
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 20:20:18 INFO   [wfs.json] - about to encode JSON
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 20:20:18 INFO   [wfs.json] - about to encode JSON
20 020 20:20:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 20:20:18 INFO   [wfs.json] - about to encode JSON
20 020 20:20:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 20:20:19 INFO   [wfs.json] - about to encode JSON
20 020 20:20:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 20:20:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 20:20:19 INFO   [wfs.json] - about to encode JSON
20 020 20:20:19 INFO   [wfs.json] - about to encode JSON
20 020 20:20:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 20:20:19 INFO   [wfs.json] - about to encode JSON
20 020 20:20:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 20:20:19 INFO   [wfs.json] - about to encode JSON
20 020 20:20:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 20:20:23 INFO   [wfs.json] - about to encode JSON
20 020 20:20:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 20:20:23 INFO   [wfs.json] - about to encode JSON
20 020 20:20:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 20:20:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 20:20:23 INFO   [wfs.json] - about to encode JSON
20 020 20:20:23 INFO   [wfs.json] - about to encode JSON
20 020 20:20:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 20:20:23 INFO   [wfs.json] - about to encode JSON
20 020 20:20:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 20:20:24 INFO   [wfs.json] - about to encode JSON
20 020 20:20:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 20:20:24 INFO   [wfs.json] - about to encode JSON
20 020 20:20:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 20:20:24 INFO   [wfs.json] - about to encode JSON
20 020 20:20:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 20:20:24 INFO   [wfs.json] - about to encode JSON
20 020 20:20:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 20:20:24 INFO   [wfs.json] - about to encode JSON
20 020 20:20:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 20:20:26 INFO   [wfs.json] - about to encode JSON
20 020 20:20:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 20:20:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 20:20:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:26 INFO   [wfs.json] - about to encode JSON
20 020 20:20:26 INFO   [wfs.json] - about to encode JSON
20 020 20:20:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 20:20:26 INFO   [wfs.json] - about to encode JSON
20 020 20:20:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 20:20:26 INFO   [wfs.json] - about to encode JSON
20 020 20:20:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 20:20:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 20:20:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 20:20:31 INFO   [wfs.json] - about to encode JSON
20 020 20:20:31 INFO   [wfs.json] - about to encode JSON
20 020 20:20:31 INFO   [wfs.json] - about to encode JSON
20 020 20:20:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 20:20:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 20:20:31 INFO   [wfs.json] - about to encode JSON
20 020 20:20:31 INFO   [wfs.json] - about to encode JSON
20 020 20:20:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 20:20:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 20:20:32 INFO   [wfs.json] - about to encode JSON
20 020 20:20:32 INFO   [wfs.json] - about to encode JSON
20 020 20:20:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 20:20:32 INFO   [wfs.json] - about to encode JSON
20 020 20:20:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 20:20:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 20:20:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 20:20:32 INFO   [wfs.json] - about to encode JSON
20 020 20:20:32 INFO   [wfs.json] - about to encode JSON
20 021 20:21:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 20:21:27 INFO   [wfs.json] - about to encode JSON
20 021 20:21:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 20:21:27 INFO   [wfs.json] - about to encode JSON
20 021 20:21:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 20:21:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 20:21:27 INFO   [wfs.json] - about to encode JSON
20 021 20:21:27 INFO   [wfs.json] - about to encode JSON
20 021 20:21:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 20:21:27 INFO   [wfs.json] - about to encode JSON
20 021 20:21:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 20:21:28 INFO   [wfs.json] - about to encode JSON
20 021 20:21:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 20:21:28 INFO   [wfs.json] - about to encode JSON
20 021 20:21:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 20:21:28 INFO   [wfs.json] - about to encode JSON
20 021 20:21:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 20:21:28 INFO   [wfs.json] - about to encode JSON
20 021 20:21:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 20:21:28 INFO   [wfs.json] - about to encode JSON
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 20:21:45 INFO   [wfs.json] - about to encode JSON
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 20:21:45 INFO   [wfs.json] - about to encode JSON
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 20:21:45 INFO   [wfs.json] - about to encode JSON
20 021 20:21:45 INFO   [wfs.json] - about to encode JSON
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 20:21:45 INFO   [wfs.json] - about to encode JSON
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:45 INFO   [wfs.json] - about to encode JSON
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:45 INFO   [wfs.json] - about to encode JSON
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 20:21:45 INFO   [wfs.json] - about to encode JSON
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 20:21:45 INFO   [wfs.json] - about to encode JSON
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 20:21:45 INFO   [wfs.json] - about to encode JSON
20 021 20:21:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 20:21:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76214.51064787833 : 80413.7698892952, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 20:21:51 INFO   [wfs.json] - about to encode JSON
20 022 20:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 20:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 20:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 20:22:14 INFO   [wfs.json] - about to encode JSON
20 022 20:22:14 INFO   [wfs.json] - about to encode JSON
20 022 20:22:14 INFO   [wfs.json] - about to encode JSON
20 022 20:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 20:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 20:22:14 INFO   [wfs.json] - about to encode JSON
20 022 20:22:14 INFO   [wfs.json] - about to encode JSON
20 022 20:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 20:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 20:22:15 INFO   [wfs.json] - about to encode JSON
20 022 20:22:15 INFO   [wfs.json] - about to encode JSON
20 022 20:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 20:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 20:22:15 INFO   [wfs.json] - about to encode JSON
20 022 20:22:15 INFO   [wfs.json] - about to encode JSON
20 022 20:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 20:22:15 INFO   [wfs.json] - about to encode JSON
20 022 20:22:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 20:22:24 INFO   [wfs.json] - about to encode JSON
20 022 20:22:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 20:22:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 20:22:24 INFO   [wfs.json] - about to encode JSON
20 022 20:22:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 20:22:24 INFO   [wfs.json] - about to encode JSON
20 022 20:22:24 INFO   [wfs.json] - about to encode JSON
20 022 20:22:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 20:22:24 INFO   [wfs.json] - about to encode JSON
20 022 20:22:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 20:22:30 INFO   [wfs.json] - about to encode JSON
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 20:22:31 INFO   [wfs.json] - about to encode JSON
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 20:22:31 INFO   [wfs.json] - about to encode JSON
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:31 INFO   [wfs.json] - about to encode JSON
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 20:22:31 INFO   [wfs.json] - about to encode JSON
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 20:22:31 INFO   [wfs.json] - about to encode JSON
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 20:22:31 INFO   [wfs.json] - about to encode JSON
20 022 20:22:31 INFO   [wfs.json] - about to encode JSON
20 022 20:22:31 INFO   [wfs.json] - about to encode JSON
20 022 20:22:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 20:22:31 INFO   [wfs.json] - about to encode JSON
20 022 20:22:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 20:22:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 20:22:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 20:22:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 20:22:32 INFO   [wfs.json] - about to encode JSON
20 022 20:22:32 INFO   [wfs.json] - about to encode JSON
20 022 20:22:32 INFO   [wfs.json] - about to encode JSON
20 022 20:22:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 20:22:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 20:22:32 INFO   [wfs.json] - about to encode JSON
20 022 20:22:32 INFO   [wfs.json] - about to encode JSON
20 023 20:23:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 20:23:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 20:23:39 INFO   [wfs.json] - about to encode JSON
20 023 20:23:39 INFO   [wfs.json] - about to encode JSON
20 023 20:23:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 20:23:39 INFO   [wfs.json] - about to encode JSON
20 023 20:23:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 20:23:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 20:23:40 INFO   [wfs.json] - about to encode JSON
20 023 20:23:40 INFO   [wfs.json] - about to encode JSON
20 023 20:23:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 20:23:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 20:23:40 INFO   [wfs.json] - about to encode JSON
20 023 20:23:40 INFO   [wfs.json] - about to encode JSON
20 023 20:23:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 20:23:40 INFO   [wfs.json] - about to encode JSON
20 023 20:23:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 20:23:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 20:23:40 INFO   [wfs.json] - about to encode JSON
20 023 20:23:40 INFO   [wfs.json] - about to encode JSON
20 023 20:23:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 20:23:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 20:23:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:46 INFO   [wfs.json] - about to encode JSON
20 023 20:23:46 INFO   [wfs.json] - about to encode JSON
20 023 20:23:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 20:23:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:46 INFO   [wfs.json] - about to encode JSON
20 023 20:23:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 20:23:46 INFO   [wfs.json] - about to encode JSON
20 023 20:23:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 20:23:46 INFO   [wfs.json] - about to encode JSON
20 023 20:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 20:23:47 INFO   [wfs.json] - about to encode JSON
20 023 20:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 20:23:47 INFO   [wfs.json] - about to encode JSON
20 023 20:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 20:23:47 INFO   [wfs.json] - about to encode JSON
20 023 20:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 20:23:47 INFO   [wfs.json] - about to encode JSON
20 023 20:23:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 20:23:47 INFO   [wfs.json] - about to encode JSON
20 023 20:23:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 20:23:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 20:23:54 INFO   [wfs.json] - about to encode JSON
20 023 20:23:54 INFO   [wfs.json] - about to encode JSON
20 023 20:23:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 20:23:54 INFO   [wfs.json] - about to encode JSON
20 023 20:23:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 20:23:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 20:23:54 INFO   [wfs.json] - about to encode JSON
20 023 20:23:54 INFO   [wfs.json] - about to encode JSON
20 023 20:23:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 20:23:55 INFO   [wfs.json] - about to encode JSON
20 023 20:23:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 20:23:55 INFO   [wfs.json] - about to encode JSON
20 023 20:23:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 20:23:55 INFO   [wfs.json] - about to encode JSON
20 023 20:23:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 20:23:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 20:23:55 INFO   [wfs.json] - about to encode JSON
20 023 20:23:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 20:23:55 INFO   [wfs.json] - about to encode JSON
20 025 20:25:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 20:25:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 20:25:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 20:25:09 INFO   [wfs.json] - about to encode JSON
20 025 20:25:09 INFO   [wfs.json] - about to encode JSON
20 025 20:25:09 INFO   [wfs.json] - about to encode JSON
20 025 20:25:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 20:25:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 20:25:09 INFO   [wfs.json] - about to encode JSON
20 025 20:25:09 INFO   [wfs.json] - about to encode JSON
20 025 20:25:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 20:25:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 20:25:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 20:25:10 INFO   [wfs.json] - about to encode JSON
20 025 20:25:10 INFO   [wfs.json] - about to encode JSON
20 025 20:25:10 INFO   [wfs.json] - about to encode JSON
20 025 20:25:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 20:25:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 20:25:10 INFO   [wfs.json] - about to encode JSON
20 025 20:25:10 INFO   [wfs.json] - about to encode JSON
20 025 20:25:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 20:25:41 INFO   [wfs.json] - about to encode JSON
20 025 20:25:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 20:25:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 20:25:41 INFO   [wfs.json] - about to encode JSON
20 025 20:25:41 INFO   [wfs.json] - about to encode JSON
20 025 20:25:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 20:25:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 20:25:41 INFO   [wfs.json] - about to encode JSON
20 025 20:25:41 INFO   [wfs.json] - about to encode JSON
20 025 20:25:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 20:25:42 INFO   [wfs.json] - about to encode JSON
20 025 20:25:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 20:25:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 20:25:42 INFO   [wfs.json] - about to encode JSON
20 025 20:25:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 20:25:42 INFO   [wfs.json] - about to encode JSON
20 025 20:25:42 INFO   [wfs.json] - about to encode JSON
20 025 20:25:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 20:25:42 INFO   [wfs.json] - about to encode JSON
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 20:25:57 INFO   [wfs.json] - about to encode JSON
20 025 20:25:57 INFO   [wfs.json] - about to encode JSON
20 025 20:25:57 INFO   [wfs.json] - about to encode JSON
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 20:25:57 INFO   [wfs.json] - about to encode JSON
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 20:25:57 INFO   [wfs.json] - about to encode JSON
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 025 20:25:57 INFO   [wfs.json] - about to encode JSON
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 025 20:25:57 INFO   [wfs.json] - about to encode JSON
20 025 20:25:57 INFO   [wfs.json] - about to encode JSON
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 025 20:25:57 INFO   [wfs.json] - about to encode JSON
20 025 20:25:57 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 025 20:25:57 INFO   [wfs.json] - about to encode JSON
20 028 20:28:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 20:28:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 20:28:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 028 20:28:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 028 20:28:23 INFO   [wfs.json] - about to encode JSON
20 028 20:28:23 INFO   [wfs.json] - about to encode JSON
20 028 20:28:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 20:28:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 028 20:28:23 INFO   [wfs.json] - about to encode JSON
20 028 20:28:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 20:28:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 20:28:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 028 20:28:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 028 20:28:24 INFO   [wfs.json] - about to encode JSON
20 028 20:28:24 INFO   [wfs.json] - about to encode JSON
20 028 20:28:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 20:28:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 20:28:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 20:28:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 20:28:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 20:28:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 028 20:28:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 028 20:28:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 028 20:28:24 INFO   [wfs.json] - about to encode JSON
20 028 20:28:24 INFO   [wfs.json] - about to encode JSON
20 028 20:28:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 028 20:28:24 INFO   [wfs.json] - about to encode JSON
20 028 20:28:24 INFO   [wfs.json] - about to encode JSON
20 028 20:28:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 028 20:28:24 INFO   [wfs.json] - about to encode JSON
20 029 20:29:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 20:29:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 029 20:29:15 INFO   [wfs.json] - about to encode JSON
20 029 20:29:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 029 20:29:15 INFO   [wfs.json] - about to encode JSON
20 029 20:29:15 INFO   [wfs.json] - about to encode JSON
20 029 20:29:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 029 20:29:15 INFO   [wfs.json] - about to encode JSON
20 029 20:29:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 029 20:29:15 INFO   [wfs.json] - about to encode JSON
20 029 20:29:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 029 20:29:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 029 20:29:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 029 20:29:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 20:29:16 INFO   [wfs.json] - about to encode JSON
20 029 20:29:16 INFO   [wfs.json] - about to encode JSON
20 029 20:29:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 029 20:29:16 INFO   [wfs.json] - about to encode JSON
20 029 20:29:16 INFO   [wfs.json] - about to encode JSON
20 029 20:29:16 INFO   [wfs.json] - about to encode JSON
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 029 20:29:19 INFO   [wfs.json] - about to encode JSON
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 20:29:19 INFO   [wfs.json] - about to encode JSON
20 029 20:29:19 INFO   [wfs.json] - about to encode JSON
20 029 20:29:19 INFO   [wfs.json] - about to encode JSON
20 029 20:29:19 INFO   [wfs.json] - about to encode JSON
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:19 INFO   [wfs.json] - about to encode JSON
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 029 20:29:19 INFO   [wfs.json] - about to encode JSON
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 029 20:29:19 INFO   [wfs.json] - about to encode JSON
20 029 20:29:19 INFO   [wfs.json] - about to encode JSON
20 029 20:29:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 029 20:29:19 INFO   [wfs.json] - about to encode JSON
20 029 20:29:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 029 20:29:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 20:29:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:23 INFO   [wfs.json] - about to encode JSON
20 029 20:29:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:23 INFO   [wfs.json] - about to encode JSON
20 029 20:29:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 029 20:29:23 INFO   [wfs.json] - about to encode JSON
20 029 20:29:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 029 20:29:23 INFO   [wfs.json] - about to encode JSON
20 029 20:29:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 029 20:29:23 INFO   [wfs.json] - about to encode JSON
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 20:29:35 INFO   [wfs.json] - about to encode JSON
20 029 20:29:35 INFO   [wfs.json] - about to encode JSON
20 029 20:29:35 INFO   [wfs.json] - about to encode JSON
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 029 20:29:35 INFO   [wfs.json] - about to encode JSON
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 029 20:29:35 INFO   [wfs.json] - about to encode JSON
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 029 20:29:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 029 20:29:35 INFO   [wfs.json] - about to encode JSON
20 029 20:29:35 INFO   [wfs.json] - about to encode JSON
20 029 20:29:35 INFO   [wfs.json] - about to encode JSON
20 029 20:29:35 INFO   [wfs.json] - about to encode JSON
20 029 20:29:35 INFO   [wfs.json] - about to encode JSON
20 029 20:29:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213340.1535170016 : 217539.41275841842, 6080147.198674932 : 6082464.196094828] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 20:29:45 INFO   [wfs.json] - about to encode JSON
20 029 20:29:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213848.88358992658 : 218048.1428313434, 6080009.776268558 : 6082326.773688453] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 20:29:48 INFO   [wfs.json] - about to encode JSON
20 029 20:29:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 20:29:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.58760957158 : 217444.8468509884, 6080317.217513672 : 6082634.214933568] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 20:29:51 INFO   [wfs.json] - about to encode JSON
20 031 20:31:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 20:31:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 20:31:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 20:31:05 INFO   [wfs.json] - about to encode JSON
20 031 20:31:05 INFO   [wfs.json] - about to encode JSON
20 031 20:31:05 INFO   [wfs.json] - about to encode JSON
20 031 20:31:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 20:31:05 INFO   [wfs.json] - about to encode JSON
20 031 20:31:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 20:31:05 INFO   [wfs.json] - about to encode JSON
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 20:31:07 INFO   [wfs.json] - about to encode JSON
20 031 20:31:07 INFO   [wfs.json] - about to encode JSON
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 20:31:07 INFO   [wfs.json] - about to encode JSON
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 20:31:07 INFO   [wfs.json] - about to encode JSON
20 031 20:31:07 INFO   [wfs.json] - about to encode JSON
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 20:31:07 INFO   [wfs.json] - about to encode JSON
20 031 20:31:07 INFO   [wfs.json] - about to encode JSON
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:07 INFO   [wfs.json] - about to encode JSON
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 20:31:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 20:31:07 INFO   [wfs.json] - about to encode JSON
20 031 20:31:07 INFO   [wfs.json] - about to encode JSON
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 20:31:09 INFO   [wfs.json] - about to encode JSON
20 031 20:31:09 INFO   [wfs.json] - about to encode JSON
20 031 20:31:09 INFO   [wfs.json] - about to encode JSON
20 031 20:31:09 INFO   [wfs.json] - about to encode JSON
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 20:31:09 INFO   [wfs.json] - about to encode JSON
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 20:31:09 INFO   [wfs.json] - about to encode JSON
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 20:31:09 INFO   [wfs.json] - about to encode JSON
20 031 20:31:09 INFO   [wfs.json] - about to encode JSON
20 031 20:31:09 INFO   [wfs.json] - about to encode JSON
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 20:31:09 INFO   [wfs.json] - about to encode JSON
20 031 20:31:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76214.51064787833 : 80413.7698892952, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 20:31:14 INFO   [wfs.json] - about to encode JSON
20 031 20:31:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 20:31:59 INFO   [wfs.json] - about to encode JSON
20 031 20:31:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 20:31:59 INFO   [wfs.json] - about to encode JSON
20 031 20:31:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 20:31:59 INFO   [wfs.json] - about to encode JSON
20 031 20:31:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 20:31:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 20:31:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 20:31:59 INFO   [wfs.json] - about to encode JSON
20 031 20:31:59 INFO   [wfs.json] - about to encode JSON
20 032 20:32:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 20:32:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 20:32:00 INFO   [wfs.json] - about to encode JSON
20 032 20:32:00 INFO   [wfs.json] - about to encode JSON
20 032 20:32:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 20:32:00 INFO   [wfs.json] - about to encode JSON
20 032 20:32:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 20:32:00 INFO   [wfs.json] - about to encode JSON
20 032 20:32:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 20:32:00 INFO   [wfs.json] - about to encode JSON
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:03 INFO   [wfs.json] - about to encode JSON
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 20:32:03 INFO   [wfs.json] - about to encode JSON
20 032 20:32:03 INFO   [wfs.json] - about to encode JSON
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 20:32:03 INFO   [wfs.json] - about to encode JSON
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 20:32:03 INFO   [wfs.json] - about to encode JSON
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 20:32:03 INFO   [wfs.json] - about to encode JSON
20 032 20:32:03 INFO   [wfs.json] - about to encode JSON
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 20:32:03 INFO   [wfs.json] - about to encode JSON
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 20:32:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 20:32:03 INFO   [wfs.json] - about to encode JSON
20 032 20:32:03 INFO   [wfs.json] - about to encode JSON
20 032 20:32:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 20:32:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 20:32:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 20:32:08 INFO   [wfs.json] - about to encode JSON
20 032 20:32:08 INFO   [wfs.json] - about to encode JSON
20 032 20:32:08 INFO   [wfs.json] - about to encode JSON
20 032 20:32:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 20:32:08 INFO   [wfs.json] - about to encode JSON
20 032 20:32:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 20:32:08 INFO   [wfs.json] - about to encode JSON
20 032 20:32:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 20:32:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 20:32:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 20:32:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 20:32:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 20:32:09 INFO   [wfs.json] - about to encode JSON
20 032 20:32:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 20:32:09 INFO   [wfs.json] - about to encode JSON
20 032 20:32:09 INFO   [wfs.json] - about to encode JSON
20 032 20:32:09 INFO   [wfs.json] - about to encode JSON
20 032 20:32:09 INFO   [wfs.json] - about to encode JSON
20 033 20:33:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 033 20:33:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 033 20:33:50 INFO   [wfs.json] - about to encode JSON
20 033 20:33:50 INFO   [wfs.json] - about to encode JSON
20 033 20:33:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 033 20:33:50 INFO   [wfs.json] - about to encode JSON
20 033 20:33:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 033 20:33:50 INFO   [wfs.json] - about to encode JSON
20 033 20:33:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 033 20:33:50 INFO   [wfs.json] - about to encode JSON
20 033 20:33:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 033 20:33:51 INFO   [wfs.json] - about to encode JSON
20 033 20:33:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 033 20:33:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 033 20:33:51 INFO   [wfs.json] - about to encode JSON
20 033 20:33:51 INFO   [wfs.json] - about to encode JSON
20 033 20:33:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 033 20:33:51 INFO   [wfs.json] - about to encode JSON
20 033 20:33:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 033 20:33:51 INFO   [wfs.json] - about to encode JSON
20 033 20:33:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 033 20:33:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 033 20:33:58 INFO   [wfs.json] - about to encode JSON
20 033 20:33:58 INFO   [wfs.json] - about to encode JSON
20 033 20:33:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 033 20:33:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 033 20:33:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 033 20:33:58 INFO   [wfs.json] - about to encode JSON
20 033 20:33:58 INFO   [wfs.json] - about to encode JSON
20 033 20:33:58 INFO   [wfs.json] - about to encode JSON
20 033 20:33:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 033 20:33:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 033 20:33:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 033 20:33:59 INFO   [wfs.json] - about to encode JSON
20 033 20:33:59 INFO   [wfs.json] - about to encode JSON
20 033 20:33:59 INFO   [wfs.json] - about to encode JSON
20 033 20:33:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 033 20:33:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 033 20:33:59 INFO   [wfs.json] - about to encode JSON
20 033 20:33:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 033 20:33:59 INFO   [wfs.json] - about to encode JSON
20 034 20:34:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 20:34:00 INFO   [wfs.json] - about to encode JSON
20 034 20:34:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 20:34:00 INFO   [wfs.json] - about to encode JSON
20 034 20:34:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 20:34:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 20:34:00 INFO   [wfs.json] - about to encode JSON
20 034 20:34:00 INFO   [wfs.json] - about to encode JSON
20 034 20:34:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 20:34:00 INFO   [wfs.json] - about to encode JSON
20 034 20:34:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 20:34:01 INFO   [wfs.json] - about to encode JSON
20 034 20:34:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 20:34:01 INFO   [wfs.json] - about to encode JSON
20 034 20:34:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 20:34:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 20:34:01 INFO   [wfs.json] - about to encode JSON
20 034 20:34:01 INFO   [wfs.json] - about to encode JSON
20 034 20:34:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 20:34:01 INFO   [wfs.json] - about to encode JSON
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 20:34:04 INFO   [wfs.json] - about to encode JSON
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 20:34:04 INFO   [wfs.json] - about to encode JSON
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 20:34:04 INFO   [wfs.json] - about to encode JSON
20 034 20:34:04 INFO   [wfs.json] - about to encode JSON
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 20:34:04 INFO   [wfs.json] - about to encode JSON
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 20:34:04 INFO   [wfs.json] - about to encode JSON
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 20:34:04 INFO   [wfs.json] - about to encode JSON
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 20:34:04 INFO   [wfs.json] - about to encode JSON
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:04 INFO   [wfs.json] - about to encode JSON
20 034 20:34:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 20:34:04 INFO   [wfs.json] - about to encode JSON
20 034 20:34:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 20:34:20 INFO   [wfs.json] - about to encode JSON
20 034 20:34:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 20:34:20 INFO   [wfs.json] - about to encode JSON
20 034 20:34:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 20:34:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:20 INFO   [wfs.json] - about to encode JSON
20 034 20:34:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 20:34:20 INFO   [wfs.json] - about to encode JSON
20 034 20:34:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 20:34:20 INFO   [wfs.json] - about to encode JSON
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 20:34:22 INFO   [wfs.json] - about to encode JSON
20 034 20:34:22 INFO   [wfs.json] - about to encode JSON
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 20:34:22 INFO   [wfs.json] - about to encode JSON
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 20:34:22 INFO   [wfs.json] - about to encode JSON
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 20:34:22 INFO   [wfs.json] - about to encode JSON
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 20:34:22 INFO   [wfs.json] - about to encode JSON
20 034 20:34:22 INFO   [wfs.json] - about to encode JSON
20 034 20:34:22 INFO   [wfs.json] - about to encode JSON
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 20:34:22 INFO   [wfs.json] - about to encode JSON
20 034 20:34:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 20:34:22 INFO   [wfs.json] - about to encode JSON
20 034 20:34:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 20:34:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 20:34:48 INFO   [wfs.json] - about to encode JSON
20 034 20:34:48 INFO   [wfs.json] - about to encode JSON
20 034 20:34:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 20:34:48 INFO   [wfs.json] - about to encode JSON
20 034 20:34:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 20:34:48 INFO   [wfs.json] - about to encode JSON
20 034 20:34:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 20:34:48 INFO   [wfs.json] - about to encode JSON
20 034 20:34:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 20:34:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 20:34:49 INFO   [wfs.json] - about to encode JSON
20 034 20:34:49 INFO   [wfs.json] - about to encode JSON
20 034 20:34:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 20:34:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 20:34:49 INFO   [wfs.json] - about to encode JSON
20 034 20:34:49 INFO   [wfs.json] - about to encode JSON
20 034 20:34:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 20:34:49 INFO   [wfs.json] - about to encode JSON
20 034 20:34:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 20:34:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 20:34:53 INFO   [wfs.json] - about to encode JSON
20 034 20:34:53 INFO   [wfs.json] - about to encode JSON
20 034 20:34:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 20:34:53 INFO   [wfs.json] - about to encode JSON
20 034 20:34:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 20:34:53 INFO   [wfs.json] - about to encode JSON
20 034 20:34:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 20:34:53 INFO   [wfs.json] - about to encode JSON
20 034 20:34:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 20:34:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:54 INFO   [wfs.json] - about to encode JSON
20 034 20:34:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 20:34:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 20:34:54 INFO   [wfs.json] - about to encode JSON
20 034 20:34:54 INFO   [wfs.json] - about to encode JSON
20 034 20:34:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 20:34:54 INFO   [wfs.json] - about to encode JSON
20 034 20:34:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 20:34:54 INFO   [wfs.json] - about to encode JSON
20 034 20:34:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 034 20:34:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 034 20:34:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 034 20:34:56 INFO   [wfs.json] - about to encode JSON
20 034 20:34:56 INFO   [wfs.json] - about to encode JSON
20 034 20:34:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 034 20:34:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 034 20:34:56 INFO   [wfs.json] - about to encode JSON
20 034 20:34:56 INFO   [wfs.json] - about to encode JSON
20 034 20:34:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 034 20:34:56 INFO   [wfs.json] - about to encode JSON
20 035 20:35:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 20:35:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213687.3590087866 : 217886.6182502034, 6079800.950897537 : 6082117.948317433] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 20:35:07 INFO   [wfs.json] - about to encode JSON
20 035 20:35:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 20:35:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213848.88358992658 : 218048.1428313434, 6080009.776268558 : 6082326.773688453] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 20:35:09 INFO   [wfs.json] - about to encode JSON
20 035 20:35:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 20:35:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213848.88358992658 : 218048.1428313434, 6080009.776268558 : 6082326.773688453] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 035 20:35:12 INFO   [wfs.json] - about to encode JSON
20 035 20:35:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 20:35:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 20:35:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213848.88358992658 : 218048.1428313434, 6080009.776268558 : 6082326.773688453] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 035 20:35:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213848.88358992658 : 218048.1428313434, 6080009.776268558 : 6082326.773688453] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 035 20:35:12 INFO   [wfs.json] - about to encode JSON
20 035 20:35:12 INFO   [wfs.json] - about to encode JSON
20 035 20:35:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 20:35:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213240.18861426658 : 217439.4478556834, 6080153.750431907 : 6082470.747851803] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 20:35:18 INFO   [wfs.json] - about to encode JSON
20 035 20:35:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 20:35:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76214.51064787833 : 80413.7698892952, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 20:35:28 INFO   [wfs.json] - about to encode JSON
20 035 20:35:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 20:35:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76232.83476452157 : 80432.09400593844, 5999423.414071863 : 6001740.411491758] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 20:35:41 INFO   [wfs.json] - about to encode JSON
20 035 20:35:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 035 20:35:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76225.37635863657 : 80424.63560005344, 5999488.652201627 : 6001805.649621523] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 035 20:35:56 INFO   [wfs.json] - about to encode JSON
20 036 20:36:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 20:36:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 036 20:36:36 INFO   [wfs.json] - about to encode JSON
20 036 20:36:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 20:36:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 036 20:36:36 INFO   [wfs.json] - about to encode JSON
20 036 20:36:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 20:36:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 20:36:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 036 20:36:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 036 20:36:36 INFO   [wfs.json] - about to encode JSON
20 036 20:36:36 INFO   [wfs.json] - about to encode JSON
20 036 20:36:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 036 20:36:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 036 20:36:36 INFO   [wfs.json] - about to encode JSON
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 037 20:37:26 INFO   [wfs.json] - about to encode JSON
20 037 20:37:26 INFO   [wfs.json] - about to encode JSON
20 037 20:37:26 INFO   [wfs.json] - about to encode JSON
20 037 20:37:26 INFO   [wfs.json] - about to encode JSON
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 037 20:37:26 INFO   [wfs.json] - about to encode JSON
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 20:37:26 INFO   [wfs.json] - about to encode JSON
20 037 20:37:26 INFO   [wfs.json] - about to encode JSON
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 037 20:37:26 INFO   [wfs.json] - about to encode JSON
20 037 20:37:26 INFO   [wfs.json] - about to encode JSON
20 037 20:37:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 037 20:37:26 INFO   [wfs.json] - about to encode JSON
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 20:38:12 INFO   [wfs.json] - about to encode JSON
20 038 20:38:12 INFO   [wfs.json] - about to encode JSON
20 038 20:38:12 INFO   [wfs.json] - about to encode JSON
20 038 20:38:12 INFO   [wfs.json] - about to encode JSON
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 20:38:12 INFO   [wfs.json] - about to encode JSON
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 20:38:12 INFO   [wfs.json] - about to encode JSON
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 20:38:12 INFO   [wfs.json] - about to encode JSON
20 038 20:38:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 20:38:12 INFO   [wfs.json] - about to encode JSON
20 038 20:38:12 INFO   [wfs.json] - about to encode JSON
20 038 20:38:12 INFO   [wfs.json] - about to encode JSON
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 20:38:19 INFO   [wfs.json] - about to encode JSON
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 20:38:19 INFO   [wfs.json] - about to encode JSON
20 038 20:38:19 INFO   [wfs.json] - about to encode JSON
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 20:38:19 INFO   [wfs.json] - about to encode JSON
20 038 20:38:19 INFO   [wfs.json] - about to encode JSON
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 20:38:19 INFO   [wfs.json] - about to encode JSON
20 038 20:38:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 20:38:19 INFO   [wfs.json] - about to encode JSON
20 038 20:38:19 INFO   [wfs.json] - about to encode JSON
20 038 20:38:19 INFO   [wfs.json] - about to encode JSON
20 038 20:38:19 INFO   [wfs.json] - about to encode JSON
20 038 20:38:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 20:38:27 INFO   [wfs.json] - about to encode JSON
20 038 20:38:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 20:38:27 INFO   [wfs.json] - about to encode JSON
20 038 20:38:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 20:38:27 INFO   [wfs.json] - about to encode JSON
20 038 20:38:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 20:38:27 INFO   [wfs.json] - about to encode JSON
20 038 20:38:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 20:38:27 INFO   [wfs.json] - about to encode JSON
20 038 20:38:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 20:38:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 20:38:28 INFO   [wfs.json] - about to encode JSON
20 038 20:38:28 INFO   [wfs.json] - about to encode JSON
20 038 20:38:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 20:38:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 20:38:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 20:38:28 INFO   [wfs.json] - about to encode JSON
20 038 20:38:28 INFO   [wfs.json] - about to encode JSON
20 038 20:38:28 INFO   [wfs.json] - about to encode JSON
20 038 20:38:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 20:38:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 20:38:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 20:38:34 INFO   [wfs.json] - about to encode JSON
20 038 20:38:34 INFO   [wfs.json] - about to encode JSON
20 038 20:38:34 INFO   [wfs.json] - about to encode JSON
20 038 20:38:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 20:38:34 INFO   [wfs.json] - about to encode JSON
20 038 20:38:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 20:38:34 INFO   [wfs.json] - about to encode JSON
20 038 20:38:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 20:38:35 INFO   [wfs.json] - about to encode JSON
20 038 20:38:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 20:38:35 INFO   [wfs.json] - about to encode JSON
20 038 20:38:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 20:38:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 20:38:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 20:38:35 INFO   [wfs.json] - about to encode JSON
20 038 20:38:35 INFO   [wfs.json] - about to encode JSON
20 038 20:38:35 INFO   [wfs.json] - about to encode JSON
20 038 20:38:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76214.51064787833 : 80413.7698892952, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 20:38:41 INFO   [wfs.json] - about to encode JSON
20 038 20:38:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213340.1535170016 : 217539.41275841842, 6080147.198674932 : 6082464.196094828] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 20:38:51 INFO   [wfs.json] - about to encode JSON
20 038 20:38:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 20:38:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212279.5014087216 : 216478.76065013843, 6079745.386885173 : 6082062.384305068] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 20:38:55 INFO   [wfs.json] - about to encode JSON
20 039 20:39:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 20:39:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211694.31675372686 : 216778.69088607287, 6079432.834240213 : 6082238.205632919] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 20:39:39 INFO   [wfs.json] - about to encode JSON
20 040 20:40:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 20:40:14 INFO   [wfs.json] - about to encode JSON
20 040 20:40:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 20:40:14 INFO   [wfs.json] - about to encode JSON
20 040 20:40:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 20:40:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 20:40:14 INFO   [wfs.json] - about to encode JSON
20 040 20:40:14 INFO   [wfs.json] - about to encode JSON
20 040 20:40:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 20:40:14 INFO   [wfs.json] - about to encode JSON
20 040 20:40:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 20:40:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 20:40:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 20:40:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 20:40:15 INFO   [wfs.json] - about to encode JSON
20 040 20:40:15 INFO   [wfs.json] - about to encode JSON
20 040 20:40:15 INFO   [wfs.json] - about to encode JSON
20 040 20:40:15 INFO   [wfs.json] - about to encode JSON
20 040 20:40:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 20:40:15 INFO   [wfs.json] - about to encode JSON
20 040 20:40:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 20:40:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:17 INFO   [wfs.json] - about to encode JSON
20 040 20:40:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 20:40:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 20:40:17 INFO   [wfs.json] - about to encode JSON
20 040 20:40:17 INFO   [wfs.json] - about to encode JSON
20 040 20:40:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 20:40:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 20:40:17 INFO   [wfs.json] - about to encode JSON
20 040 20:40:17 INFO   [wfs.json] - about to encode JSON
20 040 20:40:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 20:40:18 INFO   [wfs.json] - about to encode JSON
20 040 20:40:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 20:40:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:18 INFO   [wfs.json] - about to encode JSON
20 040 20:40:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 20:40:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 20:40:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 20:40:18 INFO   [wfs.json] - about to encode JSON
20 040 20:40:18 INFO   [wfs.json] - about to encode JSON
20 040 20:40:18 INFO   [wfs.json] - about to encode JSON
20 040 20:40:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 20:40:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 20:40:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:20 INFO   [wfs.json] - about to encode JSON
20 040 20:40:20 INFO   [wfs.json] - about to encode JSON
20 040 20:40:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 20:40:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 20:40:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:20 INFO   [wfs.json] - about to encode JSON
20 040 20:40:20 INFO   [wfs.json] - about to encode JSON
20 040 20:40:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 20:40:20 INFO   [wfs.json] - about to encode JSON
20 040 20:40:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 040 20:40:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 040 20:40:21 INFO   [wfs.json] - about to encode JSON
20 040 20:40:21 INFO   [wfs.json] - about to encode JSON
20 040 20:40:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 040 20:40:21 INFO   [wfs.json] - about to encode JSON
20 040 20:40:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 040 20:40:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 040 20:40:21 INFO   [wfs.json] - about to encode JSON
20 040 20:40:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 040 20:40:21 INFO   [wfs.json] - about to encode JSON
20 041 20:41:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 20:41:06 INFO   [wfs.json] - about to encode JSON
20 041 20:41:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 20:41:06 INFO   [wfs.json] - about to encode JSON
20 041 20:41:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 20:41:06 INFO   [wfs.json] - about to encode JSON
20 041 20:41:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 20:41:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 20:41:06 INFO   [wfs.json] - about to encode JSON
20 041 20:41:06 INFO   [wfs.json] - about to encode JSON
20 041 20:41:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:07 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 20:41:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 20:41:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 20:41:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 20:41:07 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 20:41:07 INFO   [wfs.json] - about to encode JSON
20 041 20:41:07 INFO   [wfs.json] - about to encode JSON
20 041 20:41:07 INFO   [wfs.json] - about to encode JSON
20 041 20:41:07 INFO   [wfs.json] - about to encode JSON
20 041 20:41:07 INFO   [wfs.json] - about to encode JSON
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 20:41:20 INFO   [wfs.json] - about to encode JSON
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 20:41:20 INFO   [wfs.json] - about to encode JSON
20 041 20:41:20 INFO   [wfs.json] - about to encode JSON
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 20:41:20 INFO   [wfs.json] - about to encode JSON
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 20:41:20 INFO   [wfs.json] - about to encode JSON
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 20:41:20 INFO   [wfs.json] - about to encode JSON
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 20:41:20 INFO   [wfs.json] - about to encode JSON
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 20:41:20 INFO   [wfs.json] - about to encode JSON
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 20:41:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 20:41:20 INFO   [wfs.json] - about to encode JSON
20 041 20:41:20 INFO   [wfs.json] - about to encode JSON
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 20:41:48 INFO   [wfs.json] - about to encode JSON
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 20:41:48 INFO   [wfs.json] - about to encode JSON
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 20:41:48 INFO   [wfs.json] - about to encode JSON
20 041 20:41:48 INFO   [wfs.json] - about to encode JSON
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 20:41:48 INFO   [wfs.json] - about to encode JSON
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 20:41:48 INFO   [wfs.json] - about to encode JSON
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 20:41:48 INFO   [wfs.json] - about to encode JSON
20 041 20:41:48 INFO   [wfs.json] - about to encode JSON
20 041 20:41:48 INFO   [wfs.json] - about to encode JSON
20 041 20:41:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 20:41:48 INFO   [wfs.json] - about to encode JSON
20 042 20:42:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 20:42:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 20:42:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 20:42:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 20:42:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 042 20:42:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 042 20:42:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 20:42:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 042 20:42:11 INFO   [wfs.json] - about to encode JSON
20 042 20:42:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 042 20:42:11 INFO   [wfs.json] - about to encode JSON
20 042 20:42:11 INFO   [wfs.json] - about to encode JSON
20 042 20:42:11 INFO   [wfs.json] - about to encode JSON
20 042 20:42:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 042 20:42:11 INFO   [wfs.json] - about to encode JSON
20 042 20:42:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 20:42:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 20:42:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 20:42:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 042 20:42:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 042 20:42:12 INFO   [wfs.json] - about to encode JSON
20 042 20:42:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 042 20:42:12 INFO   [wfs.json] - about to encode JSON
20 042 20:42:12 INFO   [wfs.json] - about to encode JSON
20 042 20:42:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 20:42:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 042 20:42:12 INFO   [wfs.json] - about to encode JSON
20 042 20:42:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 20:42:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 042 20:42:12 INFO   [wfs.json] - about to encode JSON
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 20:45:14 INFO   [wfs.json] - about to encode JSON
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 20:45:14 INFO   [wfs.json] - about to encode JSON
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 20:45:14 INFO   [wfs.json] - about to encode JSON
20 045 20:45:14 INFO   [wfs.json] - about to encode JSON
20 045 20:45:14 INFO   [wfs.json] - about to encode JSON
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 20:45:14 INFO   [wfs.json] - about to encode JSON
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 20:45:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 20:45:14 INFO   [wfs.json] - about to encode JSON
20 045 20:45:14 INFO   [wfs.json] - about to encode JSON
20 045 20:45:14 INFO   [wfs.json] - about to encode JSON
20 045 20:45:14 INFO   [wfs.json] - about to encode JSON
20 056 20:56:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 20:56:47 INFO   [wfs.json] - about to encode JSON
20 056 20:56:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 20:56:47 INFO   [wfs.json] - about to encode JSON
20 056 20:56:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 20:56:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 20:56:47 INFO   [wfs.json] - about to encode JSON
20 056 20:56:47 INFO   [wfs.json] - about to encode JSON
20 056 20:56:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 20:56:47 INFO   [wfs.json] - about to encode JSON
20 056 20:56:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 20:56:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 20:56:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 20:56:48 INFO   [wfs.json] - about to encode JSON
20 056 20:56:48 INFO   [wfs.json] - about to encode JSON
20 056 20:56:48 INFO   [wfs.json] - about to encode JSON
20 056 20:56:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 20:56:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 20:56:48 INFO   [wfs.json] - about to encode JSON
20 056 20:56:48 INFO   [wfs.json] - about to encode JSON
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 20:56:52 INFO   [wfs.json] - about to encode JSON
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 20:56:52 INFO   [wfs.json] - about to encode JSON
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 20:56:52 INFO   [wfs.json] - about to encode JSON
20 056 20:56:52 INFO   [wfs.json] - about to encode JSON
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 20:56:52 INFO   [wfs.json] - about to encode JSON
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 20:56:52 INFO   [wfs.json] - about to encode JSON
20 056 20:56:52 INFO   [wfs.json] - about to encode JSON
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 20:56:52 INFO   [wfs.json] - about to encode JSON
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 20:56:52 INFO   [wfs.json] - about to encode JSON
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 20:56:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 20:56:52 INFO   [wfs.json] - about to encode JSON
20 057 20:57:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 20:57:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213687.3590087866 : 217886.6182502034, 6079800.950897537 : 6082117.948317433] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 20:57:29 INFO   [wfs.json] - about to encode JSON
20 057 20:57:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 20:57:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213848.88358992658 : 218048.1428313434, 6080009.776268558 : 6082326.773688453] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 20:57:32 INFO   [wfs.json] - about to encode JSON
20 057 20:57:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 20:57:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213429.8213668366 : 217629.08060825343, 6079965.821144062 : 6082282.818563958] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 20:57:36 INFO   [wfs.json] - about to encode JSON
20 057 20:57:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 20:57:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213032.5221041966 : 217231.78134561342, 6080135.3390561165 : 6082452.336476012] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 20:57:39 INFO   [wfs.json] - about to encode JSON
20 058 20:58:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 20:58:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 20:58:54 INFO   [wfs.json] - about to encode JSON
20 058 20:58:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 20:58:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 20:58:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 20:58:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 20:58:54 INFO   [wfs.json] - about to encode JSON
20 058 20:58:54 INFO   [wfs.json] - about to encode JSON
20 058 20:58:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 20:58:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 20:58:54 INFO   [wfs.json] - about to encode JSON
20 058 20:58:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 20:58:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 20:58:54 INFO   [wfs.json] - about to encode JSON
20 058 20:58:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 20:58:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 20:58:55 INFO   [wfs.json] - about to encode JSON
20 058 20:58:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 20:58:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 20:58:55 INFO   [wfs.json] - about to encode JSON
20 058 20:58:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 20:58:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 20:58:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 20:58:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 20:58:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 20:58:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 20:58:55 INFO   [wfs.json] - about to encode JSON
20 058 20:58:55 INFO   [wfs.json] - about to encode JSON
20 058 20:58:55 INFO   [wfs.json] - about to encode JSON
20 059 20:59:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 20:59:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 059 20:59:32 INFO   [wfs.json] - about to encode JSON
20 059 20:59:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 20:59:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 059 20:59:32 INFO   [wfs.json] - about to encode JSON
20 059 20:59:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 20:59:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 059 20:59:32 INFO   [wfs.json] - about to encode JSON
20 059 20:59:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 20:59:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 20:59:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 059 20:59:32 INFO   [wfs.json] - about to encode JSON
20 059 20:59:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 059 20:59:32 INFO   [wfs.json] - about to encode JSON
20 059 20:59:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 20:59:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 20:59:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 059 20:59:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 20:59:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 20:59:33 INFO   [wfs.json] - about to encode JSON
20 059 20:59:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 20:59:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 059 20:59:33 INFO   [wfs.json] - about to encode JSON
20 059 20:59:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 059 20:59:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 059 20:59:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 059 20:59:33 INFO   [wfs.json] - about to encode JSON
20 059 20:59:33 INFO   [wfs.json] - about to encode JSON
20 059 20:59:33 INFO   [wfs.json] - about to encode JSON
20 002 21:02:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 21:02:08 INFO   [wfs.json] - about to encode JSON
20 002 21:02:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 21:02:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 21:02:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 21:02:08 INFO   [wfs.json] - about to encode JSON
20 002 21:02:08 INFO   [wfs.json] - about to encode JSON
20 002 21:02:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 21:02:08 INFO   [wfs.json] - about to encode JSON
20 002 21:02:08 INFO   [wfs.json] - about to encode JSON
20 002 21:02:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 21:02:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 21:02:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 21:02:09 INFO   [wfs.json] - about to encode JSON
20 002 21:02:09 INFO   [wfs.json] - about to encode JSON
20 002 21:02:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 21:02:09 INFO   [wfs.json] - about to encode JSON
20 002 21:02:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 21:02:09 INFO   [wfs.json] - about to encode JSON
20 002 21:02:09 INFO   [wfs.json] - about to encode JSON
20 002 21:02:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 21:02:20 INFO   [wfs.json] - about to encode JSON
20 002 21:02:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 21:02:20 INFO   [wfs.json] - about to encode JSON
20 002 21:02:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 21:02:20 INFO   [wfs.json] - about to encode JSON
20 002 21:02:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 21:02:20 INFO   [wfs.json] - about to encode JSON
20 002 21:02:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 21:02:20 INFO   [wfs.json] - about to encode JSON
20 002 21:02:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 21:02:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 21:02:21 INFO   [wfs.json] - about to encode JSON
20 002 21:02:21 INFO   [wfs.json] - about to encode JSON
20 002 21:02:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 21:02:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 21:02:21 INFO   [wfs.json] - about to encode JSON
20 002 21:02:21 INFO   [wfs.json] - about to encode JSON
20 002 21:02:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 21:02:21 INFO   [wfs.json] - about to encode JSON
20 002 21:02:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 21:02:26 INFO   [wfs.json] - about to encode JSON
20 002 21:02:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 21:02:26 INFO   [wfs.json] - about to encode JSON
20 002 21:02:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 21:02:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 21:02:26 INFO   [wfs.json] - about to encode JSON
20 002 21:02:26 INFO   [wfs.json] - about to encode JSON
20 002 21:02:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 21:02:26 INFO   [wfs.json] - about to encode JSON
20 002 21:02:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213576.7074349366 : 217775.96667635342, 6080151.179499462 : 6082468.176919358] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 21:02:39 INFO   [wfs.json] - about to encode JSON
20 002 21:02:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213848.88358992658 : 218048.1428313434, 6080009.776268558 : 6082326.773688453] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 21:02:41 INFO   [wfs.json] - about to encode JSON
20 002 21:02:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213687.3590087866 : 217886.6182502034, 6079800.950897537 : 6082117.948317433] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 21:02:44 INFO   [wfs.json] - about to encode JSON
20 002 21:02:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 21:02:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213240.18861426658 : 217439.4478556834, 6080153.750431907 : 6082470.747851803] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 21:02:49 INFO   [wfs.json] - about to encode JSON
20 003 21:03:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 21:03:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213456.0417018916 : 217655.30094330842, 6080246.757247242 : 6082563.754667138] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 21:03:35 INFO   [wfs.json] - about to encode JSON
20 003 21:03:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 21:03:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213046.1587418166 : 217245.4179832334, 6079773.168846512 : 6082090.166266408] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 21:03:39 INFO   [wfs.json] - about to encode JSON
20 003 21:03:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 21:03:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.58760957158 : 217444.8468509884, 6080317.217513672 : 6082634.214933568] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 21:03:47 INFO   [wfs.json] - about to encode JSON
20 003 21:03:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 21:03:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213769.8467514616 : 217969.1059928784, 6080097.437528483 : 6082414.434948378] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 21:03:50 INFO   [wfs.json] - about to encode JSON
20 003 21:03:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 21:03:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211772.10716968658 : 215971.3664111034, 6080237.765164352 : 6082554.762584248] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 21:03:56 INFO   [wfs.json] - about to encode JSON
20 004 21:04:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213698.2126591416 : 217897.47190055842, 6079206.432680192 : 6081523.430100088] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 21:04:08 INFO   [wfs.json] - about to encode JSON
20 004 21:04:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 21:04:17 INFO   [wfs.json] - about to encode JSON
20 004 21:04:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 21:04:17 INFO   [wfs.json] - about to encode JSON
20 004 21:04:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 21:04:17 INFO   [wfs.json] - about to encode JSON
20 004 21:04:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 21:04:17 INFO   [wfs.json] - about to encode JSON
20 004 21:04:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 21:04:17 INFO   [wfs.json] - about to encode JSON
20 004 21:04:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 21:04:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:18 INFO   [wfs.json] - about to encode JSON
20 004 21:04:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 21:04:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 21:04:18 INFO   [wfs.json] - about to encode JSON
20 004 21:04:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:18 INFO   [wfs.json] - about to encode JSON
20 004 21:04:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 21:04:18 INFO   [wfs.json] - about to encode JSON
20 004 21:04:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 21:04:18 INFO   [wfs.json] - about to encode JSON
20 004 21:04:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213544.1464838816 : 217743.40572529842, 6079107.336789393 : 6081424.3342092885] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 21:04:28 INFO   [wfs.json] - about to encode JSON
20 004 21:04:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211516.560263068 : 219582.6952645065, 6078901.5565108005 : 6083352.154321605] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 21:04:32 INFO   [wfs.json] - about to encode JSON
20 004 21:04:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212246.0870107514 : 218444.40835706613, 6079193.569623461 : 6082613.576282121] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 21:04:38 INFO   [wfs.json] - about to encode JSON
20 004 21:04:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[210862.46660605262 : 217060.78795236736, 6079529.18008456 : 6082949.18674322] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 21:04:42 INFO   [wfs.json] - about to encode JSON
20 004 21:04:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 21:04:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 21:04:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 21:04:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 21:04:50 INFO   [wfs.json] - about to encode JSON
20 004 21:04:50 INFO   [wfs.json] - about to encode JSON
20 004 21:04:50 INFO   [wfs.json] - about to encode JSON
20 004 21:04:50 INFO   [wfs.json] - about to encode JSON
20 004 21:04:50 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:50 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 21:04:50 INFO   [wfs.json] - about to encode JSON
20 004 21:04:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 21:04:51 INFO   [wfs.json] - about to encode JSON
20 004 21:04:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 21:04:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 21:04:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 21:04:51 INFO   [wfs.json] - about to encode JSON
20 004 21:04:51 INFO   [wfs.json] - about to encode JSON
20 004 21:04:51 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 21:04:51 INFO   [wfs.json] - about to encode JSON
20 004 21:04:51 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 21:04:51 INFO   [wfs.json] - about to encode JSON
20 005 21:05:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212628.7106513466 : 216827.96989276342, 6079983.486143722 : 6082300.483563618] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 21:05:01 INFO   [wfs.json] - about to encode JSON
20 005 21:05:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212628.7106513466 : 216827.96989276342, 6079983.486143722 : 6082300.483563618] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 21:05:01 INFO   [wfs.json] - about to encode JSON
20 005 21:05:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213416.9083059016 : 217616.16754731842, 6079214.227743032 : 6081531.225162928] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 21:05:04 INFO   [wfs.json] - about to encode JSON
20 005 21:05:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213416.9083059016 : 217616.16754731842, 6079214.227743032 : 6081531.225162928] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 21:05:04 INFO   [wfs.json] - about to encode JSON
20 005 21:05:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213072.9416786183 : 217272.20092003513, 6079806.614712243 : 6082123.612132139] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 21:05:06 INFO   [wfs.json] - about to encode JSON
20 005 21:05:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213072.9416786183 : 217272.20092003513, 6079806.614712243 : 6082123.612132139] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 21:05:06 INFO   [wfs.json] - about to encode JSON
20 005 21:05:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 21:05:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:23 INFO   [wfs.json] - about to encode JSON
20 005 21:05:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 21:05:23 INFO   [wfs.json] - about to encode JSON
20 005 21:05:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 21:05:23 INFO   [wfs.json] - about to encode JSON
20 005 21:05:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 21:05:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 21:05:23 INFO   [wfs.json] - about to encode JSON
20 005 21:05:23 INFO   [wfs.json] - about to encode JSON
20 005 21:05:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 21:05:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 21:05:24 INFO   [wfs.json] - about to encode JSON
20 005 21:05:24 INFO   [wfs.json] - about to encode JSON
20 005 21:05:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 21:05:24 INFO   [wfs.json] - about to encode JSON
20 005 21:05:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 21:05:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 21:05:24 INFO   [wfs.json] - about to encode JSON
20 005 21:05:24 INFO   [wfs.json] - about to encode JSON
20 005 21:05:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 21:05:31 INFO   [wfs.json] - about to encode JSON
20 005 21:05:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 21:05:31 INFO   [wfs.json] - about to encode JSON
20 005 21:05:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 21:05:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 21:05:31 INFO   [wfs.json] - about to encode JSON
20 005 21:05:31 INFO   [wfs.json] - about to encode JSON
20 005 21:05:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 21:05:31 INFO   [wfs.json] - about to encode JSON
20 005 21:05:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 21:05:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 21:05:32 INFO   [wfs.json] - about to encode JSON
20 005 21:05:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 21:05:32 INFO   [wfs.json] - about to encode JSON
20 005 21:05:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 21:05:32 INFO   [wfs.json] - about to encode JSON
20 005 21:05:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 21:05:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 21:05:32 INFO   [wfs.json] - about to encode JSON
20 005 21:05:32 INFO   [wfs.json] - about to encode JSON
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 21:06:06 INFO   [wfs.json] - about to encode JSON
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 21:06:06 INFO   [wfs.json] - about to encode JSON
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 21:06:06 INFO   [wfs.json] - about to encode JSON
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 21:06:06 INFO   [wfs.json] - about to encode JSON
20 006 21:06:06 INFO   [wfs.json] - about to encode JSON
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 21:06:06 INFO   [wfs.json] - about to encode JSON
20 006 21:06:06 INFO   [wfs.json] - about to encode JSON
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 21:06:06 INFO   [wfs.json] - about to encode JSON
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 21:06:06 INFO   [wfs.json] - about to encode JSON
20 006 21:06:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 21:06:06 INFO   [wfs.json] - about to encode JSON
20 008 21:08:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 21:08:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 21:08:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 21:08:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 21:08:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 21:08:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 21:08:47 INFO   [wfs.json] - about to encode JSON
20 008 21:08:47 INFO   [wfs.json] - about to encode JSON
20 008 21:08:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 21:08:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 21:08:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 21:08:47 INFO   [wfs.json] - about to encode JSON
20 008 21:08:47 INFO   [wfs.json] - about to encode JSON
20 008 21:08:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 21:08:47 INFO   [wfs.json] - about to encode JSON
20 008 21:08:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 21:08:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 21:08:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 21:08:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 21:08:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 21:08:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 21:08:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 21:08:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 21:08:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 21:08:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 21:08:48 INFO   [wfs.json] - about to encode JSON
20 008 21:08:48 INFO   [wfs.json] - about to encode JSON
20 008 21:08:48 INFO   [wfs.json] - about to encode JSON
20 008 21:08:48 INFO   [wfs.json] - about to encode JSON
20 008 21:08:48 INFO   [wfs.json] - about to encode JSON
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 21:09:38 INFO   [wfs.json] - about to encode JSON
20 009 21:09:38 INFO   [wfs.json] - about to encode JSON
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 21:09:38 INFO   [wfs.json] - about to encode JSON
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 21:09:38 INFO   [wfs.json] - about to encode JSON
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 21:09:38 INFO   [wfs.json] - about to encode JSON
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 21:09:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 21:09:38 INFO   [wfs.json] - about to encode JSON
20 009 21:09:38 INFO   [wfs.json] - about to encode JSON
20 009 21:09:38 INFO   [wfs.json] - about to encode JSON
20 009 21:09:38 INFO   [wfs.json] - about to encode JSON
20 009 21:09:38 INFO   [wfs.json] - about to encode JSON
20 014 21:14:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 21:14:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 21:14:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 21:14:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 014 21:14:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 014 21:14:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 014 21:14:47 INFO   [wfs.json] - about to encode JSON
20 014 21:14:47 INFO   [wfs.json] - about to encode JSON
20 014 21:14:47 INFO   [wfs.json] - about to encode JSON
20 014 21:14:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 21:14:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 21:14:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 014 21:14:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 014 21:14:47 INFO   [wfs.json] - about to encode JSON
20 014 21:14:47 INFO   [wfs.json] - about to encode JSON
20 014 21:14:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 21:14:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 21:14:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 014 21:14:49 INFO   [wfs.json] - about to encode JSON
20 014 21:14:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 21:14:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 014 21:14:49 INFO   [wfs.json] - about to encode JSON
20 014 21:14:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 21:14:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 014 21:14:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 21:14:49 INFO   [wfs.json] - about to encode JSON
20 014 21:14:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 014 21:14:49 INFO   [wfs.json] - about to encode JSON
20 014 21:14:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 014 21:14:49 INFO   [wfs.json] - about to encode JSON
20 015 21:15:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 21:15:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213694.55172108902 : 217893.81096250584, 6080040.15160465 : 6082357.149024545] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 21:15:23 INFO   [wfs.json] - about to encode JSON
20 015 21:15:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 21:15:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 21:15:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 21:15:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 21:15:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 21:15:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 21:15:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 21:15:24 INFO   [wfs.json] - about to encode JSON
20 015 21:15:24 INFO   [wfs.json] - about to encode JSON
20 015 21:15:24 INFO   [wfs.json] - about to encode JSON
20 015 21:15:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 21:15:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 21:15:24 INFO   [wfs.json] - about to encode JSON
20 015 21:15:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 21:15:24 INFO   [wfs.json] - about to encode JSON
20 016 21:16:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 016 21:16:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 016 21:16:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 016 21:16:18 INFO   [wfs.json] - about to encode JSON
20 016 21:16:18 INFO   [wfs.json] - about to encode JSON
20 016 21:16:18 INFO   [wfs.json] - about to encode JSON
20 016 21:16:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 016 21:16:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 016 21:16:18 INFO   [wfs.json] - about to encode JSON
20 016 21:16:18 INFO   [wfs.json] - about to encode JSON
20 016 21:16:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 016 21:16:19 INFO   [wfs.json] - about to encode JSON
20 016 21:16:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 016 21:16:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 016 21:16:19 INFO   [wfs.json] - about to encode JSON
20 016 21:16:19 INFO   [wfs.json] - about to encode JSON
20 016 21:16:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 016 21:16:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 016 21:16:19 INFO   [wfs.json] - about to encode JSON
20 016 21:16:19 INFO   [wfs.json] - about to encode JSON
20 016 21:16:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 016 21:16:25 INFO   [wfs.json] - about to encode JSON
20 016 21:16:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 016 21:16:25 INFO   [wfs.json] - about to encode JSON
20 016 21:16:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 016 21:16:25 INFO   [wfs.json] - about to encode JSON
20 016 21:16:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 016 21:16:25 INFO   [wfs.json] - about to encode JSON
20 016 21:16:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 016 21:16:25 INFO   [wfs.json] - about to encode JSON
20 016 21:16:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 016 21:16:27 INFO   [wfs.json] - about to encode JSON
20 016 21:16:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 016 21:16:27 INFO   [wfs.json] - about to encode JSON
20 016 21:16:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 016 21:16:27 INFO   [wfs.json] - about to encode JSON
20 016 21:16:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 016 21:16:27 INFO   [wfs.json] - about to encode JSON
20 016 21:16:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 016 21:16:27 INFO   [wfs.json] - about to encode JSON
20 016 21:16:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213202.62223478995 : 217401.88147620676, 6079764.183499915 : 6082081.18091981] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 016 21:16:33 INFO   [wfs.json] - about to encode JSON
20 016 21:16:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213202.62223478995 : 217401.88147620676, 6079764.183499915 : 6082081.18091981] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 016 21:16:33 INFO   [wfs.json] - about to encode JSON
20 016 21:16:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213202.62223478995 : 217401.88147620676, 6079764.183499915 : 6082081.18091981] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 016 21:16:33 INFO   [wfs.json] - about to encode JSON
20 016 21:16:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213202.62223478995 : 217401.88147620676, 6079764.183499915 : 6082081.18091981] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 016 21:16:33 INFO   [wfs.json] - about to encode JSON
20 016 21:16:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 21:16:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213202.62223478995 : 217401.88147620676, 6079764.183499915 : 6082081.18091981] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 016 21:16:33 INFO   [wfs.json] - about to encode JSON
20 017 21:17:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 21:17:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 21:17:47 INFO   [wfs.json] - about to encode JSON
20 017 21:17:47 INFO   [wfs.json] - about to encode JSON
20 017 21:17:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 21:17:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 21:17:47 INFO   [wfs.json] - about to encode JSON
20 017 21:17:47 INFO   [wfs.json] - about to encode JSON
20 017 21:17:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 21:17:47 INFO   [wfs.json] - about to encode JSON
20 017 21:17:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 21:17:48 INFO   [wfs.json] - about to encode JSON
20 017 21:17:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 21:17:48 INFO   [wfs.json] - about to encode JSON
20 017 21:17:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 21:17:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 21:17:48 INFO   [wfs.json] - about to encode JSON
20 017 21:17:48 INFO   [wfs.json] - about to encode JSON
20 017 21:17:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 21:17:48 INFO   [wfs.json] - about to encode JSON
20 017 21:17:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 21:17:58 INFO   [wfs.json] - about to encode JSON
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 21:17:59 INFO   [wfs.json] - about to encode JSON
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 21:17:59 INFO   [wfs.json] - about to encode JSON
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:59 INFO   [wfs.json] - about to encode JSON
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 21:17:59 INFO   [wfs.json] - about to encode JSON
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:59 INFO   [wfs.json] - about to encode JSON
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 21:17:59 INFO   [wfs.json] - about to encode JSON
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 21:17:59 INFO   [wfs.json] - about to encode JSON
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 21:17:59 INFO   [wfs.json] - about to encode JSON
20 017 21:17:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 21:17:59 INFO   [wfs.json] - about to encode JSON
20 018 21:18:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 21:18:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 21:18:59 INFO   [wfs.json] - about to encode JSON
20 018 21:18:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 21:18:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 21:18:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 21:18:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 21:18:59 INFO   [wfs.json] - about to encode JSON
20 018 21:18:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 21:18:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 21:18:59 INFO   [wfs.json] - about to encode JSON
20 018 21:18:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 21:18:59 INFO   [wfs.json] - about to encode JSON
20 018 21:18:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 21:18:59 INFO   [wfs.json] - about to encode JSON
20 019 21:19:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 21:19:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 21:19:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 019 21:19:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 019 21:19:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 21:19:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 21:19:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 21:19:00 INFO   [wfs.json] - about to encode JSON
20 019 21:19:00 INFO   [wfs.json] - about to encode JSON
20 019 21:19:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 019 21:19:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 019 21:19:00 INFO   [wfs.json] - about to encode JSON
20 019 21:19:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 019 21:19:00 INFO   [wfs.json] - about to encode JSON
20 019 21:19:00 INFO   [wfs.json] - about to encode JSON
20 020 21:20:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 21:20:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:34 INFO   [wfs.json] - about to encode JSON
20 020 21:20:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 21:20:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 21:20:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 21:20:34 INFO   [wfs.json] - about to encode JSON
20 020 21:20:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 21:20:34 INFO   [wfs.json] - about to encode JSON
20 020 21:20:34 INFO   [wfs.json] - about to encode JSON
20 020 21:20:34 INFO   [wfs.json] - about to encode JSON
20 020 21:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 21:20:35 INFO   [wfs.json] - about to encode JSON
20 020 21:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 21:20:35 INFO   [wfs.json] - about to encode JSON
20 020 21:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 21:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 21:20:35 INFO   [wfs.json] - about to encode JSON
20 020 21:20:35 INFO   [wfs.json] - about to encode JSON
20 020 21:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 21:20:35 INFO   [wfs.json] - about to encode JSON
20 020 21:20:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 21:20:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 21:20:45 INFO   [wfs.json] - about to encode JSON
20 020 21:20:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:45 INFO   [wfs.json] - about to encode JSON
20 020 21:20:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 21:20:45 INFO   [wfs.json] - about to encode JSON
20 020 21:20:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 21:20:45 INFO   [wfs.json] - about to encode JSON
20 020 21:20:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 21:20:45 INFO   [wfs.json] - about to encode JSON
20 020 21:20:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 21:20:46 INFO   [wfs.json] - about to encode JSON
20 020 21:20:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 21:20:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 21:20:46 INFO   [wfs.json] - about to encode JSON
20 020 21:20:46 INFO   [wfs.json] - about to encode JSON
20 020 21:20:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 21:20:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 21:20:46 INFO   [wfs.json] - about to encode JSON
20 020 21:20:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 21:20:46 INFO   [wfs.json] - about to encode JSON
20 022 21:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 21:22:14 INFO   [wfs.json] - about to encode JSON
20 022 21:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 21:22:14 INFO   [wfs.json] - about to encode JSON
20 022 21:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 21:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 21:22:14 INFO   [wfs.json] - about to encode JSON
20 022 21:22:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:14 INFO   [wfs.json] - about to encode JSON
20 022 21:22:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 21:22:14 INFO   [wfs.json] - about to encode JSON
20 022 21:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 21:22:15 INFO   [wfs.json] - about to encode JSON
20 022 21:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 21:22:15 INFO   [wfs.json] - about to encode JSON
20 022 21:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 21:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 21:22:15 INFO   [wfs.json] - about to encode JSON
20 022 21:22:15 INFO   [wfs.json] - about to encode JSON
20 022 21:22:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 21:22:15 INFO   [wfs.json] - about to encode JSON
20 022 21:22:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 21:22:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 21:22:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 21:22:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 21:22:17 INFO   [wfs.json] - about to encode JSON
20 022 21:22:17 INFO   [wfs.json] - about to encode JSON
20 022 21:22:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 21:22:17 INFO   [wfs.json] - about to encode JSON
20 022 21:22:17 INFO   [wfs.json] - about to encode JSON
20 022 21:22:17 INFO   [wfs.json] - about to encode JSON
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 21:22:38 INFO   [wfs.json] - about to encode JSON
20 022 21:22:38 INFO   [wfs.json] - about to encode JSON
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 21:22:38 INFO   [wfs.json] - about to encode JSON
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 21:22:38 INFO   [wfs.json] - about to encode JSON
20 022 21:22:38 INFO   [wfs.json] - about to encode JSON
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 21:22:38 INFO   [wfs.json] - about to encode JSON
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 21:22:38 INFO   [wfs.json] - about to encode JSON
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 21:22:38 INFO   [wfs.json] - about to encode JSON
20 022 21:22:38 INFO   [wfs.json] - about to encode JSON
20 022 21:22:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 21:22:38 INFO   [wfs.json] - about to encode JSON
20 022 21:22:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 022 21:22:40 INFO   [wfs.json] - about to encode JSON
20 022 21:22:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 022 21:22:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 022 21:22:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 022 21:22:40 INFO   [wfs.json] - about to encode JSON
20 022 21:22:40 INFO   [wfs.json] - about to encode JSON
20 022 21:22:40 INFO   [wfs.json] - about to encode JSON
20 022 21:22:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 022 21:22:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 022 21:22:40 INFO   [wfs.json] - about to encode JSON
20 023 21:23:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 21:23:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 21:23:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 21:23:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 21:23:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 21:23:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 21:23:12 INFO   [wfs.json] - about to encode JSON
20 023 21:23:12 INFO   [wfs.json] - about to encode JSON
20 023 21:23:12 INFO   [wfs.json] - about to encode JSON
20 023 21:23:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 21:23:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 21:23:12 INFO   [wfs.json] - about to encode JSON
20 023 21:23:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 21:23:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 21:23:12 INFO   [wfs.json] - about to encode JSON
20 023 21:23:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 21:23:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 21:23:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 023 21:23:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 023 21:23:14 INFO   [wfs.json] - about to encode JSON
20 023 21:23:14 INFO   [wfs.json] - about to encode JSON
20 023 21:23:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 21:23:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 21:23:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 023 21:23:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 023 21:23:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 023 21:23:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 023 21:23:14 INFO   [wfs.json] - about to encode JSON
20 023 21:23:14 INFO   [wfs.json] - about to encode JSON
20 023 21:23:14 INFO   [wfs.json] - about to encode JSON
20 024 21:24:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 21:24:11 INFO   [wfs.json] - about to encode JSON
20 024 21:24:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 024 21:24:11 INFO   [wfs.json] - about to encode JSON
20 024 21:24:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 024 21:24:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 024 21:24:11 INFO   [wfs.json] - about to encode JSON
20 024 21:24:11 INFO   [wfs.json] - about to encode JSON
20 024 21:24:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 024 21:24:11 INFO   [wfs.json] - about to encode JSON
20 024 21:24:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 21:24:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 024 21:24:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:12 INFO   [wfs.json] - about to encode JSON
20 024 21:24:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:12 INFO   [wfs.json] - about to encode JSON
20 024 21:24:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 024 21:24:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 024 21:24:12 INFO   [wfs.json] - about to encode JSON
20 024 21:24:12 INFO   [wfs.json] - about to encode JSON
20 024 21:24:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 024 21:24:12 INFO   [wfs.json] - about to encode JSON
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 21:24:25 INFO   [wfs.json] - about to encode JSON
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 024 21:24:25 INFO   [wfs.json] - about to encode JSON
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 024 21:24:25 INFO   [wfs.json] - about to encode JSON
20 024 21:24:25 INFO   [wfs.json] - about to encode JSON
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 024 21:24:25 INFO   [wfs.json] - about to encode JSON
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 024 21:24:25 INFO   [wfs.json] - about to encode JSON
20 024 21:24:25 INFO   [wfs.json] - about to encode JSON
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 024 21:24:25 INFO   [wfs.json] - about to encode JSON
20 024 21:24:25 INFO   [wfs.json] - about to encode JSON
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 024 21:24:25 INFO   [wfs.json] - about to encode JSON
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 21:24:55 INFO   [wfs.json] - about to encode JSON
20 024 21:24:55 INFO   [wfs.json] - about to encode JSON
20 024 21:24:55 INFO   [wfs.json] - about to encode JSON
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 024 21:24:55 INFO   [wfs.json] - about to encode JSON
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 024 21:24:55 INFO   [wfs.json] - about to encode JSON
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 024 21:24:55 INFO   [wfs.json] - about to encode JSON
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 024 21:24:55 INFO   [wfs.json] - about to encode JSON
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 024 21:24:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 024 21:24:55 INFO   [wfs.json] - about to encode JSON
20 024 21:24:55 INFO   [wfs.json] - about to encode JSON
20 024 21:24:55 INFO   [wfs.json] - about to encode JSON
20 026 21:26:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 21:26:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 026 21:26:26 INFO   [wfs.json] - about to encode JSON
20 026 21:26:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 21:26:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 21:26:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 21:26:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 026 21:26:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 026 21:26:26 INFO   [wfs.json] - about to encode JSON
20 026 21:26:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 026 21:26:26 INFO   [wfs.json] - about to encode JSON
20 026 21:26:26 INFO   [wfs.json] - about to encode JSON
20 026 21:26:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 21:26:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 026 21:26:26 INFO   [wfs.json] - about to encode JSON
20 026 21:26:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 21:26:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 21:26:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 21:26:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 21:26:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 026 21:26:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 026 21:26:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 026 21:26:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 026 21:26:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 026 21:26:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 026 21:26:27 INFO   [wfs.json] - about to encode JSON
20 026 21:26:27 INFO   [wfs.json] - about to encode JSON
20 026 21:26:27 INFO   [wfs.json] - about to encode JSON
20 026 21:26:27 INFO   [wfs.json] - about to encode JSON
20 026 21:26:27 INFO   [wfs.json] - about to encode JSON
20 030 21:30:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 21:30:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 030 21:30:37 INFO   [wfs.json] - about to encode JSON
20 030 21:30:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 21:30:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 21:30:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 030 21:30:37 INFO   [wfs.json] - about to encode JSON
20 030 21:30:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 21:30:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 030 21:30:37 INFO   [wfs.json] - about to encode JSON
20 030 21:30:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 030 21:30:37 INFO   [wfs.json] - about to encode JSON
20 030 21:30:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 21:30:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 030 21:30:37 INFO   [wfs.json] - about to encode JSON
20 031 21:31:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 21:31:08 INFO   [wfs.json] - about to encode JSON
20 031 21:31:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 21:31:08 INFO   [wfs.json] - about to encode JSON
20 031 21:31:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 21:31:08 INFO   [wfs.json] - about to encode JSON
20 031 21:31:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 21:31:08 INFO   [wfs.json] - about to encode JSON
20 031 21:31:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 21:31:08 INFO   [wfs.json] - about to encode JSON
20 031 21:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 21:31:09 INFO   [wfs.json] - about to encode JSON
20 031 21:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 21:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 21:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 21:31:09 INFO   [wfs.json] - about to encode JSON
20 031 21:31:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 21:31:09 INFO   [wfs.json] - about to encode JSON
20 031 21:31:09 INFO   [wfs.json] - about to encode JSON
20 031 21:31:09 INFO   [wfs.json] - about to encode JSON
20 031 21:31:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 031 21:31:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 031 21:31:13 INFO   [wfs.json] - about to encode JSON
20 031 21:31:13 INFO   [wfs.json] - about to encode JSON
20 031 21:31:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 031 21:31:13 INFO   [wfs.json] - about to encode JSON
20 031 21:31:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 031 21:31:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 031 21:31:13 INFO   [wfs.json] - about to encode JSON
20 031 21:31:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 031 21:31:13 INFO   [wfs.json] - about to encode JSON
20 032 21:32:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 21:32:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 21:32:22 INFO   [wfs.json] - about to encode JSON
20 032 21:32:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 21:32:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 21:32:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 21:32:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 21:32:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 21:32:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 21:32:22 INFO   [wfs.json] - about to encode JSON
20 032 21:32:22 INFO   [wfs.json] - about to encode JSON
20 032 21:32:22 INFO   [wfs.json] - about to encode JSON
20 032 21:32:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 21:32:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 21:32:22 INFO   [wfs.json] - about to encode JSON
20 032 21:32:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 21:32:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 21:32:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 21:32:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 032 21:32:42 INFO   [wfs.json] - about to encode JSON
20 032 21:32:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 032 21:32:42 INFO   [wfs.json] - about to encode JSON
20 032 21:32:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 032 21:32:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 21:32:42 INFO   [wfs.json] - about to encode JSON
20 032 21:32:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 032 21:32:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 032 21:32:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 032 21:32:42 INFO   [wfs.json] - about to encode JSON
20 032 21:32:42 INFO   [wfs.json] - about to encode JSON
20 037 21:37:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 21:37:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 21:37:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 037 21:37:21 INFO   [wfs.json] - about to encode JSON
20 037 21:37:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 037 21:37:21 INFO   [wfs.json] - about to encode JSON
20 037 21:37:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 21:37:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 037 21:37:21 INFO   [wfs.json] - about to encode JSON
20 037 21:37:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 21:37:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 21:37:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 037 21:37:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 037 21:37:21 INFO   [wfs.json] - about to encode JSON
20 037 21:37:21 INFO   [wfs.json] - about to encode JSON
20 037 21:37:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 21:37:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 21:37:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 21:37:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 21:37:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 037 21:37:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 037 21:37:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 037 21:37:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 037 21:37:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 037 21:37:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 037 21:37:22 INFO   [wfs.json] - about to encode JSON
20 037 21:37:22 INFO   [wfs.json] - about to encode JSON
20 037 21:37:22 INFO   [wfs.json] - about to encode JSON
20 037 21:37:22 INFO   [wfs.json] - about to encode JSON
20 037 21:37:22 INFO   [wfs.json] - about to encode JSON
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 21:38:09 INFO   [wfs.json] - about to encode JSON
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 21:38:09 INFO   [wfs.json] - about to encode JSON
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 21:38:09 INFO   [wfs.json] - about to encode JSON
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 21:38:09 INFO   [wfs.json] - about to encode JSON
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 21:38:09 INFO   [wfs.json] - about to encode JSON
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 038 21:38:09 INFO   [wfs.json] - about to encode JSON
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 038 21:38:09 INFO   [wfs.json] - about to encode JSON
20 038 21:38:09 INFO   [wfs.json] - about to encode JSON
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 038 21:38:09 INFO   [wfs.json] - about to encode JSON
20 038 21:38:09 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 038 21:38:09 INFO   [wfs.json] - about to encode JSON
20 039 21:39:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 21:39:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 21:39:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 039 21:39:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 039 21:39:48 INFO   [wfs.json] - about to encode JSON
20 039 21:39:48 INFO   [wfs.json] - about to encode JSON
20 039 21:39:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 21:39:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 21:39:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 039 21:39:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 039 21:39:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 039 21:39:48 INFO   [wfs.json] - about to encode JSON
20 039 21:39:48 INFO   [wfs.json] - about to encode JSON
20 039 21:39:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 039 21:39:48 INFO   [wfs.json] - about to encode JSON
20 041 21:41:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 21:41:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 21:41:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 21:41:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 21:41:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 21:41:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 21:41:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 21:41:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 21:41:38 INFO   [wfs.json] - about to encode JSON
20 041 21:41:38 INFO   [wfs.json] - about to encode JSON
20 041 21:41:38 INFO   [wfs.json] - about to encode JSON
20 041 21:41:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 21:41:38 INFO   [wfs.json] - about to encode JSON
20 041 21:41:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 21:41:38 INFO   [wfs.json] - about to encode JSON
20 041 21:41:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 21:41:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 21:41:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 041 21:41:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 041 21:41:39 INFO   [wfs.json] - about to encode JSON
20 041 21:41:39 INFO   [wfs.json] - about to encode JSON
20 041 21:41:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 21:41:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 21:41:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 041 21:41:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 041 21:41:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 041 21:41:39 INFO   [wfs.json] - about to encode JSON
20 041 21:41:39 INFO   [wfs.json] - about to encode JSON
20 041 21:41:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 041 21:41:39 INFO   [wfs.json] - about to encode JSON
20 043 21:43:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 21:43:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:17 INFO   [wfs.json] - about to encode JSON
20 043 21:43:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 043 21:43:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 043 21:43:17 INFO   [wfs.json] - about to encode JSON
20 043 21:43:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 21:43:17 INFO   [wfs.json] - about to encode JSON
20 043 21:43:17 INFO   [wfs.json] - about to encode JSON
20 043 21:43:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 21:43:17 INFO   [wfs.json] - about to encode JSON
20 043 21:43:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 21:43:18 INFO   [wfs.json] - about to encode JSON
20 043 21:43:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 21:43:18 INFO   [wfs.json] - about to encode JSON
20 043 21:43:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 21:43:18 INFO   [wfs.json] - about to encode JSON
20 043 21:43:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 043 21:43:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 043 21:43:18 INFO   [wfs.json] - about to encode JSON
20 043 21:43:18 INFO   [wfs.json] - about to encode JSON
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 21:43:34 INFO   [wfs.json] - about to encode JSON
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 21:43:34 INFO   [wfs.json] - about to encode JSON
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 21:43:34 INFO   [wfs.json] - about to encode JSON
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 21:43:34 INFO   [wfs.json] - about to encode JSON
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 043 21:43:34 INFO   [wfs.json] - about to encode JSON
20 043 21:43:34 INFO   [wfs.json] - about to encode JSON
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 21:43:34 INFO   [wfs.json] - about to encode JSON
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 043 21:43:34 INFO   [wfs.json] - about to encode JSON
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 043 21:43:34 INFO   [wfs.json] - about to encode JSON
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 21:43:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 043 21:43:34 INFO   [wfs.json] - about to encode JSON
20 044 21:44:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 21:44:26 INFO   [wfs.json] - about to encode JSON
20 044 21:44:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 21:44:26 INFO   [wfs.json] - about to encode JSON
20 044 21:44:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 21:44:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 21:44:26 INFO   [wfs.json] - about to encode JSON
20 044 21:44:26 INFO   [wfs.json] - about to encode JSON
20 044 21:44:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 21:44:26 INFO   [wfs.json] - about to encode JSON
20 044 21:44:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 21:44:27 INFO   [wfs.json] - about to encode JSON
20 044 21:44:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 21:44:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 21:44:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 21:44:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:27 INFO   [wfs.json] - about to encode JSON
20 044 21:44:27 INFO   [wfs.json] - about to encode JSON
20 044 21:44:27 INFO   [wfs.json] - about to encode JSON
20 044 21:44:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 21:44:27 INFO   [wfs.json] - about to encode JSON
20 044 21:44:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 21:44:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 21:44:36 INFO   [wfs.json] - about to encode JSON
20 044 21:44:36 INFO   [wfs.json] - about to encode JSON
20 044 21:44:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 21:44:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 21:44:36 INFO   [wfs.json] - about to encode JSON
20 044 21:44:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 21:44:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 21:44:36 INFO   [wfs.json] - about to encode JSON
20 044 21:44:36 INFO   [wfs.json] - about to encode JSON
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 21:45:45 INFO   [wfs.json] - about to encode JSON
20 045 21:45:45 INFO   [wfs.json] - about to encode JSON
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 21:45:45 INFO   [wfs.json] - about to encode JSON
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 21:45:45 INFO   [wfs.json] - about to encode JSON
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 21:45:45 INFO   [wfs.json] - about to encode JSON
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 045 21:45:45 INFO   [wfs.json] - about to encode JSON
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 045 21:45:45 INFO   [wfs.json] - about to encode JSON
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 045 21:45:45 INFO   [wfs.json] - about to encode JSON
20 045 21:45:45 INFO   [wfs.json] - about to encode JSON
20 045 21:45:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 045 21:45:45 INFO   [wfs.json] - about to encode JSON
20 046 21:46:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 21:46:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 21:46:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 046 21:46:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 046 21:46:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 21:46:37 INFO   [wfs.json] - about to encode JSON
20 046 21:46:37 INFO   [wfs.json] - about to encode JSON
20 046 21:46:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 046 21:46:37 INFO   [wfs.json] - about to encode JSON
20 046 21:46:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 21:46:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 046 21:46:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 21:46:37 INFO   [wfs.json] - about to encode JSON
20 046 21:46:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 046 21:46:37 INFO   [wfs.json] - about to encode JSON
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 048 21:48:41 INFO   [wfs.json] - about to encode JSON
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 048 21:48:41 INFO   [wfs.json] - about to encode JSON
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:41 INFO   [wfs.json] - about to encode JSON
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 048 21:48:41 INFO   [wfs.json] - about to encode JSON
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 048 21:48:41 INFO   [wfs.json] - about to encode JSON
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 048 21:48:41 INFO   [wfs.json] - about to encode JSON
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:41 INFO   [wfs.json] - about to encode JSON
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 048 21:48:41 INFO   [wfs.json] - about to encode JSON
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 048 21:48:41 INFO   [wfs.json] - about to encode JSON
20 048 21:48:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 048 21:48:41 INFO   [wfs.json] - about to encode JSON
20 048 21:48:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 048 21:48:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 048 21:48:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 048 21:48:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 048 21:48:49 INFO   [wfs.json] - about to encode JSON
20 048 21:48:49 INFO   [wfs.json] - about to encode JSON
20 048 21:48:49 INFO   [wfs.json] - about to encode JSON
20 048 21:48:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 048 21:48:49 INFO   [wfs.json] - about to encode JSON
20 048 21:48:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 048 21:48:49 INFO   [wfs.json] - about to encode JSON
20 052 21:52:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 21:52:10 INFO   [wfs.json] - about to encode JSON
20 052 21:52:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 21:52:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 21:52:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 21:52:10 INFO   [wfs.json] - about to encode JSON
20 052 21:52:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 21:52:10 INFO   [wfs.json] - about to encode JSON
20 052 21:52:10 INFO   [wfs.json] - about to encode JSON
20 052 21:52:10 INFO   [wfs.json] - about to encode JSON
20 052 21:52:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 21:52:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:11 INFO   [wfs.json] - about to encode JSON
20 052 21:52:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 21:52:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 21:52:11 INFO   [wfs.json] - about to encode JSON
20 052 21:52:11 INFO   [wfs.json] - about to encode JSON
20 052 21:52:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 21:52:11 INFO   [wfs.json] - about to encode JSON
20 052 21:52:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 21:52:11 INFO   [wfs.json] - about to encode JSON
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 21:52:14 INFO   [wfs.json] - about to encode JSON
20 052 21:52:14 INFO   [wfs.json] - about to encode JSON
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 21:52:14 INFO   [wfs.json] - about to encode JSON
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 21:52:14 INFO   [wfs.json] - about to encode JSON
20 052 21:52:14 INFO   [wfs.json] - about to encode JSON
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 21:52:14 INFO   [wfs.json] - about to encode JSON
20 052 21:52:14 INFO   [wfs.json] - about to encode JSON
20 052 21:52:14 INFO   [wfs.json] - about to encode JSON
20 052 21:52:14 INFO   [wfs.json] - about to encode JSON
20 052 21:52:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 21:52:14 INFO   [wfs.json] - about to encode JSON
20 052 21:52:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 21:52:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 21:52:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 21:52:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 21:52:20 INFO   [wfs.json] - about to encode JSON
20 052 21:52:20 INFO   [wfs.json] - about to encode JSON
20 052 21:52:20 INFO   [wfs.json] - about to encode JSON
20 052 21:52:20 INFO   [wfs.json] - about to encode JSON
20 052 21:52:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 21:52:20 INFO   [wfs.json] - about to encode JSON
20 052 21:52:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 21:52:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 21:52:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 21:52:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:43 INFO   [wfs.json] - about to encode JSON
20 052 21:52:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 21:52:43 INFO   [wfs.json] - about to encode JSON
20 052 21:52:43 INFO   [wfs.json] - about to encode JSON
20 052 21:52:43 INFO   [wfs.json] - about to encode JSON
20 052 21:52:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 21:52:43 INFO   [wfs.json] - about to encode JSON
20 052 21:52:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 052 21:52:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 052 21:52:44 INFO   [wfs.json] - about to encode JSON
20 052 21:52:44 INFO   [wfs.json] - about to encode JSON
20 052 21:52:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 052 21:52:44 INFO   [wfs.json] - about to encode JSON
20 052 21:52:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 052 21:52:44 INFO   [wfs.json] - about to encode JSON
20 052 21:52:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 052 21:52:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 052 21:52:44 INFO   [wfs.json] - about to encode JSON
20 053 21:53:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 21:53:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 21:53:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 21:53:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 21:53:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 21:53:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 053 21:53:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 053 21:53:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 053 21:53:03 INFO   [wfs.json] - about to encode JSON
20 053 21:53:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 053 21:53:03 INFO   [wfs.json] - about to encode JSON
20 053 21:53:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 053 21:53:03 INFO   [wfs.json] - about to encode JSON
20 053 21:53:03 INFO   [wfs.json] - about to encode JSON
20 053 21:53:03 INFO   [wfs.json] - about to encode JSON
20 053 21:53:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 21:53:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 053 21:53:31 INFO   [wfs.json] - about to encode JSON
20 053 21:53:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 21:53:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 21:53:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 21:53:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 053 21:53:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 053 21:53:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 053 21:53:31 INFO   [wfs.json] - about to encode JSON
20 053 21:53:31 INFO   [wfs.json] - about to encode JSON
20 053 21:53:31 INFO   [wfs.json] - about to encode JSON
20 053 21:53:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 21:53:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 053 21:53:31 INFO   [wfs.json] - about to encode JSON
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 21:55:08 INFO   [wfs.json] - about to encode JSON
20 055 21:55:08 INFO   [wfs.json] - about to encode JSON
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 21:55:08 INFO   [wfs.json] - about to encode JSON
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 21:55:08 INFO   [wfs.json] - about to encode JSON
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 21:55:08 INFO   [wfs.json] - about to encode JSON
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 21:55:08 INFO   [wfs.json] - about to encode JSON
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 21:55:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 21:55:08 INFO   [wfs.json] - about to encode JSON
20 055 21:55:08 INFO   [wfs.json] - about to encode JSON
20 055 21:55:08 INFO   [wfs.json] - about to encode JSON
20 055 21:55:08 INFO   [wfs.json] - about to encode JSON
20 055 21:55:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 21:55:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 21:55:10 INFO   [wfs.json] - about to encode JSON
20 055 21:55:10 INFO   [wfs.json] - about to encode JSON
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 21:55:11 INFO   [wfs.json] - about to encode JSON
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 21:55:11 INFO   [wfs.json] - about to encode JSON
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 21:55:11 INFO   [wfs.json] - about to encode JSON
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 21:55:11 INFO   [wfs.json] - about to encode JSON
20 055 21:55:11 INFO   [wfs.json] - about to encode JSON
20 055 21:55:11 INFO   [wfs.json] - about to encode JSON
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 21:55:11 INFO   [wfs.json] - about to encode JSON
20 055 21:55:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 21:55:11 INFO   [wfs.json] - about to encode JSON
20 055 21:55:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 21:55:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 21:55:16 INFO   [wfs.json] - about to encode JSON
20 055 21:55:16 INFO   [wfs.json] - about to encode JSON
20 055 21:55:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 21:55:16 INFO   [wfs.json] - about to encode JSON
20 055 21:55:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 21:55:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:16 INFO   [wfs.json] - about to encode JSON
20 055 21:55:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 21:55:16 INFO   [wfs.json] - about to encode JSON
20 055 21:55:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 21:55:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 21:55:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 21:55:18 INFO   [wfs.json] - about to encode JSON
20 055 21:55:18 INFO   [wfs.json] - about to encode JSON
20 055 21:55:18 INFO   [wfs.json] - about to encode JSON
20 055 21:55:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 21:55:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 21:55:18 INFO   [wfs.json] - about to encode JSON
20 055 21:55:18 INFO   [wfs.json] - about to encode JSON
20 055 21:55:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 21:55:19 INFO   [wfs.json] - about to encode JSON
20 055 21:55:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 21:55:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 21:55:19 INFO   [wfs.json] - about to encode JSON
20 055 21:55:19 INFO   [wfs.json] - about to encode JSON
20 055 21:55:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:19 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 21:55:19 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 21:55:19 INFO   [wfs.json] - about to encode JSON
20 055 21:55:19 INFO   [wfs.json] - about to encode JSON
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 21:55:27 INFO   [wfs.json] - about to encode JSON
20 055 21:55:27 INFO   [wfs.json] - about to encode JSON
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 21:55:27 INFO   [wfs.json] - about to encode JSON
20 055 21:55:27 INFO   [wfs.json] - about to encode JSON
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 21:55:27 INFO   [wfs.json] - about to encode JSON
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 055 21:55:27 INFO   [wfs.json] - about to encode JSON
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:27 INFO   [wfs.json] - about to encode JSON
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 055 21:55:27 INFO   [wfs.json] - about to encode JSON
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 055 21:55:27 INFO   [wfs.json] - about to encode JSON
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 055 21:55:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 055 21:55:27 INFO   [wfs.json] - about to encode JSON
20 056 21:56:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 21:56:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:11 INFO   [wfs.json] - about to encode JSON
20 056 21:56:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 21:56:11 INFO   [wfs.json] - about to encode JSON
20 056 21:56:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 21:56:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 21:56:11 INFO   [wfs.json] - about to encode JSON
20 056 21:56:11 INFO   [wfs.json] - about to encode JSON
20 056 21:56:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 21:56:11 INFO   [wfs.json] - about to encode JSON
20 056 21:56:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 21:56:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 21:56:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:12 INFO   [wfs.json] - about to encode JSON
20 056 21:56:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 21:56:12 INFO   [wfs.json] - about to encode JSON
20 056 21:56:12 INFO   [wfs.json] - about to encode JSON
20 056 21:56:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 21:56:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 21:56:12 INFO   [wfs.json] - about to encode JSON
20 056 21:56:12 INFO   [wfs.json] - about to encode JSON
20 056 21:56:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 21:56:25 INFO   [wfs.json] - about to encode JSON
20 056 21:56:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 21:56:25 INFO   [wfs.json] - about to encode JSON
20 056 21:56:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 21:56:25 INFO   [wfs.json] - about to encode JSON
20 056 21:56:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 21:56:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 21:56:25 INFO   [wfs.json] - about to encode JSON
20 056 21:56:25 INFO   [wfs.json] - about to encode JSON
20 056 21:56:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 21:56:26 INFO   [wfs.json] - about to encode JSON
20 056 21:56:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 21:56:26 INFO   [wfs.json] - about to encode JSON
20 056 21:56:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 21:56:26 INFO   [wfs.json] - about to encode JSON
20 056 21:56:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 21:56:26 INFO   [wfs.json] - about to encode JSON
20 056 21:56:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 21:56:26 INFO   [wfs.json] - about to encode JSON
20 056 21:56:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 056 21:56:28 INFO   [wfs.json] - about to encode JSON
20 056 21:56:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 056 21:56:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 056 21:56:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:28 INFO   [wfs.json] - about to encode JSON
20 056 21:56:28 INFO   [wfs.json] - about to encode JSON
20 056 21:56:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 056 21:56:28 INFO   [wfs.json] - about to encode JSON
20 056 21:56:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 056 21:56:28 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 056 21:56:28 INFO   [wfs.json] - about to encode JSON
20 057 21:57:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 21:57:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 21:57:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 057 21:57:05 INFO   [wfs.json] - about to encode JSON
20 057 21:57:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 21:57:05 INFO   [wfs.json] - about to encode JSON
20 057 21:57:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 21:57:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 21:57:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 21:57:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 057 21:57:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 057 21:57:05 INFO   [wfs.json] - about to encode JSON
20 057 21:57:05 INFO   [wfs.json] - about to encode JSON
20 057 21:57:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 057 21:57:05 INFO   [wfs.json] - about to encode JSON
20 057 21:57:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 21:57:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 21:57:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 057 21:57:06 INFO   [wfs.json] - about to encode JSON
20 057 21:57:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 057 21:57:06 INFO   [wfs.json] - about to encode JSON
20 057 21:57:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 21:57:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 21:57:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 057 21:57:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 057 21:57:06 INFO   [wfs.json] - about to encode JSON
20 057 21:57:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 057 21:57:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 057 21:57:06 INFO   [wfs.json] - about to encode JSON
20 057 21:57:06 INFO   [wfs.json] - about to encode JSON
20 058 21:58:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 21:58:20 INFO   [wfs.json] - about to encode JSON
20 058 21:58:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 21:58:20 INFO   [wfs.json] - about to encode JSON
20 058 21:58:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 21:58:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 21:58:20 INFO   [wfs.json] - about to encode JSON
20 058 21:58:20 INFO   [wfs.json] - about to encode JSON
20 058 21:58:20 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:20 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 21:58:20 INFO   [wfs.json] - about to encode JSON
20 058 21:58:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 21:58:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 21:58:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 21:58:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 21:58:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 21:58:21 INFO   [wfs.json] - about to encode JSON
20 058 21:58:21 INFO   [wfs.json] - about to encode JSON
20 058 21:58:21 INFO   [wfs.json] - about to encode JSON
20 058 21:58:21 INFO   [wfs.json] - about to encode JSON
20 058 21:58:21 INFO   [wfs.json] - about to encode JSON
20 058 21:58:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 21:58:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 21:58:32 INFO   [wfs.json] - about to encode JSON
20 058 21:58:32 INFO   [wfs.json] - about to encode JSON
20 058 21:58:32 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:32 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 21:58:32 INFO   [wfs.json] - about to encode JSON
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 21:58:33 INFO   [wfs.json] - about to encode JSON
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 21:58:33 INFO   [wfs.json] - about to encode JSON
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 21:58:33 INFO   [wfs.json] - about to encode JSON
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 058 21:58:33 INFO   [wfs.json] - about to encode JSON
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:33 INFO   [wfs.json] - about to encode JSON
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 21:58:33 INFO   [wfs.json] - about to encode JSON
20 058 21:58:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 058 21:58:33 INFO   [wfs.json] - about to encode JSON
20 058 21:58:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213547.9313465666 : 217747.1905879834, 6080047.511198242 : 6082364.508618138] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 21:58:44 INFO   [wfs.json] - about to encode JSON
20 058 21:58:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213547.9313465666 : 217747.1905879834, 6080047.511198242 : 6082364.508618138] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 21:58:44 INFO   [wfs.json] - about to encode JSON
20 058 21:58:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213848.88358992658 : 218048.1428313434, 6080009.776268558 : 6082326.773688453] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 21:58:46 INFO   [wfs.json] - about to encode JSON
20 058 21:58:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213848.88358992658 : 218048.1428313434, 6080009.776268558 : 6082326.773688453] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 21:58:46 INFO   [wfs.json] - about to encode JSON
20 058 21:58:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213687.3590087866 : 217886.6182502034, 6079800.950897537 : 6082117.948317433] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 058 21:58:48 INFO   [wfs.json] - about to encode JSON
20 058 21:58:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 058 21:58:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213687.3590087866 : 217886.6182502034, 6079800.950897537 : 6082117.948317433] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 058 21:58:48 INFO   [wfs.json] - about to encode JSON
20 059 21:59:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 21:59:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 059 21:59:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76214.51064787833 : 80413.7698892952, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 059 21:59:35 INFO   [wfs.json] - about to encode JSON
20 059 21:59:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76214.51064787833 : 80413.7698892952, 5999241.509989028 : 6001558.5074089235] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 059 21:59:35 INFO   [wfs.json] - about to encode JSON
20 000 22:00:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 22:00:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 000 22:00:48 INFO   [wfs.json] - about to encode JSON
20 000 22:00:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 22:00:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 000 22:00:48 INFO   [wfs.json] - about to encode JSON
20 000 22:00:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 22:00:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 000 22:00:48 INFO   [wfs.json] - about to encode JSON
20 000 22:00:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 22:00:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 000 22:00:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 000 22:00:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 000 22:00:49 INFO   [wfs.json] - about to encode JSON
20 000 22:00:49 INFO   [wfs.json] - about to encode JSON
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 22:02:18 INFO   [wfs.json] - about to encode JSON
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 22:02:18 INFO   [wfs.json] - about to encode JSON
20 002 22:02:18 INFO   [wfs.json] - about to encode JSON
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 22:02:18 INFO   [wfs.json] - about to encode JSON
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 22:02:18 INFO   [wfs.json] - about to encode JSON
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:18 INFO   [wfs.json] - about to encode JSON
20 002 22:02:18 INFO   [wfs.json] - about to encode JSON
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 22:02:18 INFO   [wfs.json] - about to encode JSON
20 002 22:02:18 INFO   [wfs.json] - about to encode JSON
20 002 22:02:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 22:02:18 INFO   [wfs.json] - about to encode JSON
20 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 22:02:30 INFO   [wfs.json] - about to encode JSON
20 002 22:02:30 INFO   [wfs.json] - about to encode JSON
20 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 22:02:30 INFO   [wfs.json] - about to encode JSON
20 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 22:02:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 22:02:30 INFO   [wfs.json] - about to encode JSON
20 002 22:02:30 INFO   [wfs.json] - about to encode JSON
20 002 22:02:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:31 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 22:02:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 22:02:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 22:02:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 22:02:31 INFO   [wfs.json] - about to encode JSON
20 002 22:02:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 22:02:31 INFO   [wfs.json] - about to encode JSON
20 002 22:02:31 INFO   [wfs.json] - about to encode JSON
20 002 22:02:31 INFO   [wfs.json] - about to encode JSON
20 002 22:02:31 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 22:02:31 INFO   [wfs.json] - about to encode JSON
20 003 22:03:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 22:03:05 INFO   [wfs.json] - about to encode JSON
20 003 22:03:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 22:03:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:05 INFO   [wfs.json] - about to encode JSON
20 003 22:03:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 22:03:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 22:03:05 INFO   [wfs.json] - about to encode JSON
20 003 22:03:05 INFO   [wfs.json] - about to encode JSON
20 003 22:03:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 22:03:05 INFO   [wfs.json] - about to encode JSON
20 003 22:03:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 22:03:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 22:03:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 22:03:06 INFO   [wfs.json] - about to encode JSON
20 003 22:03:06 INFO   [wfs.json] - about to encode JSON
20 003 22:03:06 INFO   [wfs.json] - about to encode JSON
20 003 22:03:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 22:03:06 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:06 INFO   [wfs.json] - about to encode JSON
20 003 22:03:06 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 22:03:06 INFO   [wfs.json] - about to encode JSON
20 003 22:03:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 22:03:11 INFO   [wfs.json] - about to encode JSON
20 003 22:03:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 22:03:11 INFO   [wfs.json] - about to encode JSON
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 22:03:12 INFO   [wfs.json] - about to encode JSON
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 22:03:12 INFO   [wfs.json] - about to encode JSON
20 003 22:03:12 INFO   [wfs.json] - about to encode JSON
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 22:03:12 INFO   [wfs.json] - about to encode JSON
20 003 22:03:12 INFO   [wfs.json] - about to encode JSON
20 003 22:03:12 INFO   [wfs.json] - about to encode JSON
20 003 22:03:12 INFO   [wfs.json] - about to encode JSON
20 003 22:03:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 22:03:12 INFO   [wfs.json] - about to encode JSON
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 22:03:26 INFO   [wfs.json] - about to encode JSON
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 22:03:26 INFO   [wfs.json] - about to encode JSON
20 003 22:03:26 INFO   [wfs.json] - about to encode JSON
20 003 22:03:26 INFO   [wfs.json] - about to encode JSON
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 22:03:26 INFO   [wfs.json] - about to encode JSON
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:26 INFO   [wfs.json] - about to encode JSON
20 003 22:03:26 INFO   [wfs.json] - about to encode JSON
20 003 22:03:26 INFO   [wfs.json] - about to encode JSON
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 22:03:26 INFO   [wfs.json] - about to encode JSON
20 003 22:03:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 22:03:26 INFO   [wfs.json] - about to encode JSON
20 004 22:04:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 22:04:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 22:04:00 INFO   [wfs.json] - about to encode JSON
20 004 22:04:00 INFO   [wfs.json] - about to encode JSON
20 004 22:04:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 22:04:00 INFO   [wfs.json] - about to encode JSON
20 004 22:04:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 22:04:00 INFO   [wfs.json] - about to encode JSON
20 004 22:04:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 22:04:00 INFO   [wfs.json] - about to encode JSON
20 004 22:04:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 22:04:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 22:04:01 INFO   [wfs.json] - about to encode JSON
20 004 22:04:01 INFO   [wfs.json] - about to encode JSON
20 004 22:04:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 22:04:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:01 INFO   [wfs.json] - about to encode JSON
20 004 22:04:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 22:04:01 INFO   [wfs.json] - about to encode JSON
20 004 22:04:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 22:04:01 INFO   [wfs.json] - about to encode JSON
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 22:04:55 INFO   [wfs.json] - about to encode JSON
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 22:04:55 INFO   [wfs.json] - about to encode JSON
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 22:04:55 INFO   [wfs.json] - about to encode JSON
20 004 22:04:55 INFO   [wfs.json] - about to encode JSON
20 004 22:04:55 INFO   [wfs.json] - about to encode JSON
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 22:04:55 INFO   [wfs.json] - about to encode JSON
20 004 22:04:55 INFO   [wfs.json] - about to encode JSON
20 004 22:04:55 INFO   [wfs.json] - about to encode JSON
20 004 22:04:55 INFO   [wfs.json] - about to encode JSON
20 004 22:04:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 22:04:55 INFO   [wfs.json] - about to encode JSON
20 005 22:05:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 22:05:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 22:05:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 22:05:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 22:05:14 INFO   [wfs.json] - about to encode JSON
20 005 22:05:14 INFO   [wfs.json] - about to encode JSON
20 005 22:05:14 INFO   [wfs.json] - about to encode JSON
20 005 22:05:14 INFO   [wfs.json] - about to encode JSON
20 005 22:05:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 22:05:14 INFO   [wfs.json] - about to encode JSON
20 005 22:05:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 22:05:17 INFO   [wfs.json] - about to encode JSON
20 005 22:05:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 22:05:17 INFO   [wfs.json] - about to encode JSON
20 005 22:05:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 22:05:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 22:05:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:17 INFO   [wfs.json] - about to encode JSON
20 005 22:05:17 INFO   [wfs.json] - about to encode JSON
20 005 22:05:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 22:05:17 INFO   [wfs.json] - about to encode JSON
20 005 22:05:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213332.52352052543 : 217878.1567977299, 6080108.273470242 : 6082261.234543918] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 22:05:39 INFO   [wfs.json] - about to encode JSON
20 005 22:05:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213332.52352052543 : 217878.1567977299, 6080108.273470242 : 6082261.234543918] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 22:05:39 INFO   [wfs.json] - about to encode JSON
20 005 22:05:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213332.52352052543 : 217878.1567977299, 6080108.273470242 : 6082261.234543918] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 22:05:39 INFO   [wfs.json] - about to encode JSON
20 005 22:05:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:39 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213332.52352052543 : 217878.1567977299, 6080108.273470242 : 6082261.234543918] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 22:05:39 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213332.52352052543 : 217878.1567977299, 6080108.273470242 : 6082261.234543918] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 22:05:39 INFO   [wfs.json] - about to encode JSON
20 005 22:05:39 INFO   [wfs.json] - about to encode JSON
20 005 22:05:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211452.56678918158 : 220543.83334359046, 6079608.8752830485 : 6083914.797430401] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 22:05:41 INFO   [wfs.json] - about to encode JSON
20 005 22:05:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211452.56678918158 : 220543.83334359046, 6079608.8752830485 : 6083914.797430401] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 22:05:41 INFO   [wfs.json] - about to encode JSON
20 005 22:05:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211452.56678918158 : 220543.83334359046, 6079608.8752830485 : 6083914.797430401] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 22:05:41 INFO   [wfs.json] - about to encode JSON
20 005 22:05:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211452.56678918158 : 220543.83334359046, 6079608.8752830485 : 6083914.797430401] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 22:05:41 INFO   [wfs.json] - about to encode JSON
20 005 22:05:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211452.56678918158 : 220543.83334359046, 6079608.8752830485 : 6083914.797430401] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 22:05:41 INFO   [wfs.json] - about to encode JSON
20 005 22:05:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[210799.61440670432 : 219890.8809611132, 6078750.611879115 : 6083056.534026467] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 22:05:47 INFO   [wfs.json] - about to encode JSON
20 005 22:05:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[210799.61440670432 : 219890.8809611132, 6078750.611879115 : 6083056.534026467] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 22:05:47 INFO   [wfs.json] - about to encode JSON
20 005 22:05:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[210799.61440670432 : 219890.8809611132, 6078750.611879115 : 6083056.534026467] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 22:05:47 INFO   [wfs.json] - about to encode JSON
20 005 22:05:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 22:05:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[210799.61440670432 : 219890.8809611132, 6078750.611879115 : 6083056.534026467] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 22:05:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[210799.61440670432 : 219890.8809611132, 6078750.611879115 : 6083056.534026467] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 22:05:47 INFO   [wfs.json] - about to encode JSON
20 005 22:05:47 INFO   [wfs.json] - about to encode JSON
20 006 22:06:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 22:06:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 22:06:14 INFO   [wfs.json] - about to encode JSON
20 006 22:06:14 INFO   [wfs.json] - about to encode JSON
20 006 22:06:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 22:06:14 INFO   [wfs.json] - about to encode JSON
20 006 22:06:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 22:06:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 22:06:14 INFO   [wfs.json] - about to encode JSON
20 006 22:06:14 INFO   [wfs.json] - about to encode JSON
20 006 22:06:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 22:06:15 INFO   [wfs.json] - about to encode JSON
20 006 22:06:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 22:06:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 22:06:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 22:06:15 INFO   [wfs.json] - about to encode JSON
20 006 22:06:15 INFO   [wfs.json] - about to encode JSON
20 006 22:06:15 INFO   [wfs.json] - about to encode JSON
20 006 22:06:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 22:06:15 INFO   [wfs.json] - about to encode JSON
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:16 INFO   [wfs.json] - about to encode JSON
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 22:06:16 INFO   [wfs.json] - about to encode JSON
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 22:06:16 INFO   [wfs.json] - about to encode JSON
20 006 22:06:16 INFO   [wfs.json] - about to encode JSON
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 22:06:16 INFO   [wfs.json] - about to encode JSON
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 22:06:16 INFO   [wfs.json] - about to encode JSON
20 006 22:06:16 INFO   [wfs.json] - about to encode JSON
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 22:06:16 INFO   [wfs.json] - about to encode JSON
20 006 22:06:16 INFO   [wfs.json] - about to encode JSON
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 22:06:16 INFO   [wfs.json] - about to encode JSON
20 006 22:06:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 22:06:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 22:06:23 INFO   [wfs.json] - about to encode JSON
20 006 22:06:23 INFO   [wfs.json] - about to encode JSON
20 006 22:06:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 22:06:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 22:06:23 INFO   [wfs.json] - about to encode JSON
20 006 22:06:23 INFO   [wfs.json] - about to encode JSON
20 006 22:06:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 22:06:23 INFO   [wfs.json] - about to encode JSON
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:24 INFO   [wfs.json] - about to encode JSON
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 22:06:24 INFO   [wfs.json] - about to encode JSON
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 22:06:24 INFO   [wfs.json] - about to encode JSON
20 006 22:06:24 INFO   [wfs.json] - about to encode JSON
20 006 22:06:24 INFO   [wfs.json] - about to encode JSON
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 22:06:24 INFO   [wfs.json] - about to encode JSON
20 006 22:06:24 INFO   [wfs.json] - about to encode JSON
20 006 22:06:24 INFO   [wfs.json] - about to encode JSON
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 22:06:24 INFO   [wfs.json] - about to encode JSON
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 22:06:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 22:06:24 INFO   [wfs.json] - about to encode JSON
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 22:07:16 INFO   [wfs.json] - about to encode JSON
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 22:07:16 INFO   [wfs.json] - about to encode JSON
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 22:07:16 INFO   [wfs.json] - about to encode JSON
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 22:07:16 INFO   [wfs.json] - about to encode JSON
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 22:07:16 INFO   [wfs.json] - about to encode JSON
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 22:07:16 INFO   [wfs.json] - about to encode JSON
20 007 22:07:16 INFO   [wfs.json] - about to encode JSON
20 007 22:07:16 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079745.074242843 : 6082062.071662739] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 22:07:16 INFO   [wfs.json] - about to encode JSON
20 007 22:07:16 INFO   [wfs.json] - about to encode JSON
20 007 22:07:16 INFO   [wfs.json] - about to encode JSON
20 007 22:07:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212820.93466327924 : 218285.6064759864, 6079502.500843227 : 6082517.706564687] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 22:07:21 INFO   [wfs.json] - about to encode JSON
20 007 22:07:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212820.93466327924 : 218285.6064759864, 6079502.500843227 : 6082517.706564687] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 22:07:21 INFO   [wfs.json] - about to encode JSON
20 007 22:07:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212820.93466327924 : 218285.6064759864, 6079502.500843227 : 6082517.706564687] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 22:07:21 INFO   [wfs.json] - about to encode JSON
20 007 22:07:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212820.93466327924 : 218285.6064759864, 6079502.500843227 : 6082517.706564687] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 007 22:07:21 INFO   [wfs.json] - about to encode JSON
20 007 22:07:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212820.93466327924 : 218285.6064759864, 6079502.500843227 : 6082517.706564687] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 22:07:21 INFO   [wfs.json] - about to encode JSON
20 007 22:07:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212612.9117775552 : 218077.58359026234, 6079395.970092061 : 6082411.175813521] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 007 22:07:24 INFO   [wfs.json] - about to encode JSON
20 007 22:07:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212612.9117775552 : 218077.58359026234, 6079395.970092061 : 6082411.175813521] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 007 22:07:26 INFO   [wfs.json] - about to encode JSON
20 007 22:07:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212612.9117775552 : 218077.58359026234, 6079395.970092061 : 6082411.175813521] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 007 22:07:26 INFO   [wfs.json] - about to encode JSON
20 007 22:07:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 007 22:07:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212612.9117775552 : 218077.58359026234, 6079395.970092061 : 6082411.175813521] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 007 22:07:30 INFO   [wfs.json] - about to encode JSON
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 22:08:21 INFO   [wfs.json] - about to encode JSON
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:21 INFO   [wfs.json] - about to encode JSON
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:21 INFO   [wfs.json] - about to encode JSON
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 22:08:21 INFO   [wfs.json] - about to encode JSON
20 008 22:08:21 INFO   [wfs.json] - about to encode JSON
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:21 INFO   [wfs.json] - about to encode JSON
20 008 22:08:21 INFO   [wfs.json] - about to encode JSON
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 22:08:21 INFO   [wfs.json] - about to encode JSON
20 008 22:08:21 INFO   [wfs.json] - about to encode JSON
20 008 22:08:21 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[212899.26277878313 : 217791.2325890344, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 22:08:21 INFO   [wfs.json] - about to encode JSON
20 008 22:08:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 22:08:24 INFO   [wfs.json] - about to encode JSON
20 008 22:08:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 22:08:24 INFO   [wfs.json] - about to encode JSON
20 008 22:08:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 22:08:24 INFO   [wfs.json] - about to encode JSON
20 008 22:08:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 22:08:24 INFO   [wfs.json] - about to encode JSON
20 008 22:08:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[213245.61806320035 : 217444.87730461717, 6079949.304427793 : 6081857.841477789] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 22:08:24 INFO   [wfs.json] - about to encode JSON
20 008 22:08:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211984.87760054684 : 218711.36800883347, 6079423.157324793 : 6082480.305126967] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 22:08:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211984.87760054684 : 218711.36800883347, 6079423.157324793 : 6082480.305126967] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 22:08:27 INFO   [wfs.json] - about to encode JSON
20 008 22:08:27 INFO   [wfs.json] - about to encode JSON
20 008 22:08:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211984.87760054684 : 218711.36800883347, 6079423.157324793 : 6082480.305126967] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 22:08:27 INFO   [wfs.json] - about to encode JSON
20 008 22:08:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211984.87760054684 : 218711.36800883347, 6079423.157324793 : 6082480.305126967] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 22:08:27 INFO   [wfs.json] - about to encode JSON
20 008 22:08:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[211984.87760054684 : 218711.36800883347, 6079423.157324793 : 6082480.305126967] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 22:08:27 INFO   [wfs.json] - about to encode JSON
20 008 22:08:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[198548.2107182413 : 232142.28464957624, 6073269.424752809 : 6088537.721152773] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 22:08:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[198548.2107182413 : 232142.28464957624, 6073269.424752809 : 6088537.721152773] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 22:08:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:42 INFO   [wfs.json] - about to encode JSON
20 008 22:08:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[198548.2107182413 : 232142.28464957624, 6073269.424752809 : 6088537.721152773] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 22:08:42 INFO   [wfs.json] - about to encode JSON
20 008 22:08:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[198548.2107182413 : 232142.28464957624, 6073269.424752809 : 6088537.721152773] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 22:08:42 INFO   [wfs.json] - about to encode JSON
20 008 22:08:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:42 INFO   [wfs.json] - about to encode JSON
20 008 22:08:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[198548.2107182413 : 232142.28464957624, 6073269.424752809 : 6088537.721152773] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 22:08:42 INFO   [wfs.json] - about to encode JSON
20 008 22:08:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[195777.36844290362 : 234913.1269249139, 6073269.424752809 : 6088537.721152773] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 22:08:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[195777.36844290362 : 234913.1269249139, 6073269.424752809 : 6088537.721152773] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 22:08:43 INFO   [wfs.json] - about to encode JSON
20 008 22:08:43 INFO   [wfs.json] - about to encode JSON
20 008 22:08:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[195777.36844290362 : 234913.1269249139, 6073269.424752809 : 6088537.721152773] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 22:08:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[195777.36844290362 : 234913.1269249139, 6073269.424752809 : 6088537.721152773] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 22:08:43 INFO   [wfs.json] - about to encode JSON
20 008 22:08:43 INFO   [wfs.json] - about to encode JSON
20 008 22:08:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[195777.36844290362 : 234913.1269249139, 6073269.424752809 : 6088537.721152773] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 22:08:43 INFO   [wfs.json] - about to encode JSON
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:49 INFO   [wfs.json] - about to encode JSON
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 22:08:49 INFO   [wfs.json] - about to encode JSON
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 22:08:49 INFO   [wfs.json] - about to encode JSON
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 22:08:49 INFO   [wfs.json] - about to encode JSON
20 008 22:08:49 INFO   [wfs.json] - about to encode JSON
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 008 22:08:49 INFO   [wfs.json] - about to encode JSON
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 008 22:08:49 INFO   [wfs.json] - about to encode JSON
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 008 22:08:49 INFO   [wfs.json] - about to encode JSON
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 008 22:08:49 INFO   [wfs.json] - about to encode JSON
20 008 22:08:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 008 22:08:49 INFO   [wfs.json] - about to encode JSON
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 22:09:18 INFO   [wfs.json] - about to encode JSON
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 22:09:18 INFO   [wfs.json] - about to encode JSON
20 009 22:09:18 INFO   [wfs.json] - about to encode JSON
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 22:09:18 INFO   [wfs.json] - about to encode JSON
20 009 22:09:18 INFO   [wfs.json] - about to encode JSON
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 22:09:18 INFO   [wfs.json] - about to encode JSON
20 009 22:09:18 INFO   [wfs.json] - about to encode JSON
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:18 INFO   [wfs.json] - about to encode JSON
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 22:09:18 INFO   [wfs.json] - about to encode JSON
20 009 22:09:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 22:09:18 INFO   [wfs.json] - about to encode JSON
20 009 22:09:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 22:09:40 INFO   [wfs.json] - about to encode JSON
20 009 22:09:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 22:09:40 INFO   [wfs.json] - about to encode JSON
20 009 22:09:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 22:09:40 INFO   [wfs.json] - about to encode JSON
20 009 22:09:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 22:09:40 INFO   [wfs.json] - about to encode JSON
20 009 22:09:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 22:09:40 INFO   [wfs.json] - about to encode JSON
20 009 22:09:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 22:09:41 INFO   [wfs.json] - about to encode JSON
20 009 22:09:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 22:09:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 22:09:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:41 INFO   [wfs.json] - about to encode JSON
20 009 22:09:41 INFO   [wfs.json] - about to encode JSON
20 009 22:09:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 22:09:41 INFO   [wfs.json] - about to encode JSON
20 009 22:09:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 22:09:41 INFO   [wfs.json] - about to encode JSON
20 009 22:09:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 22:09:42 INFO   [wfs.json] - about to encode JSON
20 009 22:09:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 22:09:42 INFO   [wfs.json] - about to encode JSON
20 009 22:09:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 22:09:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 22:09:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 22:09:42 INFO   [wfs.json] - about to encode JSON
20 009 22:09:42 INFO   [wfs.json] - about to encode JSON
20 009 22:09:42 INFO   [wfs.json] - about to encode JSON
20 009 22:09:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 22:09:43 INFO   [wfs.json] - about to encode JSON
20 009 22:09:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 22:09:43 INFO   [wfs.json] - about to encode JSON
20 009 22:09:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 22:09:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 22:09:43 INFO   [wfs.json] - about to encode JSON
20 009 22:09:43 INFO   [wfs.json] - about to encode JSON
20 009 22:09:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 22:09:43 INFO   [wfs.json] - about to encode JSON
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 22:09:47 INFO   [wfs.json] - about to encode JSON
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 22:09:47 INFO   [wfs.json] - about to encode JSON
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:47 INFO   [wfs.json] - about to encode JSON
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 22:09:47 INFO   [wfs.json] - about to encode JSON
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 22:09:47 INFO   [wfs.json] - about to encode JSON
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 22:09:47 INFO   [wfs.json] - about to encode JSON
20 009 22:09:47 INFO   [wfs.json] - about to encode JSON
20 009 22:09:47 INFO   [wfs.json] - about to encode JSON
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 22:09:47 INFO   [wfs.json] - about to encode JSON
20 009 22:09:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 22:09:47 INFO   [wfs.json] - about to encode JSON
20 009 22:09:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 22:09:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 22:09:54 INFO   [wfs.json] - about to encode JSON
20 009 22:09:54 INFO   [wfs.json] - about to encode JSON
20 009 22:09:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 22:09:54 INFO   [wfs.json] - about to encode JSON
20 009 22:09:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 22:09:54 INFO   [wfs.json] - about to encode JSON
20 009 22:09:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 22:09:54 INFO   [wfs.json] - about to encode JSON
20 009 22:09:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 009 22:09:55 INFO   [wfs.json] - about to encode JSON
20 009 22:09:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 009 22:09:55 INFO   [wfs.json] - about to encode JSON
20 009 22:09:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 009 22:09:55 INFO   [wfs.json] - about to encode JSON
20 009 22:09:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 009 22:09:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 009 22:09:55 INFO   [wfs.json] - about to encode JSON
20 009 22:09:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 009 22:09:55 INFO   [wfs.json] - about to encode JSON
20 010 22:10:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 22:10:01 INFO   [wfs.json] - about to encode JSON
20 010 22:10:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 22:10:01 INFO   [wfs.json] - about to encode JSON
20 010 22:10:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 22:10:01 INFO   [wfs.json] - about to encode JSON
20 010 22:10:01 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 22:10:01 INFO   [wfs.json] - about to encode JSON
20 010 22:10:01 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 22:10:01 INFO   [wfs.json] - about to encode JSON
20 010 22:10:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 22:10:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 22:10:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 22:10:02 INFO   [wfs.json] - about to encode JSON
20 010 22:10:02 INFO   [wfs.json] - about to encode JSON
20 010 22:10:02 INFO   [wfs.json] - about to encode JSON
20 010 22:10:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 22:10:02 INFO   [wfs.json] - about to encode JSON
20 010 22:10:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 22:10:02 INFO   [wfs.json] - about to encode JSON
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 22:10:05 INFO   [wfs.json] - about to encode JSON
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 22:10:05 INFO   [wfs.json] - about to encode JSON
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 22:10:05 INFO   [wfs.json] - about to encode JSON
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 22:10:05 INFO   [wfs.json] - about to encode JSON
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 22:10:05 INFO   [wfs.json] - about to encode JSON
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 22:10:05 INFO   [wfs.json] - about to encode JSON
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 22:10:05 INFO   [wfs.json] - about to encode JSON
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 22:10:05 INFO   [wfs.json] - about to encode JSON
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 22:10:05 INFO   [wfs.json] - about to encode JSON
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 22:10:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 22:10:05 INFO   [wfs.json] - about to encode JSON
20 011 22:11:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 22:11:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 22:11:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 22:11:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 011 22:11:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 011 22:11:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 011 22:11:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 22:11:22 INFO   [wfs.json] - about to encode JSON
20 011 22:11:22 INFO   [wfs.json] - about to encode JSON
20 011 22:11:22 INFO   [wfs.json] - about to encode JSON
20 011 22:11:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 011 22:11:22 INFO   [wfs.json] - about to encode JSON
20 011 22:11:22 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 22:11:22 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 011 22:11:22 INFO   [wfs.json] - about to encode JSON
20 011 22:11:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 22:11:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 22:11:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 22:11:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 22:11:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 011 22:11:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 011 22:11:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 011 22:11:23 INFO   [wfs.json] - about to encode JSON
20 011 22:11:23 INFO   [wfs.json] - about to encode JSON
20 011 22:11:23 INFO   [wfs.json] - about to encode JSON
20 011 22:11:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 011 22:11:23 INFO   [wfs.json] - about to encode JSON
20 011 22:11:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 011 22:11:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 011 22:11:23 INFO   [wfs.json] - about to encode JSON
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 012 22:12:23 INFO   [wfs.json] - about to encode JSON
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 012 22:12:23 INFO   [wfs.json] - about to encode JSON
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 012 22:12:23 INFO   [wfs.json] - about to encode JSON
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 012 22:12:23 INFO   [wfs.json] - about to encode JSON
20 012 22:12:23 INFO   [wfs.json] - about to encode JSON
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 012 22:12:23 INFO   [wfs.json] - about to encode JSON
20 012 22:12:23 INFO   [wfs.json] - about to encode JSON
20 012 22:12:23 INFO   [wfs.json] - about to encode JSON
20 012 22:12:23 INFO   [wfs.json] - about to encode JSON
20 012 22:12:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 012 22:12:23 INFO   [wfs.json] - about to encode JSON
20 012 22:12:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[69915.62178575303 : 86712.6587514205, 5996582.934598984 : 6004217.082798967] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 012 22:12:27 INFO   [wfs.json] - about to encode JSON
20 012 22:12:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[69915.62178575303 : 86712.6587514205, 5996582.934598984 : 6004217.082798967] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 012 22:12:30 INFO   [wfs.json] - about to encode JSON
20 012 22:12:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:58 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 012 22:12:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76220.33448780233 : 80407.9460493712, 5999448.387072783 : 6001351.630325168] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 012 22:12:58 INFO   [wfs.json] - about to encode JSON
20 012 22:12:58 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76220.33448780233 : 80407.9460493712, 5999448.387072783 : 6001351.630325168] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 012 22:12:58 INFO   [wfs.json] - about to encode JSON
20 013 22:13:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[76220.33448780233 : 80407.9460493712, 5999448.387072783 : 6001351.630325168] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 013 22:13:04 INFO   [wfs.json] - about to encode JSON
20 013 22:13:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 013 22:13:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 013 22:13:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 013 22:13:42 INFO   [wfs.json] - about to encode JSON
20 013 22:13:42 INFO   [wfs.json] - about to encode JSON
20 013 22:13:42 INFO   [wfs.json] - about to encode JSON
20 013 22:13:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 013 22:13:42 INFO   [wfs.json] - about to encode JSON
20 013 22:13:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 013 22:13:42 INFO   [wfs.json] - about to encode JSON
20 013 22:13:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 013 22:13:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 013 22:13:43 INFO   [wfs.json] - about to encode JSON
20 013 22:13:43 INFO   [wfs.json] - about to encode JSON
20 013 22:13:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 013 22:13:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:43 INFO   [wfs.json] - about to encode JSON
20 013 22:13:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 013 22:13:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 013 22:13:43 INFO   [wfs.json] - about to encode JSON
20 013 22:13:43 INFO   [wfs.json] - about to encode JSON
20 013 22:13:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[187182.0606922857 : 250122.90541154088, 6069553.351625676 : 6098159.571722767] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 013 22:13:53 INFO   [wfs.json] - about to encode JSON
20 013 22:13:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[187182.0606922857 : 250122.90541154088, 6069553.351625676 : 6098159.571722767] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 013 22:13:53 INFO   [wfs.json] - about to encode JSON
20 013 22:13:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[187182.0606922857 : 250122.90541154088, 6069553.351625676 : 6098159.571722767] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 013 22:13:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[187182.0606922857 : 250122.90541154088, 6069553.351625676 : 6098159.571722767] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 013 22:13:53 INFO   [wfs.json] - about to encode JSON
20 013 22:13:53 INFO   [wfs.json] - about to encode JSON
20 013 22:13:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[187182.0606922857 : 250122.90541154088, 6069553.351625676 : 6098159.571722767] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 013 22:13:53 INFO   [wfs.json] - about to encode JSON
20 013 22:13:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-58205.274097108166 : 578108.6601634322, 5975948.074777922 : 6265148.776412832] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 013 22:13:54 INFO   [wfs.json] - about to encode JSON
20 013 22:13:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-58205.274097108166 : 578108.6601634322, 5975948.074777922 : 6265148.776412832] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 013 22:13:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-58205.274097108166 : 578108.6601634322, 5975948.074777922 : 6265148.776412832] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 013 22:13:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-58205.274097108166 : 578108.6601634322, 5975948.074777922 : 6265148.776412832] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 013 22:13:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-58205.274097108166 : 578108.6601634322, 5975948.074777922 : 6265148.776412832] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 013 22:13:54 INFO   [wfs.json] - about to encode JSON
20 013 22:13:54 INFO   [wfs.json] - about to encode JSON
20 013 22:13:54 INFO   [wfs.json] - about to encode JSON
20 013 22:13:54 INFO   [wfs.json] - about to encode JSON
20 013 22:13:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-151158.13157970787 : 485155.80268083257, 5920668.184102784 : 6209868.885737694] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 013 22:13:56 INFO   [wfs.json] - about to encode JSON
20 013 22:13:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-151158.13157970787 : 485155.80268083257, 5920668.184102784 : 6209868.885737694] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 013 22:13:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-151158.13157970787 : 485155.80268083257, 5920668.184102784 : 6209868.885737694] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 013 22:13:56 INFO   [wfs.json] - about to encode JSON
20 013 22:13:56 INFO   [wfs.json] - about to encode JSON
20 013 22:13:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 013 22:13:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-151158.13157970787 : 485155.80268083257, 5920668.184102784 : 6209868.885737694] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 013 22:13:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-151158.13157970787 : 485155.80268083257, 5920668.184102784 : 6209868.885737694] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 013 22:13:56 INFO   [wfs.json] - about to encode JSON
20 013 22:13:56 INFO   [wfs.json] - about to encode JSON
20 014 22:14:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 22:14:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-102811.71944636147 : 533502.214814179, 5936303.222135336 : 6225503.923770246] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 014 22:14:03 INFO   [wfs.json] - about to encode JSON
20 014 22:14:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 22:14:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-102811.71944636147 : 533502.214814179, 5936303.222135336 : 6225503.923770246] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 014 22:14:04 INFO   [wfs.json] - about to encode JSON
20 014 22:14:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 22:14:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-102811.71944636147 : 533502.214814179, 5936303.222135336 : 6225503.923770246] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 014 22:14:05 INFO   [wfs.json] - about to encode JSON
20 014 22:14:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 22:14:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-102811.71944636147 : 533502.214814179, 5936303.222135336 : 6225503.923770246] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 014 22:14:08 INFO   [wfs.json] - about to encode JSON
20 014 22:14:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 22:14:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 22:14:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-239842.82686168348 : 396471.107398857, 5855799.657881521 : 6145000.359516431] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 014 22:14:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-239842.82686168348 : 396471.107398857, 5855799.657881521 : 6145000.359516431] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 014 22:14:12 INFO   [wfs.json] - about to encode JSON
20 014 22:14:12 INFO   [wfs.json] - about to encode JSON
20 014 22:14:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 22:14:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 014 22:14:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-239842.82686168348 : 396471.107398857, 5855799.657881521 : 6145000.359516431] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 014 22:14:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-239842.82686168348 : 396471.107398857, 5855799.657881521 : 6145000.359516431] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 014 22:14:12 INFO   [wfs.json] - about to encode JSON
20 014 22:14:12 INFO   [wfs.json] - about to encode JSON
20 015 22:15:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-322159.93521745066 : 752850.4305852682, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 22:15:25 INFO   [wfs.json] - about to encode JSON
20 015 22:15:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-322159.93521745066 : 752850.4305852682, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 22:15:25 INFO   [wfs.json] - about to encode JSON
20 015 22:15:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-322159.93521745066 : 752850.4305852682, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 22:15:25 INFO   [wfs.json] - about to encode JSON
20 015 22:15:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-322159.93521745066 : 752850.4305852682, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 22:15:25 INFO   [wfs.json] - about to encode JSON
20 015 22:15:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-322159.93521745066 : 752850.4305852682, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 22:15:25 INFO   [wfs.json] - about to encode JSON
20 015 22:15:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-410826.88802825514 : 841517.3833960727, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 22:15:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-410826.88802825514 : 841517.3833960727, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 22:15:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:26 INFO   [wfs.json] - about to encode JSON
20 015 22:15:26 INFO   [wfs.json] - about to encode JSON
20 015 22:15:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-410826.88802825514 : 841517.3833960727, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 22:15:26 INFO   [wfs.json] - about to encode JSON
20 015 22:15:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-410826.88802825514 : 841517.3833960727, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 22:15:26 INFO   [wfs.json] - about to encode JSON
20 015 22:15:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-410826.88802825514 : 841517.3833960727, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 22:15:26 INFO   [wfs.json] - about to encode JSON
20 015 22:15:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-322159.93521745066 : 752850.4305852682, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 22:15:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-322159.93521745066 : 752850.4305852682, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 22:15:27 INFO   [wfs.json] - about to encode JSON
20 015 22:15:27 INFO   [wfs.json] - about to encode JSON
20 015 22:15:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-322159.93521745066 : 752850.4305852682, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 22:15:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-322159.93521745066 : 752850.4305852682, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 22:15:27 INFO   [wfs.json] - about to encode JSON
20 015 22:15:27 INFO   [wfs.json] - about to encode JSON
20 015 22:15:27 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:27 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-322159.93521745066 : 752850.4305852682, 5836610.830553368 : 6325196.3153522145] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 22:15:27 INFO   [wfs.json] - about to encode JSON
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[80968.9519585689 : 349721.54340924864, 6019830.387352935 : 6141976.758552647] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 22:15:33 INFO   [wfs.json] - about to encode JSON
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[80968.9519585689 : 349721.54340924864, 6019830.387352935 : 6141976.758552647] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 22:15:33 INFO   [wfs.json] - about to encode JSON
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[80968.9519585689 : 349721.54340924864, 6019830.387352935 : 6141976.758552647] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 22:15:33 INFO   [wfs.json] - about to encode JSON
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[80968.9519585689 : 349721.54340924864, 6019830.387352935 : 6141976.758552647] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 22:15:33 INFO   [wfs.json] - about to encode JSON
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[80968.9519585689 : 349721.54340924864, 6019830.387352935 : 6141976.758552647] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 22:15:33 INFO   [wfs.json] - about to encode JSON
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[58802.21375586778 : 371888.28161194973, 6019830.387352935 : 6141976.758552647] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 22:15:33 INFO   [wfs.json] - about to encode JSON
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[58802.21375586778 : 371888.28161194973, 6019830.387352935 : 6141976.758552647] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[58802.21375586778 : 371888.28161194973, 6019830.387352935 : 6141976.758552647] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 22:15:33 INFO   [wfs.json] - about to encode JSON
20 015 22:15:33 INFO   [wfs.json] - about to encode JSON
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[58802.21375586778 : 371888.28161194973, 6019830.387352935 : 6141976.758552647] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 22:15:33 INFO   [wfs.json] - about to encode JSON
20 015 22:15:33 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[58802.21375586778 : 371888.28161194973, 6019830.387352935 : 6141976.758552647] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 22:15:33 INFO   [wfs.json] - about to encode JSON
20 015 22:15:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[41833.19347655871 : 310585.7849272384, 5971980.807646414 : 6094127.178846126] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 22:15:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:37 INFO   [wfs.json] - about to encode JSON
20 015 22:15:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[41833.19347655871 : 310585.7849272384, 5971980.807646414 : 6094127.178846126] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 22:15:37 INFO   [wfs.json] - about to encode JSON
20 015 22:15:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[41833.19347655871 : 310585.7849272384, 5971980.807646414 : 6094127.178846126] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 22:15:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[41833.19347655871 : 310585.7849272384, 5971980.807646414 : 6094127.178846126] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 22:15:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:37 INFO   [wfs.json] - about to encode JSON
20 015 22:15:37 INFO   [wfs.json] - about to encode JSON
20 015 22:15:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[41833.19347655871 : 310585.7849272384, 5971980.807646414 : 6094127.178846126] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 22:15:37 INFO   [wfs.json] - about to encode JSON
20 015 22:15:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[61401.07271756382 : 330153.66416824353, 5988185.457642872 : 6110331.828842584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 22:15:38 INFO   [wfs.json] - about to encode JSON
20 015 22:15:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[61401.07271756382 : 330153.66416824353, 5988185.457642872 : 6110331.828842584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 22:15:38 INFO   [wfs.json] - about to encode JSON
20 015 22:15:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[61401.07271756382 : 330153.66416824353, 5988185.457642872 : 6110331.828842584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 22:15:38 INFO   [wfs.json] - about to encode JSON
20 015 22:15:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[61401.07271756382 : 330153.66416824353, 5988185.457642872 : 6110331.828842584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 22:15:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[61401.07271756382 : 330153.66416824353, 5988185.457642872 : 6110331.828842584] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 22:15:38 INFO   [wfs.json] - about to encode JSON
20 015 22:15:38 INFO   [wfs.json] - about to encode JSON
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 22:15:43 INFO   [wfs.json] - about to encode JSON
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 22:15:43 INFO   [wfs.json] - about to encode JSON
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 22:15:43 INFO   [wfs.json] - about to encode JSON
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 22:15:43 INFO   [wfs.json] - about to encode JSON
20 015 22:15:43 INFO   [wfs.json] - about to encode JSON
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 015 22:15:43 INFO   [wfs.json] - about to encode JSON
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 015 22:15:43 INFO   [wfs.json] - about to encode JSON
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 015 22:15:43 INFO   [wfs.json] - about to encode JSON
20 015 22:15:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 015 22:15:43 INFO   [wfs.json] - about to encode JSON
20 015 22:15:43 INFO   [wfs.json] - about to encode JSON
20 016 22:16:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 016 22:16:37 INFO   [wfs.json] - about to encode JSON
20 016 22:16:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 016 22:16:37 INFO   [wfs.json] - about to encode JSON
20 016 22:16:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 016 22:16:37 INFO   [wfs.json] - about to encode JSON
20 016 22:16:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 016 22:16:37 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[206946.729201075 : 223743.7661667425, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 016 22:16:37 INFO   [wfs.json] - about to encode JSON
20 016 22:16:37 INFO   [wfs.json] - about to encode JSON
20 016 22:16:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 016 22:16:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:38 INFO   [wfs.json] - about to encode JSON
20 016 22:16:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 016 22:16:38 INFO   [wfs.json] - about to encode JSON
20 016 22:16:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 016 22:16:38 INFO   [wfs.json] - about to encode JSON
20 016 22:16:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 016 22:16:38 INFO   [wfs.json] - about to encode JSON
20 016 22:16:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[205561.3080634062 : 225129.18730441132, 6077086.4988528 : 6084720.647052783] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 016 22:16:38 INFO   [wfs.json] - about to encode JSON
20 016 22:16:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[69915.62178575303 : 86712.6587514205, 5996582.934598984 : 6004217.082798967] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 016 22:16:44 INFO   [wfs.json] - about to encode JSON
20 016 22:16:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[69915.62178575303 : 86712.6587514205, 5996582.934598984 : 6004217.082798967] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 016 22:16:44 INFO   [wfs.json] - about to encode JSON
20 016 22:16:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[69915.62178575303 : 86712.6587514205, 5996582.934598984 : 6004217.082798967] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 016 22:16:46 INFO   [wfs.json] - about to encode JSON
20 016 22:16:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 016 22:16:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[69915.62178575303 : 86712.6587514205, 5996582.934598984 : 6004217.082798967] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 016 22:16:48 INFO   [wfs.json] - about to encode JSON
20 017 22:17:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 22:17:04 INFO   [wfs.json] - about to encode JSON
20 017 22:17:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 22:17:04 INFO   [wfs.json] - about to encode JSON
20 017 22:17:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 22:17:04 INFO   [wfs.json] - about to encode JSON
20 017 22:17:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 22:17:04 INFO   [wfs.json] - about to encode JSON
20 017 22:17:04 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:04 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 22:17:04 INFO   [wfs.json] - about to encode JSON
20 017 22:17:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 22:17:05 INFO   [wfs.json] - about to encode JSON
20 017 22:17:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 017 22:17:05 INFO   [wfs.json] - about to encode JSON
20 017 22:17:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 22:17:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 22:17:05 INFO   [wfs.json] - about to encode JSON
20 017 22:17:05 INFO   [wfs.json] - about to encode JSON
20 017 22:17:05 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:05 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 22:17:05 INFO   [wfs.json] - about to encode JSON
20 017 22:17:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-190438.45118209298 : 347066.73171926645, 5878253.6374992635 : 6122546.379898688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 017 22:17:12 INFO   [wfs.json] - about to encode JSON
20 017 22:17:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-190438.45118209298 : 347066.73171926645, 5878253.6374992635 : 6122546.379898688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 017 22:17:13 INFO   [wfs.json] - about to encode JSON
20 017 22:17:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-190438.45118209298 : 347066.73171926645, 5878253.6374992635 : 6122546.379898688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 017 22:17:14 INFO   [wfs.json] - about to encode JSON
20 017 22:17:17 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 017 22:17:17 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-190438.45118209298 : 347066.73171926645, 5878253.6374992635 : 6122546.379898688] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 017 22:17:17 INFO   [wfs.json] - about to encode JSON
20 018 22:18:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-188941.9822295532 : 348563.20067180623, 5878232.123090488 : 6122524.865489912] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 22:18:00 INFO   [wfs.json] - about to encode JSON
20 018 22:18:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-188941.9822295532 : 348563.20067180623, 5878232.123090488 : 6122524.865489912] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 22:18:00 INFO   [wfs.json] - about to encode JSON
20 018 22:18:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-188941.9822295532 : 348563.20067180623, 5878232.123090488 : 6122524.865489912] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 22:18:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-188941.9822295532 : 348563.20067180623, 5878232.123090488 : 6122524.865489912] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 22:18:00 INFO   [wfs.json] - about to encode JSON
20 018 22:18:00 INFO   [wfs.json] - about to encode JSON
20 018 22:18:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 22:18:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 22:18:03 INFO   [wfs.json] - about to encode JSON
20 018 22:18:03 INFO   [wfs.json] - about to encode JSON
20 018 22:18:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 22:18:03 INFO   [wfs.json] - about to encode JSON
20 018 22:18:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 22:18:03 INFO   [wfs.json] - about to encode JSON
20 018 22:18:03 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 22:18:03 INFO   [wfs.json] - about to encode JSON
20 018 22:18:23 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:23 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 22:18:23 INFO   [wfs.json] - about to encode JSON
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 22:18:24 INFO   [wfs.json] - about to encode JSON
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 22:18:24 INFO   [wfs.json] - about to encode JSON
20 018 22:18:24 INFO   [wfs.json] - about to encode JSON
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53407.34376677096 : 484097.8391345885, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 22:18:24 INFO   [wfs.json] - about to encode JSON
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 018 22:18:24 INFO   [wfs.json] - about to encode JSON
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 018 22:18:24 INFO   [wfs.json] - about to encode JSON
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 018 22:18:24 INFO   [wfs.json] - about to encode JSON
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 018 22:18:24 INFO   [wfs.json] - about to encode JSON
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 018 22:18:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-97740.8201721732 : 528431.3155399907, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 018 22:18:24 INFO   [wfs.json] - about to encode JSON
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53560.21782334131 : 484250.71319115884, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 22:20:35 INFO   [wfs.json] - about to encode JSON
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53560.21782334131 : 484250.71319115884, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 22:20:35 INFO   [wfs.json] - about to encode JSON
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53560.21782334131 : 484250.71319115884, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53560.21782334131 : 484250.71319115884, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 22:20:35 INFO   [wfs.json] - about to encode JSON
20 020 22:20:35 INFO   [wfs.json] - about to encode JSON
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-53560.21782334131 : 484250.71319115884, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 22:20:35 INFO   [wfs.json] - about to encode JSON
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54018.83999305235 : 484709.3353608699, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [wfs.json] - about to encode JSON
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54018.83999305235 : 484709.3353608699, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 22:20:35 INFO   [wfs.json] - about to encode JSON
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54018.83999305235 : 484709.3353608699, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 22:20:35 INFO   [wfs.json] - about to encode JSON
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54018.83999305235 : 484709.3353608699, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 22:20:35 INFO   [wfs.json] - about to encode JSON
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54018.83999305235 : 484709.3353608699, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 22:20:35 INFO   [wfs.json] - about to encode JSON
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54630.336219333774 : 485320.8315871513, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54630.336219333774 : 485320.8315871513, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 22:20:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54630.336219333774 : 485320.8315871513, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54630.336219333774 : 485320.8315871513, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54630.336219333774 : 485320.8315871513, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-55241.83244561517 : 485932.32781343267, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-55241.83244561517 : 485932.32781343267, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-55241.83244561517 : 485932.32781343267, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-55241.83244561517 : 485932.32781343267, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-55241.83244561517 : 485932.32781343267, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-55853.32867189659 : 486543.82403971406, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-55853.32867189659 : 486543.82403971406, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-55853.32867189659 : 486543.82403971406, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-55853.32867189659 : 486543.82403971406, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 020 22:20:36 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-55853.32867189659 : 486543.82403971406, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 020 22:20:36 INFO   [wfs.json] - about to encode JSON
20 021 22:21:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 22:21:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 22:21:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 22:21:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 22:21:13 INFO   [wfs.json] - about to encode JSON
20 021 22:21:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 22:21:13 INFO   [wfs.json] - about to encode JSON
20 021 22:21:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 22:21:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 22:21:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 22:21:13 INFO   [wfs.json] - about to encode JSON
20 021 22:21:13 INFO   [wfs.json] - about to encode JSON
20 021 22:21:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 22:21:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 22:21:13 INFO   [wfs.json] - about to encode JSON
20 021 22:21:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 22:21:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 22:21:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 22:21:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 22:21:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 021 22:21:14 INFO   [wfs.json] - about to encode JSON
20 021 22:21:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 021 22:21:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 021 22:21:14 INFO   [wfs.json] - about to encode JSON
20 021 22:21:14 INFO   [wfs.json] - about to encode JSON
20 021 22:21:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 021 22:21:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 021 22:21:14 INFO   [wfs.json] - about to encode JSON
20 021 22:21:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 021 22:21:14 INFO   [wfs.json] - about to encode JSON
20 029 22:29:34 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: Schema 'universit__d_orleans_test' does not exist.
20 029 22:29:34 WARN   [geoserver.catalog] - Unable to flush 'toto:universit__d_orleans_test
java.io.IOException: Schema 'universit__d_orleans_test' does not exist.
	at org.geotools.data.store.ContentDataStore.ensureEntry(ContentDataStore.java:545)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:336)
	at org.geotools.data.store.ContentDataStore.getFeatureSource(ContentDataStore.java:308)
	at org.geoserver.catalog.ResourcePool.flushState(ResourcePool.java:2682)
	at org.geoserver.catalog.ResourcePool.flushDataStore(ResourcePool.java:2656)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:945)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.web.CatalogIconFactory.getSpecificLayerIcon(CatalogIconFactory.java:109)
	at org.geoserver.web.demo.PreviewLayer.getIcon(PreviewLayer.java:89)
	at org.geoserver.web.demo.MapPreviewPage$1.getComponentForProperty(MapPreviewPage.java:82)
	at org.geoserver.web.wicket.GeoServerTablePanel$5.populateItem(GeoServerTablePanel.java:292)
	at org.apache.wicket.markup.html.list.ListView.onPopulate(ListView.java:523)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:124)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.markup.repeater.AbstractRepeater.onBeforeRender(AbstractRepeater.java:143)
	at org.apache.wicket.markup.repeater.AbstractPageableView.onBeforeRender(AbstractPageableView.java:115)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.MarkupContainer.onBeforeRenderChildren(MarkupContainer.java:1826)
	at org.apache.wicket.Component.onBeforeRender(Component.java:3921)
	at org.apache.wicket.Page.onBeforeRender(Page.java:801)
	at org.apache.wicket.Component.internalBeforeRender(Component.java:950)
	at org.apache.wicket.Component.beforeRender(Component.java:1018)
	at org.apache.wicket.Component.internalPrepareForRender(Component.java:2236)
	at org.apache.wicket.Page.internalPrepareForRender(Page.java:242)
	at org.apache.wicket.Component.render(Component.java:2327)
	at org.apache.wicket.Page.renderPage(Page.java:1018)
	at org.apache.wicket.request.handler.render.WebPageRenderer.renderPage(WebPageRenderer.java:124)
	at org.apache.wicket.request.handler.render.WebPageRenderer.respond(WebPageRenderer.java:236)
	at org.apache.wicket.core.request.handler.RenderPageRequestHandler.respond(RenderPageRequestHandler.java:175)
	at org.apache.wicket.request.cycle.RequestCycle$HandlerExecutor.respond(RequestCycle.java:895)
	at org.apache.wicket.request.RequestHandlerStack.execute(RequestHandlerStack.java:64)
	at org.apache.wicket.request.cycle.RequestCycle.execute(RequestCycle.java:265)
	at org.apache.wicket.request.cycle.RequestCycle.processRequest(RequestCycle.java:222)
	at org.apache.wicket.request.cycle.RequestCycle.processRequestAndDetach(RequestCycle.java:293)
	at org.apache.wicket.protocol.http.WicketFilter.processRequestCycle(WicketFilter.java:261)
	at org.apache.wicket.protocol.http.WicketFilter.processRequest(WicketFilter.java:203)
	at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:137)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:166)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:122)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleNonCORS(CorsFilter.java:331)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:158)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 029 22:29:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 029 22:29:36 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[0.700632989406586 : 1.940246105194092, 47.35499954223633 : 47.84933853149414]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@139c688c]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=0.700632989406586,47.35499954223633,1.940246105194092,47.84933853149414, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, LAYERS=toto:map_batiment}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 029 22:29:36 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 029 22:29:36 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[0.26641845703125 : 2.37579345703125, 47.1478271484375 : 48.05419921875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@139c688c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=0.26641845703125,47.1478271484375,2.37579345703125,48.05419921875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, TRANSPARENT=true, LAYERS=toto:map_batiment}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 029 22:29:42 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 029 22:29:42 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[0.700544774532318 : 1.936986088752747, 47.352806091308594 : 47.8468017578125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@f39d706d]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=0.700544774532318,47.352806091308594,1.936986088752747,47.8468017578125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, LAYERS=toto:map_cafet}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 029 22:29:42 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 029 22:29:42 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[0.263671875 : 2.373046875, 47.1478271484375 : 48.05419921875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@f39d706d]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=0.263671875,47.1478271484375,2.373046875,48.05419921875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, TRANSPARENT=true, LAYERS=toto:map_cafet}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 030 22:30:35 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 030 22:30:35 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[0.700632989406586 : 1.940246105194092, 47.35499954223633 : 47.84933853149414]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@139c688c]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=0.700632989406586,47.35499954223633,1.940246105194092,47.84933853149414, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, LAYERS=toto:map_batiment}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 030 22:30:35 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 030 22:30:35 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[0.26641845703125 : 2.37579345703125, 47.1478271484375 : 48.05419921875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@139c688c]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=0.26641845703125,47.1478271484375,2.37579345703125,48.05419921875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, TRANSPARENT=true, LAYERS=toto:map_batiment}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 030 22:30:41 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 030 22:30:41 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[0.700544774532318 : 1.936986088752747, 47.352806091308594 : 47.8468017578125]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = application/openlayers
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@f39d706d]
	MaxFeatures = null
	Palette = null
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=0.700544774532318,47.352806091308594,1.936986088752747,47.8468017578125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, LAYERS=toto:map_cafet}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = 1.1.0
	ViewParams = null
	Width = 768
20 030 22:30:42 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 030 22:30:42 INFO   [geoserver.wms] - 
Request: getMap
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = SRSEnvelope[0.263671875 : 2.373046875, 47.1478271484375 : 48.05419921875]
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Elevation = []
	Env = {}
	Exceptions = application/vnd.ogc.se_inimage
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = image/png
	FormatOptions = {}
	Get = true
	Height = 330
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@f39d706d]
	MaxFeatures = null
	Palette = null
	RawKvp = {EXCEPTIONS=application/vnd.ogc.se_inimage, REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=0.263671875,47.1478271484375,2.373046875,48.05419921875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, TRANSPARENT=true, LAYERS=toto:map_cafet}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = EPSG:4326
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=generic]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = true
	ValidateSchema = false
	Version = 1.1.1
	ViewParams = null
	Width = 768
20 030 22:30:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 030 22:30:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {toto}map_batiment
    maxFeatures = 50
    outputFormat = GML2
    resultType = results
20 030 22:30:49 INFO   [geoserver.wms] - 
Request: getServiceInfo
20 030 22:30:49 INFO   [geoserver.wms] - 
Request: kml
	Angle = 0.0
	BaseUrl = http://localhost:8080/geoserver/
	Bbox = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Buffer = 0
	Clip = null
	CQLFilter = null
	Crs = null
	Elevation = []
	Env = {}
	Exceptions = SE_XML
	FeatureId = null
	FeatureVersion = null
	Filter = null
	Format = null
	FormatOptions = {}
	Get = true
	Height = 0
	Interpolations = []
	Layers = [org.geoserver.wms.MapLayerInfo@139c688c]
	MaxFeatures = null
	Palette = null
	RawKvp = {LAYERS=toto:map_batiment}
	RemoteOwsType = null
	RemoteOwsURL = null
	Request = GetMap
	RequestCharset = UTF-8
	ScaleMethod = null
	Sld = null
	SldBody = null
	SldVersion = null
	SortBy = null
	SortByArrays = null
	SRS = null
	StartIndex = null
	StyleBody = null
	StyleFormat = sld
	Styles = [StyleImpl[ name=polygon]]
	StyleUrl = null
	StyleVersion = null
	Tiled = false
	TilesOrigin = null
	Time = []
	Transparent = false
	ValidateSchema = false
	Version = null
	ViewParams = null
	Width = 0
20 042 22:42:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 22:42:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 22:42:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 22:42:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 22:42:59 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 042 22:42:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 042 22:42:59 INFO   [wfs.json] - about to encode JSON
20 042 22:42:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 042 22:42:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 042 22:42:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 042 22:42:59 INFO   [wfs.json] - about to encode JSON
20 042 22:42:59 INFO   [wfs.json] - about to encode JSON
20 042 22:42:59 INFO   [wfs.json] - about to encode JSON
20 042 22:42:59 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 042 22:42:59 INFO   [wfs.json] - about to encode JSON
20 043 22:43:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 22:43:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 22:43:00 INFO   [wfs.json] - about to encode JSON
20 043 22:43:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 22:43:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 22:43:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 22:43:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 043 22:43:00 INFO   [wfs.json] - about to encode JSON
20 043 22:43:00 INFO   [wfs.json] - about to encode JSON
20 043 22:43:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 22:43:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 22:43:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 22:43:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 043 22:43:00 INFO   [wfs.json] - about to encode JSON
20 043 22:43:00 INFO   [wfs.json] - about to encode JSON
20 044 22:44:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 22:44:40 INFO   [wfs.json] - about to encode JSON
20 044 22:44:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 22:44:40 INFO   [wfs.json] - about to encode JSON
20 044 22:44:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 22:44:40 INFO   [wfs.json] - about to encode JSON
20 044 22:44:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 22:44:40 INFO   [wfs.json] - about to encode JSON
20 044 22:44:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 22:44:40 INFO   [wfs.json] - about to encode JSON
20 044 22:44:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 22:44:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 22:44:41 INFO   [wfs.json] - about to encode JSON
20 044 22:44:41 INFO   [wfs.json] - about to encode JSON
20 044 22:44:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:41 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 22:44:41 INFO   [wfs.json] - about to encode JSON
20 044 22:44:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 22:44:41 INFO   [wfs.json] - about to encode JSON
20 044 22:44:41 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 22:44:41 INFO   [wfs.json] - about to encode JSON
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:46 INFO   [wfs.json] - about to encode JSON
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 22:44:46 INFO   [wfs.json] - about to encode JSON
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 22:44:46 INFO   [wfs.json] - about to encode JSON
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 22:44:46 INFO   [wfs.json] - about to encode JSON
20 044 22:44:46 INFO   [wfs.json] - about to encode JSON
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 22:44:46 INFO   [wfs.json] - about to encode JSON
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 22:44:46 INFO   [wfs.json] - about to encode JSON
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 22:44:46 INFO   [wfs.json] - about to encode JSON
20 044 22:44:46 INFO   [wfs.json] - about to encode JSON
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:46 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 22:44:46 INFO   [wfs.json] - about to encode JSON
20 044 22:44:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 22:44:48 INFO   [wfs.json] - about to encode JSON
20 044 22:44:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 22:44:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 22:44:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 22:44:48 INFO   [wfs.json] - about to encode JSON
20 044 22:44:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 22:44:48 INFO   [wfs.json] - about to encode JSON
20 044 22:44:48 INFO   [wfs.json] - about to encode JSON
20 044 22:44:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 22:44:48 INFO   [wfs.json] - about to encode JSON
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 046 22:46:54 INFO   [wfs.json] - about to encode JSON
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 046 22:46:54 INFO   [wfs.json] - about to encode JSON
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 046 22:46:54 INFO   [wfs.json] - about to encode JSON
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 046 22:46:54 INFO   [wfs.json] - about to encode JSON
20 046 22:46:54 INFO   [wfs.json] - about to encode JSON
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 046 22:46:54 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 046 22:46:54 INFO   [wfs.json] - about to encode JSON
20 046 22:46:54 INFO   [wfs.json] - about to encode JSON
20 046 22:46:54 INFO   [wfs.json] - about to encode JSON
20 046 22:46:54 INFO   [wfs.json] - about to encode JSON
20 046 22:46:54 INFO   [wfs.json] - about to encode JSON
20 047 22:47:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 22:47:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 047 22:47:30 INFO   [wfs.json] - about to encode JSON
20 047 22:47:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 22:47:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 047 22:47:30 INFO   [wfs.json] - about to encode JSON
20 047 22:47:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 22:47:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 22:47:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 047 22:47:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 047 22:47:30 INFO   [wfs.json] - about to encode JSON
20 047 22:47:30 INFO   [wfs.json] - about to encode JSON
20 047 22:47:30 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 047 22:47:30 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 047 22:47:30 INFO   [wfs.json] - about to encode JSON
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 050 22:50:47 INFO   [wfs.json] - about to encode JSON
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 050 22:50:47 INFO   [wfs.json] - about to encode JSON
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 050 22:50:47 INFO   [wfs.json] - about to encode JSON
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 050 22:50:47 INFO   [wfs.json] - about to encode JSON
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 050 22:50:47 INFO   [wfs.json] - about to encode JSON
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 050 22:50:47 INFO   [wfs.json] - about to encode JSON
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 050 22:50:47 INFO   [wfs.json] - about to encode JSON
20 050 22:50:47 INFO   [wfs.json] - about to encode JSON
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 050 22:50:47 INFO   [wfs.json] - about to encode JSON
20 050 22:50:47 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 050 22:50:47 INFO   [wfs.json] - about to encode JSON
20 051 22:51:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 22:51:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 22:51:48 INFO   [wfs.json] - about to encode JSON
20 051 22:51:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 22:51:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 22:51:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 22:51:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 22:51:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 22:51:48 INFO   [wfs.json] - about to encode JSON
20 051 22:51:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 22:51:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 22:51:48 INFO   [wfs.json] - about to encode JSON
20 051 22:51:48 INFO   [wfs.json] - about to encode JSON
20 051 22:51:48 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 22:51:48 INFO   [wfs.json] - about to encode JSON
20 051 22:51:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 22:51:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 22:51:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 22:51:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 22:51:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 051 22:51:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 051 22:51:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 051 22:51:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 051 22:51:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 051 22:51:49 INFO   [wfs.json] - about to encode JSON
20 051 22:51:49 INFO   [wfs.json] - about to encode JSON
20 051 22:51:49 INFO   [wfs.json] - about to encode JSON
20 051 22:51:49 INFO   [wfs.json] - about to encode JSON
20 051 22:51:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 051 22:51:49 INFO   [wfs.json] - about to encode JSON
20 053 22:53:07 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 053 22:53:08 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:08 INFO   [wfs.json] - about to encode JSON
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 053 22:53:08 INFO   [wfs.json] - about to encode JSON
20 053 22:53:08 INFO   [wfs.json] - about to encode JSON
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 053 22:53:08 INFO   [wfs.json] - about to encode JSON
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 053 22:53:08 INFO   [wfs.json] - about to encode JSON
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 053 22:53:08 INFO   [wfs.json] - about to encode JSON
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 053 22:53:08 INFO   [wfs.json] - about to encode JSON
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 053 22:53:08 INFO   [wfs.json] - about to encode JSON
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 053 22:53:08 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 053 22:53:08 INFO   [wfs.json] - about to encode JSON
20 053 22:53:08 INFO   [wfs.json] - about to encode JSON
20 053 22:53:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 053 22:53:45 INFO   [wfs.json] - about to encode JSON
20 053 22:53:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 053 22:53:45 INFO   [wfs.json] - about to encode JSON
20 053 22:53:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 053 22:53:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 053 22:53:45 INFO   [wfs.json] - about to encode JSON
20 053 22:53:45 INFO   [wfs.json] - about to encode JSON
20 053 22:53:45 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 053 22:53:45 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 053 22:53:45 INFO   [wfs.json] - about to encode JSON
20 053 22:53:45 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 054 22:54:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 22:54:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 054 22:54:14 INFO   [wfs.json] - about to encode JSON
20 054 22:54:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 22:54:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 22:54:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 22:54:14 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 054 22:54:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 054 22:54:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 054 22:54:14 INFO   [wfs.json] - about to encode JSON
20 054 22:54:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 054 22:54:14 INFO   [wfs.json] - about to encode JSON
20 054 22:54:14 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 054 22:54:14 INFO   [wfs.json] - about to encode JSON
20 054 22:54:14 INFO   [wfs.json] - about to encode JSON
20 054 22:54:14 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 002 23:02:12 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 002 23:02:12 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 002 23:02:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 23:02:12 INFO   [wfs.json] - about to encode JSON
20 002 23:02:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 23:02:12 INFO   [wfs.json] - about to encode JSON
20 002 23:02:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:12 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 23:02:12 INFO   [wfs.json] - about to encode JSON
20 002 23:02:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 23:02:12 INFO   [wfs.json] - about to encode JSON
20 002 23:02:12 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 23:02:12 INFO   [wfs.json] - about to encode JSON
20 002 23:02:13 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 002 23:02:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 23:02:13 INFO   [wfs.json] - about to encode JSON
20 002 23:02:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 23:02:13 INFO   [wfs.json] - about to encode JSON
20 002 23:02:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:13 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 23:02:13 INFO   [wfs.json] - about to encode JSON
20 002 23:02:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 23:02:13 INFO   [wfs.json] - about to encode JSON
20 002 23:02:13 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 23:02:13 INFO   [wfs.json] - about to encode JSON
20 002 23:02:23 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 002 23:02:24 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 23:02:24 INFO   [wfs.json] - about to encode JSON
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 23:02:24 INFO   [wfs.json] - about to encode JSON
20 002 23:02:24 INFO   [wfs.json] - about to encode JSON
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 23:02:24 INFO   [wfs.json] - about to encode JSON
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 23:02:24 INFO   [wfs.json] - about to encode JSON
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 002 23:02:24 INFO   [wfs.json] - about to encode JSON
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 002 23:02:24 INFO   [wfs.json] - about to encode JSON
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 002 23:02:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 002 23:02:24 INFO   [wfs.json] - about to encode JSON
20 002 23:02:24 INFO   [wfs.json] - about to encode JSON
20 002 23:02:24 INFO   [wfs.json] - about to encode JSON
20 003 23:03:40 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 003 23:03:40 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 23:03:40 INFO   [wfs.json] - about to encode JSON
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 23:03:40 INFO   [wfs.json] - about to encode JSON
20 003 23:03:40 INFO   [wfs.json] - about to encode JSON
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 23:03:40 INFO   [wfs.json] - about to encode JSON
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 23:03:40 INFO   [wfs.json] - about to encode JSON
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 003 23:03:40 INFO   [wfs.json] - about to encode JSON
20 003 23:03:40 INFO   [wfs.json] - about to encode JSON
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 003 23:03:40 INFO   [wfs.json] - about to encode JSON
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 003 23:03:40 INFO   [wfs.json] - about to encode JSON
20 003 23:03:40 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 003 23:03:40 INFO   [wfs.json] - about to encode JSON
20 004 23:04:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 23:04:18 INFO   [wfs.json] - about to encode JSON
20 004 23:04:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 23:04:18 INFO   [wfs.json] - about to encode JSON
20 004 23:04:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:18 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 23:04:18 INFO   [wfs.json] - about to encode JSON
20 004 23:04:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 23:04:18 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 23:04:18 INFO   [wfs.json] - about to encode JSON
20 004 23:04:18 INFO   [wfs.json] - about to encode JSON
20 004 23:04:18 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 004 23:04:24 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 004 23:04:24 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 004 23:04:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 23:04:24 INFO   [wfs.json] - about to encode JSON
20 004 23:04:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 23:04:24 INFO   [wfs.json] - about to encode JSON
20 004 23:04:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 23:04:24 INFO   [wfs.json] - about to encode JSON
20 004 23:04:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 23:04:24 INFO   [wfs.json] - about to encode JSON
20 004 23:04:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 23:04:24 INFO   [wfs.json] - about to encode JSON
20 004 23:04:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:25 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 004 23:04:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 004 23:04:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 004 23:04:25 INFO   [wfs.json] - about to encode JSON
20 004 23:04:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 004 23:04:25 INFO   [wfs.json] - about to encode JSON
20 004 23:04:25 INFO   [wfs.json] - about to encode JSON
20 004 23:04:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 004 23:04:25 INFO   [wfs.json] - about to encode JSON
20 004 23:04:25 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 004 23:04:25 INFO   [wfs.json] - about to encode JSON
20 005 23:05:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 23:05:29 INFO   [wfs.json] - about to encode JSON
20 005 23:05:29 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 005 23:05:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 23:05:29 INFO   [wfs.json] - about to encode JSON
20 005 23:05:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 23:05:29 INFO   [wfs.json] - about to encode JSON
20 005 23:05:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:29 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 23:05:29 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 23:05:29 INFO   [wfs.json] - about to encode JSON
20 005 23:05:29 INFO   [wfs.json] - about to encode JSON
20 005 23:05:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 23:05:34 INFO   [wfs.json] - about to encode JSON
20 005 23:05:34 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 005 23:05:34 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 005 23:05:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 23:05:34 INFO   [wfs.json] - about to encode JSON
20 005 23:05:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:34 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 23:05:34 INFO   [wfs.json] - about to encode JSON
20 005 23:05:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 23:05:34 INFO   [wfs.json] - about to encode JSON
20 005 23:05:34 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 23:05:34 INFO   [wfs.json] - about to encode JSON
20 005 23:05:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 23:05:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 23:05:35 INFO   [wfs.json] - about to encode JSON
20 005 23:05:35 INFO   [wfs.json] - about to encode JSON
20 005 23:05:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 23:05:35 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 23:05:35 INFO   [wfs.json] - about to encode JSON
20 005 23:05:35 INFO   [wfs.json] - about to encode JSON
20 005 23:05:35 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 23:05:35 INFO   [wfs.json] - about to encode JSON
20 005 23:05:42 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 005 23:05:42 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 005 23:05:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 23:05:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 23:05:42 INFO   [wfs.json] - about to encode JSON
20 005 23:05:42 INFO   [wfs.json] - about to encode JSON
20 005 23:05:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 23:05:42 INFO   [wfs.json] - about to encode JSON
20 005 23:05:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 23:05:42 INFO   [wfs.json] - about to encode JSON
20 005 23:05:42 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:42 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 23:05:42 INFO   [wfs.json] - about to encode JSON
20 005 23:05:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 23:05:43 INFO   [wfs.json] - about to encode JSON
20 005 23:05:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 23:05:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 23:05:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:43 INFO   [wfs.json] - about to encode JSON
20 005 23:05:43 INFO   [wfs.json] - about to encode JSON
20 005 23:05:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 23:05:43 INFO   [wfs.json] - about to encode JSON
20 005 23:05:43 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:43 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 23:05:43 INFO   [wfs.json] - about to encode JSON
20 005 23:05:44 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 005 23:05:44 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 23:05:44 INFO   [wfs.json] - about to encode JSON
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 23:05:44 INFO   [wfs.json] - about to encode JSON
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 23:05:44 INFO   [wfs.json] - about to encode JSON
20 005 23:05:44 INFO   [wfs.json] - about to encode JSON
20 005 23:05:44 INFO   [wfs.json] - about to encode JSON
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 23:05:44 INFO   [wfs.json] - about to encode JSON
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 23:05:44 INFO   [wfs.json] - about to encode JSON
20 005 23:05:44 INFO   [wfs.json] - about to encode JSON
20 005 23:05:44 INFO   [wfs.json] - about to encode JSON
20 005 23:05:44 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 23:05:44 INFO   [wfs.json] - about to encode JSON
20 005 23:05:52 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 005 23:05:52 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 005 23:05:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 23:05:52 INFO   [wfs.json] - about to encode JSON
20 005 23:05:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:52 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 23:05:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 23:05:52 INFO   [wfs.json] - about to encode JSON
20 005 23:05:52 INFO   [wfs.json] - about to encode JSON
20 005 23:05:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 23:05:52 INFO   [wfs.json] - about to encode JSON
20 005 23:05:52 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 23:05:52 INFO   [wfs.json] - about to encode JSON
20 005 23:05:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 23:05:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 23:05:53 INFO   [wfs.json] - about to encode JSON
20 005 23:05:53 INFO   [wfs.json] - about to encode JSON
20 005 23:05:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 23:05:53 INFO   [wfs.json] - about to encode JSON
20 005 23:05:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 23:05:53 INFO   [wfs.json] - about to encode JSON
20 005 23:05:53 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:53 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 23:05:53 INFO   [wfs.json] - about to encode JSON
20 005 23:05:56 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 005 23:05:56 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 23:05:56 INFO   [wfs.json] - about to encode JSON
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 23:05:56 INFO   [wfs.json] - about to encode JSON
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 23:05:56 INFO   [wfs.json] - about to encode JSON
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 23:05:56 INFO   [wfs.json] - about to encode JSON
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 23:05:56 INFO   [wfs.json] - about to encode JSON
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 005 23:05:56 INFO   [wfs.json] - about to encode JSON
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 005 23:05:56 INFO   [wfs.json] - about to encode JSON
20 005 23:05:56 INFO   [wfs.json] - about to encode JSON
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 005 23:05:56 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 005 23:05:56 INFO   [wfs.json] - about to encode JSON
20 005 23:05:56 INFO   [wfs.json] - about to encode JSON
20 006 23:06:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 23:06:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 23:06:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 006 23:06:49 INFO   [wfs.json] - about to encode JSON
20 006 23:06:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 23:06:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 006 23:06:49 INFO   [wfs.json] - about to encode JSON
20 006 23:06:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 006 23:06:49 INFO   [wfs.json] - about to encode JSON
20 006 23:06:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 23:06:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 006 23:06:49 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 006 23:06:49 INFO   [wfs.json] - about to encode JSON
20 006 23:06:49 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-54324.58810619308 : 485015.0834740106, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 006 23:06:49 INFO   [wfs.json] - about to encode JSON
20 006 23:06:49 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 010 23:10:10 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 010 23:10:10 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 010 23:10:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[111390.88921606904 : 319299.60615174845, 5973280.237127263 : 6188526.908778319] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 23:10:10 INFO   [wfs.json] - about to encode JSON
20 010 23:10:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:10 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[111390.88921606904 : 319299.60615174845, 5973280.237127263 : 6188526.908778319] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 23:10:10 INFO   [wfs.json] - about to encode JSON
20 010 23:10:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[111390.88921606904 : 319299.60615174845, 5973280.237127263 : 6188526.908778319] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 23:10:10 INFO   [wfs.json] - about to encode JSON
20 010 23:10:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[111390.88921606904 : 319299.60615174845, 5973280.237127263 : 6188526.908778319] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 23:10:10 INFO   [wfs.json] - about to encode JSON
20 010 23:10:10 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[111390.88921606904 : 319299.60615174845, 5973280.237127263 : 6188526.908778319] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 23:10:10 INFO   [wfs.json] - about to encode JSON
20 010 23:10:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 23:10:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 23:10:11 INFO   [wfs.json] - about to encode JSON
20 010 23:10:11 INFO   [wfs.json] - about to encode JSON
20 010 23:10:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:11 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 23:10:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 23:10:11 INFO   [wfs.json] - about to encode JSON
20 010 23:10:11 INFO   [wfs.json] - about to encode JSON
20 010 23:10:11 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 23:10:11 INFO   [wfs.json] - about to encode JSON
20 010 23:10:26 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 010 23:10:26 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[111390.88921606904 : 319299.60615174845, 5973280.237127263 : 6188526.908778319] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[111390.88921606904 : 319299.60615174845, 5973280.237127263 : 6188526.908778319] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[111390.88921606904 : 319299.60615174845, 5973280.237127263 : 6188526.908778319] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 23:10:26 INFO   [wfs.json] - about to encode JSON
20 010 23:10:26 INFO   [wfs.json] - about to encode JSON
20 010 23:10:26 INFO   [wfs.json] - about to encode JSON
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[111390.88921606904 : 319299.60615174845, 5973280.237127263 : 6188526.908778319] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 23:10:26 INFO   [wfs.json] - about to encode JSON
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[111390.88921606904 : 319299.60615174845, 5973280.237127263 : 6188526.908778319] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 23:10:26 INFO   [wfs.json] - about to encode JSON
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 23:10:26 INFO   [wfs.json] - about to encode JSON
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 23:10:26 INFO   [wfs.json] - about to encode JSON
20 010 23:10:26 INFO   [wfs.json] - about to encode JSON
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 23:10:26 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 23:10:26 INFO   [wfs.json] - about to encode JSON
20 010 23:10:26 INFO   [wfs.json] - about to encode JSON
20 010 23:10:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[74701.11563918446 : 355989.37972863304, 5998963.078631082 : 6162844.067274501] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 010 23:10:55 INFO   [wfs.json] - about to encode JSON
20 010 23:10:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[74701.11563918446 : 355989.37972863304, 5998963.078631082 : 6162844.067274501] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 010 23:10:55 INFO   [wfs.json] - about to encode JSON
20 010 23:10:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[74701.11563918446 : 355989.37972863304, 5998963.078631082 : 6162844.067274501] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 010 23:10:55 INFO   [wfs.json] - about to encode JSON
20 010 23:10:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[74701.11563918446 : 355989.37972863304, 5998963.078631082 : 6162844.067274501] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 010 23:10:55 INFO   [wfs.json] - about to encode JSON
20 010 23:10:55 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 010 23:10:55 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[74701.11563918446 : 355989.37972863304, 5998963.078631082 : 6162844.067274501] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 010 23:10:55 INFO   [wfs.json] - about to encode JSON
20 014 23:14:05 WARN   [support.DisposableBeanAdapter] - Destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@2b21c9cc[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@5161771] rejected from java.util.concurrent.ThreadPoolExecutor@6a5481a6[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
20 014 23:14:05 WARN   [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
20 014 23:14:05 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
20 016 23:16:36 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
20 016 23:16:38 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
20 016 23:16:38 CONFIG [org.geoserver] - Loading catalog /usr/local/tomcat/webapps/geoserver/data
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'restricted'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'dem'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'capitals'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'green'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'point'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'raster'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'generic'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'polygon'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'poi'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'simple_streams'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'simple_roads'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'line'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'burg'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'grass'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'rain'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'population'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'pophatch'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded default workspace 'toto'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded workspace 'toto'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded workspace 'nurc'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded workspace 'tp2'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded workspace 'sf'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded workspace 'cite'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded workspace 'tiger'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded workspace 'sde'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded workspace 'topp'
20 016 23:16:38 CONFIG [org.geoserver] - Loaded data store 'toto', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'map_batiment', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'map_batiment'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'universit__d_orleans_test', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'universit__d_orleans_test'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'map_transports', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'map_transports'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'map_services', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'map_services'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'map_residence', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'map_residence'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'map_cafet', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'map_cafet'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'restricted'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'bugsites'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'streams'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'archsites'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'roads'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'sfdem'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'mosaic'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'poi'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'states'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
20 016 23:16:39 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
20 016 23:16:39 CONFIG [org.geoserver] - Read catalog in 1.715 s
20 016 23:16:39 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl-56d955ca:18c8984536e:-8000', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded service 'wms', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
20 016 23:16:39 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
20 016 23:16:39 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/usr/local/tomcat/webapps/geoserver/data/gwc'.
20 016 23:16:40 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
20 016 23:16:40 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
20 016 23:16:40 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
20 016 23:16:40 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
20 016 23:16:40 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
20 016 23:16:40 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
20 016 23:16:40 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
20 016 23:16:40 CONFIG [gwc.layer] - Loaded 28 tile layers in 15.24 ms
20 016 23:16:40 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
20 016 23:16:40 CONFIG [storage.DefaultStorageFinder] - Reverting to java.io.tmpdir '/usr/local/tomcat/temp/geowebcache' for storage. Please set GEOWEBCACHE_CACHE_DIR.
20 016 23:16:40 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
20 016 23:16:40 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
20 016 23:16:40 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/usr/local/tomcat/webapps/geoserver/data/gwc'.
20 016 23:16:40 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/usr/local/tomcat/webapps/geoserver/data/gwc'.
20 016 23:16:40 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
20 016 23:16:40 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
20 016 23:16:40 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
20 016 23:16:40 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
20 016 23:16:40 CONFIG [diskquota.DiskQuotaMonitor] - 28 layers attached to global quota 500.0 MB
20 016 23:16:40 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
20 016 23:16:40 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
20 016 23:16:40 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
20 016 23:16:42 WARN   [gce.imagemosaic] - Unable to set ordering between tiff readers spi
20 016 23:16:43 CONFIG [geoserver.security] - Start reloading user/groups for service named default
20 016 23:16:43 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
20 016 23:16:43 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
20 016 23:16:43 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
20 019 23:19:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 23:19:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 23:19:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 23:19:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 23:19:28 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 019 23:19:28 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 019 23:19:28 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 019 23:19:28 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 019 23:19:28 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 019 23:19:28 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 019 23:19:28 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 019 23:19:28 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 019 23:19:28 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 019 23:19:28 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 019 23:19:28 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 019 23:19:28 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 027 23:27:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 23:27:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 23:27:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 23:27:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 23:27:40 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 027 23:27:40 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 027 23:27:40 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 027 23:27:40 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 027 23:27:40 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 027 23:27:40 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 027 23:27:40 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 027 23:27:40 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 027 23:27:40 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 027 23:27:40 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 027 23:27:40 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 027 23:27:40 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 028 23:28:13 WARN   [support.DisposableBeanAdapter] - Destroy method 'destroy' on bean with name 'gwcMemoryBlobStore' threw an exception: java.util.concurrent.RejectedExecutionException: Task java.util.concurrent.FutureTask@3004de6d[Not completed, task = org.geowebcache.storage.blobstore.memory.MemoryBlobStore$BlobStoreTask@af3d710] rejected from java.util.concurrent.ThreadPoolExecutor@118fab36[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1]
20 028 23:28:13 WARN   [support.DisposableBeanAdapter] - Invocation of destroy method failed on bean with name 'geoServerLoader': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'geoWebCacheExtensions': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
20 028 23:28:13 INFO   [geoserver.logging] - Beginning GeoServer cleanup sequence
20 028 23:28:31 CONFIG [geoserver.logging] - Log4j 2 configuration set to DEFAULT_LOGGING.xml
20 028 23:28:32 CONFIG [org.geoserver] - GeoServer configuration lock is enabled
20 028 23:28:32 CONFIG [org.geoserver] - Loading catalog /usr/local/tomcat/webapps/geoserver/data
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'green'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'dem'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'restricted'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'capitals'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'generic'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'raster'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'cite_lakes'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'giant_polygon'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'point'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'polygon'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'poi'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'simple_streams'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'line'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'population'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'burg'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'rain'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'simple_roads'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'grass'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'poly_landmarks'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'pophatch'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded default workspace 'toto'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded workspace 'sf'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded workspace 'toto'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded style 'tiger_roads'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded workspace 'tp2'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded workspace 'nurc'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded workspace 'tiger'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded workspace 'it.geosolutions'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded workspace 'cite'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded workspace 'sde'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded workspace 'topp'
20 028 23:28:32 CONFIG [org.geoserver] - Loaded data store 'toto', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'universit__d_orleans_test', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'universit__d_orleans_test'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'map_batiment', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'map_batiment'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'map_services', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'map_services'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'map_residence', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'map_residence'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'map_cafet', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'map_cafet'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'map_transports', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'map_transports'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded coverage store 'sfdem', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded coverage 'sfdem', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'sfdem'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded data store 'sf', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'bugsites', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'bugsites'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'restricted', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'restricted'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'archsites', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'archsites'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'roads', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'roads'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'streams', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'streams'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded coverage store 'worldImageSample', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded coverage 'Img_Sample', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'Img_Sample'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded coverage store 'img_sample2', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded coverage 'Pk50095', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'Pk50095'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded coverage store 'arcGridSample', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'Arc_Sample'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded coverage store 'mosaic', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded coverage 'mosaic', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'mosaic'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded data store 'nyc', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'poly_landmarks'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'poi', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'poi'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'giant_polygon', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'giant_polygon'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'tiger_roads', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'tiger_roads'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded data store 'taz_shapes', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'tasmania_water_bodies'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'tasmania_cities'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'tasmania_roads'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded data store 'states_shapefile', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded feature type 'states', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer 'states'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer group 'tasmania'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer group 'spearfish'
20 028 23:28:33 CONFIG [org.geoserver] - Loaded layer group 'tiger-ny'
20 028 23:28:33 CONFIG [org.geoserver] - Read catalog in 1.376 s
20 028 23:28:33 CONFIG [org.geoserver] - Loaded service 'WMTSInfoImpl--32849505:18c898f387f:-8000', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded service 'wms', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded service 'wfs', enabled
20 028 23:28:33 CONFIG [org.geoserver] - Loaded service 'wcs', enabled
20 028 23:28:33 CONFIG [gwc.config] - Will look for 'geowebcache.xml' in directory '/usr/local/tomcat/webapps/geoserver/data/gwc'.
20 028 23:28:34 WARN   [config.XMLConfiguration] - GWC configuration validation error: cvc-elt.1.a: Cannot find the declaration of element 'gwcConfiguration'.
20 028 23:28:34 WARN   [config.XMLConfiguration] - Will try to use configuration anyway. Please check the order of declared elements against the schema.
20 028 23:28:34 CONFIG [config.XMLConfiguration] - Initializing GridSets from gwc
20 028 23:28:34 CONFIG [config.XMLConfiguration] - Initializing layers from gwc
20 028 23:28:34 CONFIG [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
20 028 23:28:34 CONFIG [gwc.layer] - GeoServer TileLayer store base directory is: gwc-layers
20 028 23:28:34 CONFIG [gwc.layer] - Loading tile layers from gwc-layers
20 028 23:28:34 CONFIG [gwc.layer] - Loaded 28 tile layers in 10.92 ms
20 028 23:28:34 CONFIG [storage.BlobStoreAggregator] - BlobStoreConfiguration gwc contained no blob store infos.
20 028 23:28:34 CONFIG [storage.DefaultStorageFinder] - Reverting to java.io.tmpdir '/usr/local/tomcat/temp/geowebcache' for storage. Please set GEOWEBCACHE_CACHE_DIR.
20 028 23:28:34 CONFIG [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
20 028 23:28:34 CONFIG [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
20 028 23:28:34 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota.xml' in directory '/usr/local/tomcat/webapps/geoserver/data/gwc'.
20 028 23:28:34 CONFIG [gwc.config] - Will look for 'geowebcache-diskquota-jdbc.xml' in directory '/usr/local/tomcat/webapps/geoserver/data/gwc'.
20 028 23:28:34 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
20 028 23:28:34 CONFIG [diskquota.ConfigLoader] - DiskQuota configuration is not readable: gwc/geowebcache-diskquota.xml
20 028 23:28:34 CONFIG [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
20 028 23:28:34 CONFIG [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
20 028 23:28:34 CONFIG [diskquota.DiskQuotaMonitor] - 28 layers attached to global quota 500.0 MB
20 028 23:28:34 CONFIG [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
20 028 23:28:34 CONFIG [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
20 028 23:28:34 CONFIG [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
20 028 23:28:36 WARN   [gce.imagemosaic] - Unable to set ordering between tiff readers spi
20 028 23:28:36 CONFIG [geoserver.security] - Start reloading user/groups for service named default
20 028 23:28:36 CONFIG [geoserver.security] - Reloading user/groups successful for service named default
20 028 23:28:36 CONFIG [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
20 028 23:28:36 CONFIG [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
20 028 23:28:37 INFO   [geoserver.security] - Strong cryptography is available
20 028 23:28:40 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 028 23:28:40 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 028 23:28:40 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 028 23:28:41 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 028 23:28:41 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 028 23:28:41 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 028 23:28:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 23:28:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 23:28:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 23:28:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 23:28:48 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 028 23:28:48 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 028 23:28:49 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 028 23:28:49 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 028 23:28:49 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 028 23:28:49 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 028 23:28:49 WARN   [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
20 028 23:28:49 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 028 23:28:49 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 028 23:28:49 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 028 23:28:49 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 028 23:28:49 ERROR  [geoserver.ows] - 
org.geoserver.wfs.WFSException: Error occurred getting features
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:646)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:109)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:51)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy111.getFeature(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:855)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:268)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:580)
	at org.geoserver.catalog.ResourcePool.acquireFeatureType(ResourcePool.java:983)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:971)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:954)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:946)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:931)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:134)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:144)
	at jdk.proxy3/jdk.proxy3.$Proxy49.getFeatureType(Unknown Source)
	at org.geoserver.security.decorators.DecoratingFeatureTypeInfo.getFeatureType(DecoratingFeatureTypeInfo.java:112)
	at org.geoserver.security.decorators.SecuredFeatureTypeInfo.getFeatureType(SecuredFeatureTypeInfo.java:58)
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:377)
	... 113 more
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2265)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:940)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:261)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:73)
	at org.geoserver.catalog.ResourcePool.createDataAccess(ResourcePool.java:664)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:561)
	... 126 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:42)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:2249)
	... 131 more
Caused by: org.postgresql.util.PSQLException: Connection to 172.17.0.2:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:319)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:49)
	at org.postgresql.jdbc.PgConnection.<init>(PgConnection.java:223)
	at org.postgresql.Driver.makeConnection(Driver.java:400)
	at org.postgresql.Driver.connect(Driver.java:259)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 135 more
Caused by: java.net.ConnectException: Connection refused
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:751)
	at org.postgresql.core.PGStream.createSocket(PGStream.java:241)
	at org.postgresql.core.PGStream.<init>(PGStream.java:98)
	at org.postgresql.core.v3.ConnectionFactoryImpl.tryConnect(ConnectionFactoryImpl.java:109)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:235)
	... 143 more
20 029 23:29:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 23:29:37 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 23:29:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 23:29:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 23:29:38 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 029 23:29:38 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 029 23:29:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 029 23:29:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 029 23:29:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 029 23:29:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 029 23:29:38 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-98658.0645115953 : 529348.5598794128, 5958757.201753079 : 6203049.944152503] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 029 23:29:38 INFO   [wfs.json] - about to encode JSON
20 029 23:29:38 INFO   [wfs.json] - about to encode JSON
20 029 23:29:38 INFO   [wfs.json] - about to encode JSON
20 029 23:29:38 INFO   [wfs.json] - about to encode JSON
20 029 23:29:38 INFO   [wfs.json] - about to encode JSON
20 043 23:43:02 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 043 23:43:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 23:43:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 23:43:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 23:43:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 043 23:43:02 INFO   [wfs.json] - about to encode JSON
20 043 23:43:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 23:43:02 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 043 23:43:02 INFO   [wfs.json] - about to encode JSON
20 043 23:43:02 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 043 23:43:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 043 23:43:03 INFO   [wfs.json] - about to encode JSON
20 043 23:43:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 043 23:43:03 INFO   [wfs.json] - about to encode JSON
20 043 23:43:03 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 043 23:43:03 INFO   [wfs.json] - about to encode JSON
20 044 23:44:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 23:44:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 23:44:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 23:44:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 23:44:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 23:44:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 23:44:15 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 044 23:44:15 INFO   [wfs.json] - about to encode JSON
20 044 23:44:15 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 23:44:15 INFO   [wfs.json] - about to encode JSON
20 044 23:44:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 23:44:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 23:44:15 INFO   [wfs.json] - about to encode JSON
20 044 23:44:15 INFO   [wfs.json] - about to encode JSON
20 044 23:44:15 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 23:44:15 INFO   [wfs.json] - about to encode JSON
20 044 23:44:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 23:44:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 23:44:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 23:44:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 044 23:44:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 044 23:44:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 044 23:44:24 INFO   [wfs.json] - about to encode JSON
20 044 23:44:24 INFO   [wfs.json] - about to encode JSON
20 044 23:44:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 23:44:24 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 044 23:44:24 INFO   [wfs.json] - about to encode JSON
20 044 23:44:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 044 23:44:24 INFO   [wfs.json] - about to encode JSON
20 044 23:44:24 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 044 23:44:24 INFO   [wfs.json] - about to encode JSON
20 044 23:44:24 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 049 23:49:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 23:49:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 23:49:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 23:49:00 ERROR  [geoserver.ows] - 
javax.xml.stream.XMLStreamException: ParseError at [row,col]:[1,1]
Message: Content is not allowed in prolog.
	at java.xml/com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.next(XMLStreamReaderImpl.java:652)
	at org.geoserver.ows.Dispatcher.readOpPost(Dispatcher.java:1593)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:503)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:177)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1043)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:73)
	at org.geoserver.ows.HTTPHeadersCollector.doFilter(HTTPHeadersCollector.java:48)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:194)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:70)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:43)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:39)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:53)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:71)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:52)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:75)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:142)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.XFrameOptionsFilter.doFilter(XFrameOptionsFilter.java:77)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:49)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.filters.CorsFilter.handleSimpleCORS(CorsFilter.java:238)
	at org.apache.catalina.filters.CorsFilter.doFilter(CorsFilter.java:150)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:670)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1583)
20 049 23:49:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_services
    outputFormat = application/json
    resultType = results
20 049 23:49:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 23:49:00 INFO   [geoserver.wfs] - 
Request: getServiceInfo
20 049 23:49:00 INFO   [wfs.json] - about to encode JSON
20 049 23:49:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_batiment
    outputFormat = application/json
    resultType = results
20 049 23:49:00 INFO   [wfs.json] - about to encode JSON
20 049 23:49:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_cafet
    outputFormat = application/json
    resultType = results
20 049 23:49:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_transports
    outputFormat = application/json
    resultType = results
20 049 23:49:00 INFO   [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        filter = [  bbox ReferencedEnvelope[-196497.4607166209 : 627187.9560844384, 5920232.939497351 : 6241574.2064082315] ]
        srsName = EPSG:3857
        typeName[0] = {toto}map_residence
    outputFormat = application/json
    resultType = results
20 049 23:49:00 INFO   [wfs.json] - about to encode JSON
20 049 23:49:00 INFO   [wfs.json] - about to encode JSON
20 049 23:49:00 INFO   [wfs.json] - about to encode JSON
